<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Geosoft.GX.Controls</name>
    </assembly>
    <members>
        <member name="T:Geosoft.GX.Controls.AdvancedButtonControl">
            <summary>
            Implements advanced button functionality on <see cref="T:Geosoft.GX.Controls.BaseForm"/> derived forms.
            </summary>
            <remarks>
            By placing this control onto a <see cref="T:Geosoft.GX.Controls.PanelControl"/> positioned in the center of the <see cref="T:Geosoft.GX.Controls.BaseForm"/>
            the button will cause the area below the panel to be collapsed when the form is loaded. This button can then be used to
            automatically expand/collapse the form to reveal more advanced features or hide them.
            
            Note - Pay close attention to the anchoring of the parent control if encountering strange collapse/expand UI issues, 
            as this can play a key role with how toggling this control effects the overall layout of the form.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.AdvancedButtonControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.UserControl.Load"></see> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.ExpandedState">
            <summary>
            Show a dialog in an expanded or collapsed state
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.ExpandedStateHeight">
            <summary>
            Get/Modify the Expanded state height. This can be necessary if you hide/show controls
            in your GX and need to adjust the expanded size to accomodate that.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.CollapsedStateHeight">
            <summary>
            Get/Modify the Collapsed state height. This can be necessary if you hide/show controls
            in your GX and need to adjust the collapsed size to accomodate that.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.HideControls">
            <summary>
            	<para>Hides the controls in the advanced region. This ensures, for instance, that
              the controls are not included in the TAB order when the advanced controls are hidden.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.IsVisibilityControlledFor(System.Windows.Forms.Control)">
            <summary>
            Check if visibility for a control will be affected by expanding or collapsing the UI with this button
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.RestoreParentHandlersLink(System.Boolean)">
            <summary>
            Restore the linking between the Parent control handlers and the AdvancedButtonControl manager
            </summary>
            <param name="visible">Visibility when first initiated</param>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.RemoveFromVisibilityStateControlList(System.Windows.Forms.Control)">
            <summary>
            Removes the specified control from the visibility list
            </summary>
            <param name="control">Control to remove</param>
        </member>
        <member name="E:Geosoft.GX.Controls.AdvancedButtonControl.OnExpanded">
            <summary>
            Occurs when the advanced panel is shown. Expanding the panel sets to visible all the controls contained therein, so use this
            to hide any controls you don't want to be visible when the panel is expanded.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.AdvancedButtonControl.OnHidden">
            <summary>
            Occurs when the advanced panel is hidden. 
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.ShowControls">
            <summary>
            	<para>Shows the controls in the advanced region. This ensures, for instance, that
              the controls are not included in the TAB order when the advanced controls are hidden.
              The Visible state of the control is reset to its initial value (whether visible or not).</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.BackColor">
            <summary>Gets or sets the background color for the control.</summary>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor"></see> property.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.Margin">
            <summary>Gets or sets the space between controls.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between controls.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.MaximumSize">
            <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.AdvancedButtonControl.MinimumSize">
            <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Geosoft.GX.Controls.AdvancedButtonControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.AdvancedButtonControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.BaseEditControl">
            <summary>
            Base class implementing shared functionality of all edit controls such as EditIntControl, EditRealControl and EditStringControl
            </summary>
            <exclude/>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_bRequired">
            <summary>
            if value is required
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_bMinIncl">
            <summary>
            if minimum value is inclusive
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_bMaxIncl">
            <summary>
            if maximum value is inclusive
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_tbText">
            <summary>
            Text box control
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_lblUnits">
            <summary>
            Units label control
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_panel">
            <summary>
            panel to control location and sizes of controls
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseEditControl.m_btnBitmap">
            <summary>
            button control
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.BaseEditControl.Required"/> property changes
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.BtnClick">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.BaseEditControl.BitmapButton"/> is set and the button is clicked.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.TextBoxLeave">
            <summary>
            Fired when control leaves the text box.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.BaseEditControl.CommitRevertEventArgs">
            <summary>
            Arguments for <see cref="E:Geosoft.GX.Controls.BaseEditControl.CommitRevert"/>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.CommitRevertEventArgs.Reverted">
            <summary>
            Was the value committed (Enter key, lost focus) or reverted (Escape key)
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.CommitRevert">
            <summary>
            Add event handler to get commit/revert event and behaviour
            </summary>
            <remarks>
            If this event is handled the current value is backed when the control gains focus.
            Enter key or lost focus will result in the value being "committed" (<see cref="P:Geosoft.GX.Controls.BaseEditControl.CommitRevertEventArgs.Reverted"/> = false).
            Escape key will revert to backed up value (<see cref="P:Geosoft.GX.Controls.BaseEditControl.CommitRevertEventArgs.Reverted"/> = false).
            </remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.TextBox">
            <summary>
            Windows Forms Text Box Control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.Button">
            <summary>
            Windows Forms Button Control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.AcceptsReturn">
            <summary>
             Gets or sets a value indicating whether pressing ENTER in a multiline System.Windows.Forms.TextBox
             control creates a new line of text in the control or activates the default button for the form.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.BitmapButton">
            <summary>
            Enable/Disable bitmap button
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.ButtonText">
            <summary>
            Button Text
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.ButtonToolTip">
            <summary>
            Button ToolTip text
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.Units">
            <summary>
            Display a string (usually units) to the right of this control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.ButtonImage">
            <summary>
            Image for bitmap button
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.ReadOnly">
            <summary>
            Gets or sets the readonly setting for the edit control from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.MaximumLength">
            <summary>
            Gets or sets the maximum number of characters allowable in the textbox.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.Required">
            <summary>
            If true, then the control may not be left blank (dummy).
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.TextAlign">
            <summary>
            Horizontal alignment of the text in the edit box
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.strCurrentValue">
            <summary>
            Get the current value as text within the control, whether it validates as a number or not.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.ScrollToEnd">
            <summary>
            Make the end of the text visible
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.TextChanged">
            <summary>
            Occurs when the TextBox's text property changes.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.OnTextChanged(System.Object,System.EventArgs)">
            <summary>
            text change event
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.OnBtnClick(System.Object,System.EventArgs)">
            <summary>
            Occurs when bitmap control (e.g. the calculator button) is clicked.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.OnTextBoxLeave(System.Object,System.EventArgs)">
            <summary>
            Occurs when control leaves the text box portion of the control
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.EnterKeyPressed">
            <summary>
            Occurs when the enter key is pressed (the default button will not be pressed if this event is assigned)
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.BaseEditControl.EscapeKeyPressed">
            <summary>
            Occurs when the escape key is pressed (the default button will not be pressed if this event is assigned)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseEditControl.m_tbText_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            keypress event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DualChoiceVerticalRadioControl">
            <summary>
            Horizontal dual choice radio button that helps with designing forms for layout growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current radio button passes valiation tests.
            </summary>
            <param name="strError">The error message returned if the control does not validate.</param>
            <returns>Always true except if EnumValues were not configured.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.EnumValue1">
            <summary>
            Gets or sets the numeric value associated with Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.EnumValue2">
            <summary>
            Gets or sets the numeric value associated with Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.DefaultValue">
            <summary>
            Gets or sets the default value of this control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.Text1">
            <summary>
            Gets or sets the text next to Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.Text2">
            <summary>
            Gets or sets the text next to Radio Button 2.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.RadioButton1">
            <summary>
            Gets the Radio Button 1 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.RadioButton2">
            <summary>
            Gets the Radio Button 2 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.ReadOnly">
            <summary>
            Gets or sets the read-only status of this control; when set, the unchecked option is disabled to prevent changing.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.Checked">
            <summary>
            Get/set the checked state of second radio button
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.CheckedChanged">
            <summary>
            Occurs when either radio button's Checked property is changed.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.Click">
            <summary>
            Occurs when either radio button control is clicked.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceVerticalRadioControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FormExtensions">
            <summary>
            Extension methods for a <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FormExtensions.HideAndDisableControls(System.Windows.Forms.Form,System.Collections.Generic.IEnumerable{System.Windows.Forms.Control},System.Collections.Generic.IEnumerable{System.Windows.Forms.Control})">
            <summary>
            Hide and disable any <see cref="T:System.Windows.Forms.Control"/> provided in <paramref name="hideAndDisable"/>, shifting any <see cref="T:System.Windows.Forms.Control"/> provided
            in <paramref name="verticallyShift"/> to take its place vertically. Finally, resize the <see cref="T:System.Windows.Forms.Form"/> provided in <paramref name="parentForm"/>
            to contract and fit the new size.
            </summary>
            <remarks>This method assumes that the controls provided in <paramref name="hideAndDisable"/> are located in *contiguous*
            positions on the <paramref name="parentForm"/>.</remarks>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Database.DBLock">
            <summary>
            
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.Database.DBLock.DB">
            <summary>
            
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.DBLock.FromName(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.DBLock.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Database.SymbLock">
            <summary>
            
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.Database.SymbLock.Symbol">
            <summary>
            
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.SymbLock.FindOrCreate(GeoEngine.Core.GXNetX.CDB,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Find or create a symbol (and lock it).
            </summary>
            <param name="db">The current database.</param>
            <param name="name">The name of the symnol.</param>
            <param name="type"><see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant"/></param>
            <param name="category"><see cref="M:GeoEngine.Core.GXNetX.CDB.CreateSymb(System.String,System.Int32,System.Int32,System.Int32)"/></param>
            <param name="dbOwn"><see cref="T:GeoEngine.Core.GXNetX.DB_OWNConstant"/></param>
            <param name="lock"><see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant"/></param>
            <param name="wait"><see cref="T:GeoEngine.Core.GXNetX.DB_WAITConstant"/></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.SymbLock.Find(GeoEngine.Core.GXNetX.CDB,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Find or create a symbol (and lock it).
            </summary>
            <param name="db">The current database.</param>
            <param name="name">The name of the symnol.</param>
            <param name="type"><see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant"/></param>
            <param name="category"><see cref="M:GeoEngine.Core.GXNetX.CDB.CreateSymb(System.String,System.Int32,System.Int32,System.Int32)"/></param>
            <param name="dbOwn"><see cref="T:GeoEngine.Core.GXNetX.DB_OWNConstant"/></param>
            <param name="lock"><see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant"/></param>
            <param name="wait"><see cref="T:GeoEngine.Core.GXNetX.DB_WAITConstant"/></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.SymbLock.IsValid">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.SymbLock.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Database.SymbLock.IsLocked">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CurrentUsage.IsDesignMode">
            <summary>
            Checks <see cref="P:System.ComponentModel.LicenseManager.UsageMode"/> to see whether we are
            currently in Design mode. Some components break the designer, this
            method allows us to explicitly skip certain operations at Design time.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IGraphicsAdapter">
            <summary>
            Provides an adapter to an instance of a <see cref="T:System.Windows.Forms.PaintEventArgs"/>,
            typically called during the <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)"/>
            event. Also provides methods for drawing through the <see cref="T:System.Drawing.Graphics"/>
            instance passed into the event.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Forwards to <see cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
            <summary>
            Forwards to <see cref="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)" />
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Forwards to <see cref="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Forwards to <see cref="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])" />
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Forwards to <see cref="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)"/>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.DrawRoundedRectangle(System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draw a custom rounded rectangle using a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.FillRoundedRectangle(System.Drawing.Brush,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Fill a custom rounded rectangle using a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IGraphicsAdapter.ClipRectangle">
            <summary>
            Defines the <see cref="T:System.Drawing.Rectangle"/> for the graphics event.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.RealGraphicsAdapter.RoundedRect(System.Drawing.Rectangle,System.Int32)">
            <summary>
            https://stackoverflow.com/a/33853557/2942725
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GraphicsEventAdapter">
            <summary>
            Utilities for <see cref="T:Geosoft.GX.Controls.Helpers.IGraphicsAdapter"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GraphicsEventAdapter.ToGraphicsAdapter(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Wraps an existing <see cref="T:System.Windows.Forms.PaintEventArgs"/> in
            an abstracted interface: <see cref="T:Geosoft.GX.Controls.Helpers.IGraphicsAdapter"/>.
            </summary>
            <param name="e">The incoming paint event to wrap.</param>
            <returns>The interface, exposing required methods.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ProjectUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ProjectUtils.LoadedDocuments(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
            Yields all documents currently contained and open within the project (<see cref="M:Geosoft.Desktop.GXNetX.CPROJ.iListLoadedDocuments(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVV,System.String)"/>).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ProjectUtils.Documents(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
            Yields all documents currently contained within the project (<see cref="M:Geosoft.Desktop.GXNetX.CPROJ.iListDocuments(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVV,System.String)"/>).
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Reactive.ObservableUtils">
            <summary>
            Utility methods for <see cref="T:System.IObservable`1"/> components.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Reactive.ObservableUtils.WhereLatestFrom``2(System.IObservable{``0},System.IObservable{``1},System.Func{``1,System.Boolean})">
            <summary>
            Apply a <paramref name="predicate"/> to the latest value retrieved from <paramref name="other"/>.
            Will effectively filter the <paramref name="source"/> by another <see cref="T:System.IObservable`1"/>.
            Finally, it selects just the source value, allowing for continuation disregarding the joined
            <typeparamref name="TOther"/>.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TOther">The other type, to apply the predicate to.</typeparam>
            <param name="source">The source observable sequence.</param>
            <param name="other">The observable sequence to filter by.</param>
            <param name="predicate">A predicate to apply to the second sequence to filter the source sequence by.</param>
            <returns>The obserable source sequence, filtered by another observable sequence.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Reactive.ObservableUtils.WhereLatestFromT``2(System.IObservable{``0},System.IObservable{``1},System.Func{System.ValueTuple{``0,``1},System.Boolean})">
            <summary>
            Apply a <paramref name="predicate"/> to the latest value retrieved from <paramref name="other"/>.
            Will effectively filter the <paramref name="source"/> by another <see cref="T:System.IObservable`1"/>.
            Finally, it selects just the source value, allowing for continuation disregarding the joined
            <typeparamref name="TOther"/>.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <typeparam name="TOther">The other type, to apply the predicate to.</typeparam>
            <param name="source">The source observable sequence.</param>
            <param name="other">The observable sequence to filter by.</param>
            <param name="predicate">A predicate to apply to the second sequence to filter the source sequence by.</param>
            <returns>The obserable source sequence, filtered by another observable sequence.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Reactive.ObservableUtils.WhereLatestFrom``1(System.IObservable{``0},System.IObservable{System.Boolean})">
            <summary>
            Filters with to the latest value retrieved from <paramref name="observableB"/>.
            Will effectively filter the <paramref name="source"/> by another <see cref="T:System.IObservable`1"/>.
            Finally, it selects just the source value, allowing for continuation disregarding the joined
            observable bool.
            </summary>
            <typeparam name="TSource">The source type.</typeparam>
            <param name="source">The source observable sequence.</param>
            <param name="observableB">The observable bool to filter by.</param>
            <returns>The obserable source sequence, filtered by another observable bool sequence.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DisplaySettings">
            <summary>
            Utility methods for interacting with displays/monitors.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DisplaySettings.GetDisplayScalingFactor(System.Windows.Forms.Screen)">
            <summary>
            Retrieves the scaling factor for the provided <see cref="T:System.Windows.Forms.Screen"/> as a <see cref="T:System.Double"/>, or <see cref="F:System.Double.NaN"/> if
            an exception is encountered.
            </summary>
            <remarks>A scaling factor of 150% would return 1.5.</remarks>
            <param name="target"></param>
            <returns>The scaling factor of the provided screen, or <see cref="F:System.Double.NaN"/> if an exception was caught.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <see cref="P:System.Windows.Forms.Screen.DeviceName"/> is null or empty.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.SuspendLayoutUtil">
            <summary>
            Utility class to <see cref="M:System.Windows.Forms.Control.SuspendLayout"/> and
            <see cref="M:System.Windows.Forms.Control.ResumeLayout"/> between an operation.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SuspendLayoutUtil.SuspendLayoutFor(System.Windows.Forms.Control,System.Action,System.Nullable{System.Boolean})">
            <summary>
            Wrap the <paramref name="action"/> in calls to <see cref="M:System.Windows.Forms.Control.SuspendLayout"/>
            and <see cref="M:System.Windows.Forms.Control.ResumeLayout"/>. Useful for any <see cref="T:System.Action"/>
            that is likely to update the UI.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.SynchronizationContextUtils">
            <summary>
            Some UI actions seem to change the current Synchronization present in 
            <see cref="P:System.Threading.SynchronizationContext.Current"/>. The utility methods present 
            in this class provide a means to cache and restore the current synchronization 
            context throughout a particular action.
            </summary>
            <remarks>
            See https://stackoverflow.com/q/32439669/2942725 for details.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SynchronizationContextUtils.Persist``1(System.Func{``0})">
            <summary>
            Ensures that <see cref="P:System.Threading.SynchronizationContext.Current"/> is persisted
            throughout invocation of the provided function.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SynchronizationContextUtils.Persist(System.Action)">
            <summary>
            Ensures that <see cref="P:System.Threading.SynchronizationContext.Current"/> is persisted 
            throughout invocation of the provided action.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GXProgressBridge">
            <summary>
            Encapsulates callbacks used to provide progress during GX execution <see cref="T:Geosoft.Engine.Core.SWIG.ISys.ProgressCallback"/>.
            </summary>
            <remarks>
            Default callbacks are applied for any unused callbacks during instantation.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GXProgressBridge.Make(System.Func{System.IntPtr,System.Int16,System.Int16},System.Func{System.IntPtr,System.Int16},System.Action{System.IntPtr,System.Int32,System.String,System.Int16},System.Action{System.IntPtr,System.Int32,System.Int16},System.Func{System.IntPtr,System.Int32,System.Int16})">
            <summary>
            Instantiates a <see cref="T:Geosoft.GX.Controls.Helpers.GXProgressBridge"/> to provide delegates for progress updates
            for the executing thread. Defaults are applied (empty Action, shorts return 0) to any unused
            arguments.
            </summary>
            <param name="progress">See <see cref="T:Geosoft.Engine.Core.SWIG.ISys.ProgressCallback"/></param>
            <param name="progressState">See <see cref="T:Geosoft.Engine.Core.SWIG.ISys.ProgressStateCallback"/></param>
            <param name="progressName">See <see cref="T:Geosoft.Engine.Core.SWIG.ISys.ProgressNameCallback"/></param>
            <param name="progressUpdate">See <see cref="T:Geosoft.Engine.Core.SWIG.ISys.ProgressUpdateCallback"/></param>
            <param name="progressStop">See <see cref="T:Geosoft.Engine.Core.SWIG.ISys.ProgressStopCallback"/></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GXProgressBridge.SetProgressCallbacks">
            <summary>
            Assign progress callbacks for the executing thread.
            </summary>
            <remarks>
            See <see cref="M:Geosoft.Engine.Core.SWIG.ISys.SetProg(System.IntPtr,Geosoft.Engine.Core.SWIG.ISys.ProgressCallback,Geosoft.Engine.Core.SWIG.ISys.ProgressStateCallback,Geosoft.Engine.Core.SWIG.ISys.ProgressNameCallback,Geosoft.Engine.Core.SWIG.ISys.ProgressUpdateCallback,Geosoft.Engine.Core.SWIG.ISys.ProgressStopCallback)"/>
            </remarks>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GXTaskException">
            <summary>
            Encapsulates an error encountered during GX Task execution. Any error
            registered against the GX context will be recorded in this exception.
            </summary>
            <remarks>
            See <see cref="M:GeoEngine.Core.GXNetX.CSYS.iGetTopErrorAP(GeoEngine.Core.GXNetX.CGXNETCore)"/>.
            </remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.GXTaskException.ErrorCode">
            <summary>
            The error code retrieved after execution from <see cref="M:GeoEngine.Core.GXNetX.CSYS.iGetTopErrorAP(GeoEngine.Core.GXNetX.CGXNETCore)"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.GXTaskException.ErrorMessage">
            <summary>
            The error message retrieved after execution from <see cref="M:GeoEngine.Core.GXNetX.CSYS.IGetErrorMessageAP(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@)"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GXTaskException.#ctor(System.Int32,System.String)">
            <summary>
            Constructs a new <see cref="T:Geosoft.GX.Controls.Helpers.GXTaskException"/>.
            </summary>
            <param name="code">The integer code associated with the error.</param>
            <param name="message">The message associated with the error.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GXTaskScheduler">
            <summary>
            Schedule tasks for work backed by threads created with <see cref="F:System.Threading.ApartmentState.STA"/>.
            </summary>
            <remarks>Also facilitates optional creation of thread-local kernel threadpools for parallelizing
            execution of certain kernel functions.</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GXTaskScheduler.Run``1(System.Func{Geosoft.GX.Controls.Helpers.ExternalGXX,``0},Geosoft.GX.Controls.Helpers.GXProgressBridge)">
            <summary>
            Queues the specified work to run on a new thread created with <see cref="F:System.Threading.ApartmentState.STA"/>.
            </summary>
            <remarks>Any kernel functions invoked within <paramref name="func"/> will run in series (they will not be parallelized).
            To have access to a kernel thread-local threadpool see <see cref="M:Geosoft.GX.Controls.Helpers.GXTaskScheduler.RunWithLocalPool``1(System.Func{Geosoft.GX.Controls.Helpers.ExternalGXX,``0},Geosoft.GX.Controls.Helpers.GXProgressBridge)"/></remarks>
            <param name="func">A delegate which will receive an <see cref="T:Geosoft.GX.Controls.Helpers.ExternalGXX"/> to use and perform some function, returning a <typeparamref name="T"/>.</param>
            <param name="progressCallbacks">Callbacks to associate with task progress.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GXTaskScheduler.RunWithLocalPool``1(System.Func{Geosoft.GX.Controls.Helpers.ExternalGXX,``0},Geosoft.GX.Controls.Helpers.GXProgressBridge)">
            <summary>
            Queues the specified work to run on a new thread created with <see cref="F:System.Threading.ApartmentState.STA"/>, including the creation of a local ThreadPool for
            executing kernel functions in parallel; see constructor for <see cref="M:Geosoft.GX.Controls.Helpers.ExternalGXX.Create(System.Int64)"/>.
            </summary>
            <remarks>Any kernel functions invoked within <paramref name="func"/> will run on the newly-created thread-local threadpool. To run kernel functions
            synchronously see <see cref="M:Geosoft.GX.Controls.Helpers.GXTaskScheduler.Run``1(System.Func{Geosoft.GX.Controls.Helpers.ExternalGXX,``0},Geosoft.GX.Controls.Helpers.GXProgressBridge)"/></remarks>.
            <param name="func">A delegate which will receive an <see cref="T:Geosoft.GX.Controls.Helpers.ExternalGXX"/>, created with a thread-local kernel ThreadPool, to use and perform some function, returning a <typeparamref name="T"/>.</param>
            <param name="progressCallbacks">Callbacks to associate with task progress.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IMGInfo">
            <summary>
            Class to provide information from a grid for display purposes or otherwise
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IMGInfo.#ctor(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IMGInfo.#ctor(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG)">
            <summary>
            Constructor
            </summary>
            <param name="gxCtx">GX context</param>
            <param name="img"><see cref="T:GeoEngine.Core.GXNetX.CIMG"/> instance.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ZoneFile">
            <summary>
            Zone file for display colours
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ColourMethod">
            <summary>
            Colour model (e.g. Linear, Normal, Equal-Area). This is read-only.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.IsShaded">
            <summary>
            Is the grid shaded?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.IsShadedWetLook">
            <summary>
            Is the grid shaded with "wet look"?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ColoursReversed">
            <summary>
            Are colours reversed from the original Zone file definition?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.Brightness">
            <summary>
            Brightness
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ShadingGrid">
            <summary>
            Shading grid, if defined.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ShadingInclination">
            <summary>
            Shading inclination
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ShadingDeclination">
            <summary>
            Shading declination
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ShadingBrightness">
            <summary>
            Shading brightness
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ShadingContrast">
            <summary>
            Shading contrast
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.ShadingScale">
            <summary>
            Shading scale
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.IsSmoothed">
            <summary>
            Is the grid displayed using smoothing?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.DataContour">
            <summary>
            Data contour
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.DataMinimum">
            <summary>
            Data minimum
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IMGInfo.DataMaximum">
            <summary>
            Data minimum
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IMGInfo.TryGetInfoFromGrid(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>
            Gets an <see cref="T:Geosoft.GX.Controls.Helpers.IMGInfo"/> from a grid or image file.
            </summary>
            <param name="gxCtx">GX context</param>
            <param name="gridFile">File path (with qualifiers)</param>
            <returns><see cref="T:Geosoft.GX.Controls.Helpers.IMGInfo"/></returns>
            <remarks>
            Returns system-defaults if the gridFile does not exist or there is an error"/>
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IMGInfo.SetInfoToGrid(System.String,Geosoft.GX.Controls.Helpers.IMGInfo)">
            <summary>
            Gets an <see cref="T:Geosoft.GX.Controls.Helpers.IMGInfo"/> from a grid or image file.
            </summary>
            <param name="gridFile">File path (with qualifiers)</param>
            <param name="info">Grid information returned on success</param>
            <returns><see cref="T:Geosoft.GX.Controls.Helpers.IMGInfo"/></returns>
            <remarks>
            Returns true if grid file exists and values are obtained"/>
            </remarks>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.StringMeasureUtil">
             <summary>
             Utility class to efficiently measure strings
             </summary>
             <remarks>
             Usually <see cref="M:System.Windows.Forms.Control.CreateGraphics"/> need to be called on a window or control to do this, however this is expensive and
             can delay window startup significantly in some cases. E.g. UI with lots of <see cref="T:Geosoft.GX.Controls.FileEditControl"/>s or <see cref="T:Geosoft.GX.Controls.ComboBoxControl"/>s
             will results in many calls to <see cref="M:Geosoft.GX.Controls.BetterComboBox.UpdateDropDownWidth"/> and/or <see cref="M:Geosoft.GX.Controls.FileEditControl.FitMaxItemWidth"/>.
            
             This class creates and maintains a screen based <see cref="T:System.Drawing.Graphics"/> static instance to avoid the cost of creating one for
             every control.
             </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font,System.Int32)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.StringMeasureUtil.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
            <inheritdoc cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)"/>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TreeViewExtensions">
            <summary>
            Extension classes for working with <see cref="T:System.Windows.Forms.TreeView"/>, its <see cref="T:System.Windows.Forms.TreeNode"/>s and <see cref="T:System.Windows.Forms.TreeNodeCollection"/>s.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateNodes(System.Windows.Forms.TreeNodeCollection,System.Boolean)">
            <summary>
            Enumerate a node collection and its descendants
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateNodes(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Enumerate a node and its descendants
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateNodesBreadthFirst(System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Enumerate a node collection and its descendants (breadth first).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateNodesBreadthFirst(System.Windows.Forms.TreeNode)">
            <summary>
            Enumerate a node and its descendants (breadth first).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateNodesDepthFirst(System.Windows.Forms.TreeNodeCollection)">
            <summary>
            Enumerate a node collection and its descendants (depth first).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateNodesDepthFirst(System.Windows.Forms.TreeNode)">
            <summary>
            Enumerate a node and its descendants (depth first).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TreeViewExtensions.EnumerateBranch(System.Windows.Forms.TreeNode)">
            <summary>
            Enumerate nodes and its parents along a branch to root of tree. Starting at node itself.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ControlLanguageUtil">
            <summary>
            Language Utilities for Windows Forms controls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ControlLanguageUtil.TranslateControl(System.Windows.Forms.Control,System.Windows.Forms.Control)">
             <summary>
             Translate a control.
             </summary>
            
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ControlVisibilitySizingHelper">
             <summary>
             This class listen to the VisibleChanged event of the buddies for a sequence of label controls and will
             resize the height of the parent container/form and reposition controls as necessary.
            
             It assumes simple top down control organization and will not necessarily work for complex layouts.
             </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ControlVisibilitySizingHelper.#ctor(System.Windows.Forms.Control)">
             <summary>
            
             </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CTRHelper">
             <summary>
             GX.NET controls do not render in Visual Studio the same way that they render in
             the software, since VS turns off compatible text rendering, but OM does not.
            
             This class is used to selectively disable compatible text rendering.
             </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DHMath">
            <summary>
            DH Math
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DHMath.CalculateDipAndAzimuth(Geosoft.GX.Controls.Helpers.DHMath.D3Point,Geosoft.GX.Controls.Helpers.DHMath.D3Point,System.Int32,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DHMath.CalculatePlannedDepth(Geosoft.GX.Controls.Helpers.DHMath.D3Point,Geosoft.GX.Controls.Helpers.DHMath.D3Point,System.Int32,System.Double@)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DHMath.CalculateTargetLocationFromDipAzimuthAndPlannedDepth(Geosoft.GX.Controls.Helpers.DHMath.D3Point,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DHMath.CalculateCollarLocationFromDipAzimuthAndPlannedDepth(Geosoft.GX.Controls.Helpers.DHMath.D3Point,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DHMath.D3Point">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.DHMath.D3Point.dX">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.DHMath.D3Point.dY">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.DHMath.D3Point.dZ">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetOrigin(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetOrigin(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetOrigin(GeoEngine.Core.GXNet.CMULTIGRID3D,Geosoft.Core.Point3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetOrigin(GeoEngine.Core.GXNetX.CMULTIGRID3D,Geosoft.Core.Point3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetBoundingBox(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetBoundingBox(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsThematic(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsThematic(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsDouble(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsDouble(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsVector(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsVector(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetTPAT(GeoEngine.Core.GXNet.CMULTIGRID3D,GeoEngine.Core.GXNet.CTPAT)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetTPAT(GeoEngine.Core.GXNetX.CMULTIGRID3D,GeoEngine.Core.GXNetX.CTPAT)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetTPAT(GeoEngine.Core.GXNet.CMULTIGRID3D,GeoEngine.Core.GXNet.CTPAT)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetTPAT(GeoEngine.Core.GXNetX.CMULTIGRID3D,GeoEngine.Core.GXNetX.CTPAT)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsUniformCellSizeX(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsUniformCellSizeX(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsUniformCellSizeY(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsUniformCellSizeY(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsUniformCellSizeZ(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.IsUniformCellSizeZ(GeoEngine.Core.GXNetX.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.CopyFromHandle(GeoEngine.Core.GXNetX.CPLY,System.IntPtr)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetDoubleArray(GeoEngine.Core.GXNet.CVV)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetCellSizesX(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetCellSizesY(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetCellSizesZ(GeoEngine.Core.GXNet.CMULTIGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetCellSizesX(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double[])">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetCellSizesY(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double[])">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.SetCellSizesZ(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double[])">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetVectorOrientation(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double@,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetCellSizesXAsString(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetCellSizesYAsString(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetCellSizesZAsString(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetVolumeVectors(GeoEngine.Core.GXNet.CMULTIGRID3D,Geosoft.Core.Point3D@,Geosoft.Core.Point3D@,Geosoft.Core.Point3D@,Geosoft.Core.Point3D@)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetVolumeVectors(GeoEngine.Core.GXNetX.CMULTIGRID3D,Geosoft.Core.Point3D@,Geosoft.Core.Point3D@,Geosoft.Core.Point3D@,Geosoft.Core.Point3D@)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetOrientedDataExtents(GeoEngine.Core.GXNet.CMULTIGRID3D,Geosoft.Core.Point3D,Geosoft.Core.Point3D,Geosoft.Core.Point3D,Geosoft.Core.Point3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetOrientedDataExtents(GeoEngine.Core.GXNetX.CMULTIGRID3D,Geosoft.Core.Point3D,Geosoft.Core.Point3D,Geosoft.Core.Point3D,Geosoft.Core.Point3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetSectionCellSizes(GeoEngine.Core.GXNet.CMULTIGRID3D,System.Double,System.Double,Geosoft.Core.Point3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DExtensions.GetSectionCellSizes(GeoEngine.Core.GXNetX.CMULTIGRID3D,System.Double,System.Double,Geosoft.Core.Point3D)">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CGRID3DExtensions">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.#ctor(System.UInt64,System.UInt64,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.NumValid">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.NumDummies">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.Min">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.Max">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.Mean">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DDoubleStatitics.StandardDev">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.#ctor(System.UInt64,System.UInt64,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.NumValid">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.NumDummies">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.Min">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.Max">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.Mean">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DThematicStatitics.StandardDev">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.#ctor(System.UInt64,System.UInt64,Geosoft.Core.Vector3D,Geosoft.Core.Vector3D,Geosoft.Core.Vector3D,Geosoft.Core.Vector3D)">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.NumValid">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.NumDummies">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.Min">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.Max">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.Mean">
            <summary>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GRID3DVectorStatitics.StandardDev">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GetDoubleStatistics(GeoEngine.Core.GXNet.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GetDoubleStatistics(GeoEngine.Core.GXNetX.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GetThematicStatistics(GeoEngine.Core.GXNet.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GetThematicStatistics(GeoEngine.Core.GXNetX.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GetVectorStatistics(GeoEngine.Core.GXNet.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.GetVectorStatistics(GeoEngine.Core.GXNetX.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.IsThematic(GeoEngine.Core.GXNet.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.IsThematic(GeoEngine.Core.GXNetX.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.IsDouble(GeoEngine.Core.GXNet.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.IsDouble(GeoEngine.Core.GXNetX.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.IsVector(GeoEngine.Core.GXNet.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CGRID3DExtensions.IsVector(GeoEngine.Core.GXNetX.CGRID3D)">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.IsThematic(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.IsDouble(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.IsVector(System.String)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.GetIPJ(System.String,GeoEngine.Core.GXNet.CIPJ)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.SetIPJ(System.String,GeoEngine.Core.GXNet.CIPJ)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.GetTPAT(System.String,GeoEngine.Core.GXNet.CTPAT)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.SetTPAT(System.String,GeoEngine.Core.GXNet.CTPAT)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.ConvertDoubleToVector(System.String,System.String,System.String,System.String,System.Double,System.Double,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.ConvertVectorToDouble(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.ClipToPolygon(System.String,System.String,GeoEngine.Core.GXNet.CPLY,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.ConvertDoubleToVector(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Double,System.Double,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.ConvertVectorToDouble(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CMULTIGRID3DUTILS.ClipToPolygon(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CPLY,System.Boolean)">
            <summary>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ExternalGXX">
            <summary>
            External GXX Context Class
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX.#ctor(System.Boolean)">
            <summary>
            Create the External GXX
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX.Dispose">
            <summary>
            Dispose of the handle
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ExternalGXX.Context">
            <summary>
            Get the Context
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ExternalGXX.Project">
            <summary>
            Get Project interface for external GXX
            </summary>
            <returns><see cref="T:Geosoft.Desk.IProject"/> instance.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ExternalGXX.ApGui">
            <summary>
            Get ApGui interface for external GXX
            </summary>
            <returns><see cref="T:Geosoft.Desk.IApGui"/> instance.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ExternalGXX.APIAdapter">
            <summary>
            Get IAPIAdapter for external GXX
            </summary>
            <returns><see cref="T:Geosoft.GX.Controls.IAPIAdapter"/> instance.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ExternalGXX._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.I3DViewInteractor">
            <summary>
            An interface defining events forwarded from a 3D view, faciliates interaction with
            the view without access to the control itself.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractor.MouseDown3D(System.Int32,System.Int32,System.Windows.Forms.Keys)">
            <summary>
            Invoked on mouse-down events from the connected 3D view.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractor.MouseUp3D(System.Int32,System.Int32,System.Windows.Forms.Keys)">
            <summary>
            Invoked on mouse-up events from the connected 3D view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.I3DViewInteractor.IsActive">
            <summary>
            Should interactor-specific logic be applied to the 3D View.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractor.ProcessCmdKey(System.Windows.Forms.Keys,System.Windows.Forms.Message)">
            <summary>
            Process key presses
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.I3DViewInteractor.InteractorCursor">
            <summary>
            Cursor to display if <see cref="P:Geosoft.GX.Controls.Helpers.I3DViewInteractor.IsActive"/> is true.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.Helpers.I3DViewInteractor.ViewStateChanged">
            <summary>
            Event occurs when any properties changed
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.I3DViewInteractor.Filename">
            <summary>
            File name of item interacted upon
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.I3DViewInteractorEx">
            <summary>
            Represents an extended 3D view interactor, capturing more
            elaborate view and mouse events than its parent, <see cref="T:Geosoft.GX.Controls.Helpers.I3DViewInteractor"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractorEx.TryContextMenu3D(System.Int32,System.Int32,System.Windows.Forms.ContextMenuStrip@)">
            <summary>
            Invoked when a context menu is launched on the view at location 
            (<paramref name="X"/>, <paramref name="Y"/>). The interactor can
            populate the menu with context-specific items if intended.
            </summary>
            <param name="X">The x-location the menu was launched at.</param>
            <param name="Y">The y-location the menu was launched at.</param>
            <param name="menu">The resulting context menu.</param>
            <returns>True/False, depending on whether the default context menu is to be overridden.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractorEx.MouseMoved3D(Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs)">
            <summary>
            Invoked on mouse-movement events from the connected 3D view. Returns True
            if the event handled the mouse-movement, which halts any further mouse-movement
            handling in the 3D view.
            </summary>
            <returns>True if the event was handled, false if not.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractorEx.MouseWheel3D(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Invoked on mouse-movement events from the connected 3D view. Returns True
            if the event handled the mouse-movement, which halts any further mouse-movement
            handling in the 3D view.
            </summary>
            <returns>True if the event was handled, false if not.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.I3DViewInteractorEx.Paint3D(System.Int32,System.Int32,Geosoft.GX.Controls.Helpers.IGraphicsAdapter)">
            <summary>
            Invoked when the 3D view is painted.
            </summary>
            <param name="controlWidth">The width of the 3D view control.</param>
            <param name="controlHeight">The height of the 3D view control.</param>
            <param name="e">The arguments the paint event was invoked with.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs">
            <summary>
            Encompasses a normal <see cref="T:System.Windows.Forms.MouseEventArgs"/> while also
            capturing the <see cref="T:System.Drawing.Size"/> of the window where the event
            was captured from.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs.SceneVolume">
            <summary>
            The volume describing the scene where the mouse event was captured.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs.ViewSize">
            <summary>
            The size of the control (view) where the mouse event was captured.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs.#ctor(System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Default .ctor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs.#ctor(System.Windows.Forms.MouseEventArgs,Geosoft.Core.Volume,System.Drawing.Size)">
            <summary>
            Incorporate screen size and scene extents into the MouseMoved event.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.InteractorMouseMovedEventArgs.#ctor(System.Windows.Forms.MouseEventArgs,System.ValueTuple{System.Double,System.Double,System.Double},System.ValueTuple{System.Double,System.Double,System.Double},System.Drawing.Size)">
            <summary>
            Incorporate screen size and scene extents into the MouseMoved event, using min/max structs.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IPJInfo">
            <summary>
            Class to provide information from an IPJ for display purposes or otherwise
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IPJInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IPJInfo.#ctor(GeoEngine.Core.GXNet.CIPJ)">
            <summary>
            Constructor
            </summary>
            <param name="ipj"><see cref="T:GeoEngine.Core.GXNet.CIPJ"/> instance.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.SourceType">
            <summary>
            One of <see cref="T:GeoEngine.Core.GXNet.IPJ_TYPEConstant"/>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.HasProjection">
            <summary>
            Does the IPJ object contain a projected CS
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.IsGeographic">
            <summary>
            Is this a geographic CS
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.OrientationType">
            <summary>
            One of <see cref="T:GeoEngine.Core.GXNet.IPJ_ORIENTConstant"/>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.X">
            <summary>
            Orientation X
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.XDisplay">
            <summary>
            Orientation X Display String
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.Y">
            <summary>
            Orientation Y
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.YDisplay">
            <summary>
            Orientation X Display String
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.Z">
            <summary>
            Orientation Z
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.ZDisplay">
            <summary>
            Orientation X Display String
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.Azimuth">
            <summary>
            Orientation Azimuth
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.AzimuthDisplay">
            <summary>
            Orientation Azimuth Display String
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.Swing">
            <summary>
            Orientation Swing
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.SwingDisplay">
            <summary>
            Orientation Swing Display String
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.OrientationDisplayName">
            <summary>
            Simple orientation information string (e.g. "Section" or "Level Plan")
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.LongOrientationDisplayName">
            <summary>
            More detailed orientation information string (e.g. "Section, 1400,1200,0m Azimuth=20° Swing=60°" or )
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.UnitsScale">
            <summary>
            Units Scale Conversion Factor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.Units">
            <summary>
            Units
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IPJInfo.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IPJInfo.TryGetCoordinateSystemFromGrid(System.String)">
            <summary>
            Gets an <see cref="T:Geosoft.GX.Controls.Helpers.IPJInfo"/> from a grid or image file.
            </summary>
            <param name="gridFile">File path (with qualifiers)</param>
            <returns><see cref="T:Geosoft.GX.Controls.Helpers.IPJInfo"/></returns>
            <remarks>
            If grid file does not exist defaults are returned. On Error defaults are returned with error set in <see cref="P:Geosoft.GX.Controls.Helpers.IPJInfo.DisplayName"/>
            </remarks>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.SelectZoneFile">
             <summary>
             Select a colour zone file from one of the categories.
             </summary>
             <remarks>
            
             </remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.SelectZoneFile.ZoneFile">
            <summary>
            Gets or sets the default value for the zone colour file from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.SelectZoneFile.Category">
            <summary>
            Gets or sets the displayed category.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.SelectZoneFile.FileType">
            <summary>
            Gets or sets the inital type of file.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.#ctor">
            <summary>
            Default constructor
            </summary>
            <remarks>
            Use this constructor for instantiating this class from within other GX .Net based forms
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.#ctor(System.IntPtr)">
            <summary>
            Constructor with GX handle
            </summary>
            <param name="pGeo">Geosoft handle from montaj with which to initialize the BaseForm</param>
            <remarks>
            This constructor will be used if this GX is instantiated from within montaj (e.g. a menu entry)
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.InitializeForm">
            <summary>
            Override to do extra initialization (combobox lst init etc.)
            </summary>
            <remarks>The derived class should call this function in the appropriate place</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.bValidateDialog(System.String@,System.Boolean)">
            <summary>
            Override to do extra validation
            </summary>
            <param name="strINIError">
            </param>
            <param name="bUseErrorProvider">
            </param>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.Run">
            <summary>
            Run the GX.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.DisplaySelectZoneFileDialog(System.IntPtr,System.String)">
            <summary>
            Launch the Colour Zone File dialog and return the selected zone file.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.SelectZoneFile.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SelectZoneFile.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.SurfaceBrowse">
            <summary>
            Surface file browser
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SurfaceBrowse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SurfaceBrowse.#ctor(System.IntPtr)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SurfaceBrowse.Dispose(System.Boolean)">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SurfaceBrowse.InitializeForm">
            <summary>
            Form Initialization
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SurfaceBrowse.Run">
            <summary>
            Entry Point Method
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.SurfaceBrowse.File">
            <summary>
            The Browsed File + Surface Name
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.SurfaceBrowse.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SurfaceBrowse.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FilteredFileDialog">
            <summary>
            Windows Form to browse for documents with data directories
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FilteredFileDialog.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="allowCreation">True if creating a new file with this dialog, false to browse for an existing file.</param>
            <param name="isOpenDialog">if set to <c>true</c> [is open dialog].</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FilteredFileDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.FilteredFileDialog.FileName">
            <summary>
            Get or set the current filename in the control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.FilteredFileDialog.FullPathFileName">
            <summary>
            Get or set the current full path filename in the control for both "open" or "New" mode
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FilteredFileDialog.Reset(System.String)">
            <summary>
            Set the directory to display.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.FilteredFileDialog.SuffixesOfFilesToAllow">
            <summary>
            The extensions permitted by this dialog. The first one listed will be the 'default' extension for creating new files.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.FilteredFileDialog.MutuallyExclusiveSuffixesOfFiles">
            <summary>
            The extensions that are mutually exclusive in selection. The first one listed will be used while the others are ignored.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.FilteredFileDialog.SuffixesOfFoldersToExclude">
            <summary>
            The extension of directories to be excluded from the display.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.FilteredFileDialog.DocumentTitle">
            <summary>
            The type of document. Used in the title of the dialog.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FilteredFileDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FilteredFileDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.BrowseGmsys3d">
            <summary>
            Windows Form to browse for GM-SYS 3D Documents
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.BrowseGmsys3d.#ctor(System.Boolean)">
            <summary>
            It's a constructor!
            </summary>
            <param name="allowCreation">True if creating a new GM-SYS 3D Document with this dialog, false to browse for an existing GM-SYS 3D Document.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys3d.SuffixesOfFilesToAllow">
            <summary>
            The extensions permitted by this dialog. The first one listed will be the 'default' extension for creating new files.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys3d.SuffixesOfFoldersToExclude">
            <summary>
            The extension of directories to be excluded from the display.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys3d.DocumentTitle">
            <summary>
            The type of document. Used in the title of the dialog.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.BrowseGmsys2d">
            <summary>
            Windows Form to browse for GM-SYS 2D Documents
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.BrowseGmsys2d.#ctor(System.Boolean,System.Boolean)">
            <summary>
            It's a constructor!
            </summary>
            <param name="allowCreation">True if creating a new GM-SYS 2D Document with this dialog, false to browse for an existing GM-SYS 2D Document.</param>
            <param name="isOpenDialog">if set to <c>true</c> [is open dialog].</param>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys2d.SuffixesOfFilesToAllow">
            <summary>
            The extensions permitted by this dialog. The first one listed will be the 'default' extension for creating new files.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys2d.MutuallyExclusiveSuffixesOfFiles">
            <summary>
            The extensions that are mutually exclusive in selection. The first one listed will be used while the others are ignored.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys2d.SuffixesOfFoldersToExclude">
            <summary>
            The extension of directories to be excluded from the display.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.BrowseGmsys2d.DocumentTitle">
            <summary>
            The type of document. Used in the title of the dialog.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ControlProperty">
            <summary>
            Represents a property of a control
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ControlProperty.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.IsStringType">
            <summary>
            Whether the property is of type string
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.IsComboBoxObjectCollectionType">
            <summary>
            Whether the property is of type ComboBox.ObjectCollection
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.IsContextMenuStrip">
            <summary>
            Whether the property is of type ContextMenuStrip
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.IsListBoxObjectCollectionType">
            <summary>
            Whether the property is of type ListBox.ObjectCollection
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.IsColumnHeaderCollectionType">
            <summary>
            Whether the property is of type ListView.ColumnHeaderCollection
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.IsGeosoftCustom">
            <summary>
            Whether the property is a Geosoft custom property
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ControlProperty.NotLocalizable">
            <summary>
            Whether the property should not be localizable
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Explorer">
             <summary>
            
             </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.Explorer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Explorer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Explorer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ListBoxElement">
            <summary>
            ListBoxElement
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ListBoxElement.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">
            name of the object which will be used for sorting
            </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ListBoxElement.IsItemBefore(Geosoft.GX.Controls.Helpers.ListBoxElement)">
            <summary>
            Compare against another listbox element to determine if it should be inserted before
            </summary>
            <param name="compareTo"></param>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl">
            <summary>
            FileBrowserControl to be used when GXNet is not present.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl"/> class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.BrowserQuery">
            <summary>
            Gets or sets the browser query.
            </summary>
            <value>The browser query.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.FileFilter">
            <summary>
            Gets or sets the file filter.
            </summary>
            <value>The file filter.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
            <value></value>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="E:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.Required"/> property changes
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.bIsValid(System.String@)">
            <summary>
            Chek if the control is valid
            </summary>
            <param name="strError">The STR error.</param>
            <returns></returns>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.NonGxNet.FileBrowserControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ITranslateControlsClass">
            <summary>
            Interface of class that supports internal translations of its controls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ITranslateControlsClass.TranslateControls">
            <summary>
            Translate all controls.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ITranslateControlsClass.SkipTranslationDesignMode">
            <summary>
            Should translation be skipped (due to design mode)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GrowParentAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.GrowParentAnchorFamilyBehaviour.Undefined">
            <summary>
            Control stays at its predefined position
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.GrowParentAnchorFamilyBehaviour.MoveAndGrow">
            <summary>
            Control will move and/or grow as needed
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.GrowParentAnchorFamilyBehaviour.Move">
            <summary>
            Control will move
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.GrowParentAnchorFamilyBehaviour.Grow">
            <summary>
            Control will adjust its right edge to match the growth
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.GrowParentAnchorFamilyBehaviour.Fixed">
            <summary>
            Same as Undefined but explicitely marked for reporting purposes.
            If one control on a dialog has something else than Undefined
            all controls should have values.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IGrowParentAnchorFamilyControlClass">
            <summary>
            Interface of control class that partakes in resizing of its parent form due
            to runtime translation of its controls
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.IGrowParentAnchorFamilyControlClass.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ILeftBuddyDesignator">
            <summary>
            Interface of control class that can have a buddy for sizing purposes (assumes left to right sizing)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ILeftBuddyDesignator.BuddyControl">
            <summary>
            Set the control that this button is for (sizing purposes, assumes left to right sizing)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.ILeftBuddyDesignator.GrowParentToFitEnabled">
            <summary>
            Growing the parent is enabled if position or size of this control changes (used in translation)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.NoTranslateClass">
            <summary>
            Base class only adding non-translation functionality (i.e. _n)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.NoTranslateClass._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateClass">
            <summary>
            Base class only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateClass._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateClass._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateClass._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateFileNameEditor">
            <summary>
            Base class extending <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateFileNameEditor._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateFileNameEditor._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateFileNameEditor._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslatePictureBox">
            <summary>
            Base class extending <see cref="T:System.Windows.Forms.PictureBox"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePictureBox.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.TranslatePictureBox.SkipTranslationDesignMode">
            <summary>
            Should translation be skipped (due to design mode)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePictureBox._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePictureBox._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePictureBox._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePictureBox.TranslateControls">
            <summary>
            Translate all controls.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslatePropertyBag">
            <summary>
            Base class extending <see cref="T:Geosoft.PropertyHelpers.PropertyBag"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePropertyBag._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePropertyBag._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslatePropertyBag._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateDoubleConverter">
            <summary>
            Base class extending <see cref="T:System.ComponentModel.DoubleConverter"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateDoubleConverter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateDoubleConverter._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateDoubleConverter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateInt32Converter">
            <summary>
            Base class extending <see cref="T:System.ComponentModel.Int32Converter"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateInt32Converter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateInt32Converter._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateInt32Converter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateStringConverter">
            <summary>
            Base class extending <see cref="T:System.ComponentModel.StringConverter"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateStringConverter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateStringConverter._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateStringConverter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateColorConverter">
            <summary>
            Base class extending <see cref="T:System.Drawing.ColorConverter"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateColorConverter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateColorConverter._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateColorConverter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateCGXNETCore">
            <summary>
            Base class only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateCGXNETCore.#ctor(System.IntPtr)">
            <summary>
            Default constructor
            </summary>
            <remarks>
            Use this constructor for instantiating this class from within other GX .Net based forms
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateCGXNETCore._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateCGXNETCore._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateCGXNETCore._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateExpandableObjectConverter">
            <summary>
            Base class extending <see cref="T:System.ComponentModel.ExpandableObjectConverter"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateExpandableObjectConverter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateExpandableObjectConverter._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateExpandableObjectConverter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateTreeNode">
            <summary>
            Base class extending <see cref="T:System.Windows.Forms.TreeNode"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateTreeNode.#ctor">
            <summary>
            A constructor
            </summary>
            <remarks>
            A constructor
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateTreeNode.#ctor(System.String)">
            <summary>
            A constructor
            </summary>
            <remarks>
            A constructor
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateTreeNode._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateTreeNode._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateTreeNode._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateToolControl">
            <summary>
            Base class only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateToolControl.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.TranslateToolControl.SkipTranslationDesignMode">
            <summary>
            Should translation be skipped (due to design mode)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateToolControl._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateToolControl._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateToolControl._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateToolControl.TranslateControls">
            <summary>
            Translate all controls.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SizingParentHelper`1.StartGrowParentDuringTranslation">
            <summary>
            Start mode to grow form during translations if strings do not fit
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SizingParentHelper`1.EndGrowParentDuringTranslation">
            <summary>
            End mode to grow form during translations if strings do not fit
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateDialogUserControl">
            <summary>
            Base class extending <see cref="T:Geosoft.GX.Controls.Helpers.TranslateUserControl"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateDialogUserControl.StartGrowFormDuringTranslation">
            <summary>
            Start mode to grow form during translations if strings do not fit
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateDialogUserControl.EndGrowFormDuringTranslation">
            <summary>
            End mode to grow form during translations if strings do not fit
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Sanity.Assert">
            <summary>
            Provides access to assertion functions.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.IsFalse(System.String,System.Boolean)">
            <summary>
            Asserts that a condition is fase.
            </summary>
            <param name="paramName">The parameter name.</param>
            <param name="condition">The condition result.</param>
            <exception cref="T:System.ArgumentException">If <code>condition</code> is true.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.IsTrue(System.String,System.Boolean)">
            <summary>
            Asserts that a condition is true.
            </summary>
            <param name="paramName">The parameter name.</param>
            <param name="condition">The condition result.</param>
            <exception cref="T:System.ArgumentException">If <code>condition</code> is false.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotNull(System.String,System.Object)">
            <summary>
            Asserts that <code>value</code> is not null.
            </summary>
            <param name="paramName">The name of the parameter to assert.</param>
            <param name="value">The value to test.</param>
            <exception cref="T:System.ArgumentNullException">If <code>value</code> is null.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotNull(System.Object)">
            <summary>
            Asserts that <code>value</code> is not null.
            </summary>
            <param name="value">The value to test.</param>
            <exception cref="T:System.ArgumentNullException">If <code>value</code> is null.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotEmpty(System.String,System.String)">
            <summary>
            Asserts that <code>value</code> is not empty.
            </summary>
            <param name="paramName">The parameter name.</param>
            <param name="value">The value to test.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotEmpty(System.String)">
            <summary>
            Asserts that <code>value</code> is not empty.
            </summary>
            <param name="value">The value to test.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotEmpty(System.String,System.Boolean)">
            <summary>
            Asserts that <code>value</code> is not empty.
            </summary>
            <param name="value">The value to test.</param>
            <param name="trim">Whether to trim the string before checking it.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotEmpty(System.String,System.String,System.Boolean)">
            <summary>
            Asserts that <code>value</code> is not empty.
            </summary>
            <param name="paramName">The parameter name.</param>
            <param name="value">The value to test.</param>
            <param name="trim">Whether to trim the string before checking it.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotEmpty``1(``0[])">
            <summary>
            Asserts that <code>values</code> is not empty.
            </summary>
            <param name="values">The values to test.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Assert.NotEmpty``1(System.String,``0[])">
            <summary>
            Asserts that <code>values</code> is not empty.
            </summary>
            <param name="paramName">The parameter name.</param>
            <param name="values">The values to test.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Sanity.Range`1">
            <summary>
            Represents a range
            </summary>
            <typeparam name="T">The range type.</typeparam>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.#ctor(`0,`0,`0)">
            <summary>
            Creates the range.
            </summary>
            <param name="lowerBound">The lower bound of the range.</param>
            <param name="upperBound">The upper bound of the range.</param>
            <param name="dummy">Value that indicates dummy (unbounded)</param>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.Sanity.Range`1.LowerBound">
            <summary>
            The start of the range.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.Sanity.Range`1.UpperBound">
            <summary>
            The upper bound of the range.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.Equals(Geosoft.GX.Controls.Helpers.Sanity.Range{`0})">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.Equals(System.Object)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>true if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.GetHashCode">
            <summary>
            Get hash code
            </summary>
            <returns>A hash code for the Range</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.op_Equality(Geosoft.GX.Controls.Helpers.Sanity.Range{`0},Geosoft.GX.Controls.Helpers.Sanity.Range{`0})">
            <summary>
            
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.op_Inequality(Geosoft.GX.Controls.Helpers.Sanity.Range{`0},Geosoft.GX.Controls.Helpers.Sanity.Range{`0})">
            <summary>
            
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range`1.ToString">
            <summary>
            Converts to a string representation: "(LowerBound, UpperBound)"
            </summary>
            <returns>String representation.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.Sanity.Range">
            <summary>
            Contains a set of range methods.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range.Create``1(``0,``0,``0)">
            <summary>
            Creates an range.
            </summary>
            <typeparam name="T">The type of range.</typeparam>
            <param name="from">The from value.</param>
            <param name="to">The to value.</param>
            <param name="dummy">The dummy value.</param>
            <returns>The range.</returns>
            <exception cref="T:System.ArgumentNullException"><code>from</code> or <code>to</code> or <code>dummy</code> is null.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range.Create(System.Double,System.Double)">
            <summary>
            Creates an range.
            </summary>
            <param name="from">The from value.</param>
            <param name="to">The to value.</param>
            <returns>The range.</returns>
            <exception cref="T:System.ArgumentNullException"><code>from</code> or <code>to</code> is null.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.Sanity.Range.Create(System.Int32,System.Int32)">
            <summary>
            Creates an range.
            </summary>
            <param name="from">The from value.</param>
            <param name="to">The to value.</param>
            <returns>The range.</returns>
            <exception cref="T:System.ArgumentNullException"><code>from</code> or <code>to</code> is null.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.BrowseDHProject">
            <summary>
            Windows Form to browse for or within DH Projects
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.BrowseDHProject.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.BrowseDHProject.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.BrowseDHProject.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.BrowseGeoDatabase">
            <summary>
            Windows Form to browse for or within Geodatabases
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.BrowseGeoDatabase.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.BrowseGeoDatabase.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.BrowseGeoDatabase.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FileUtil">
            <summary>
            Some path routines that mirrors the functions in <see cref="T:GeoEngine.Core.GXNet.CSTR"/> but uses only
            .Net API.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.TestMode">
            <summary>
            Used by Geosoft unit test system to change the nature of some routines in here
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FileUtil.FileParts">
            <summary>
            Describes parts of a file
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FileParts.Drive">
            <summary>
            E.g. "d"
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FileParts.Directory">
            <summary>
            E.g. "\dir\subdir"
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FileParts.Name">
            <summary>
            E.g. "name"
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FileParts.Ext">
            <summary>
            E.g. "ext"
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FileParts.Qualifiers">
            <summary>
            E.g. "a,b,c="abc""
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.strStripQualifiers(System.String@)">
            <summary>
            Strip and returns qualifiers from a file
            </summary>
            <param name="strFile"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.FileExists(System.String)">
            <summary>
            Qualifier tolerant way to check if a file exists
            </summary>
            <param name="strFile">File name</param>
            <returns>true if file exists.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.HasExtension(System.String,System.String)">
            <summary>
            Qualifier tolerant way to check if a file has an extension
            </summary>
            <param name="strFile">File name</param>
            <param name="extension">extension (without .), e.g. "map"</param>
            <returns>true if file exists.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.GetFileParts(System.String)">
            <summary>
            Break a file up into its components
            </summary>
            <param name="strFile">Input filename</param>
            <returns><see cref="T:Geosoft.GX.Controls.Helpers.FileUtil.FileParts"/></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.FromFileParts(Geosoft.GX.Controls.Helpers.FileUtil.FileParts)">
            <summary>
            Build a file name from its components
            </summary>
            <param name="parts"><see cref="T:Geosoft.GX.Controls.Helpers.FileUtil.FileParts"/></param>
            <returns>File name string</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.FilePathsAreTheSame(System.String,System.String)">
            <summary>
            Returns if the file paths are equal, ignoring qualifiers
            </summary>
            <param name="first">First path</param>
            <param name="second">Second path</param>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART">
            <summary>
            File part to return by <see cref="M:Geosoft.GX.Controls.Helpers.FileUtil.FileNamePart(System.String,Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART)"/>
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.NAME">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.EXTENSION">
            <summary>
            Extension
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.NAME_EXTENSION">
            <summary>
            Name with extension
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.DIRECTORY">
            <summary>
            Dierectory
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.VOLUME">
            <summary>
            Volume
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.QUALIFIERS">
            <summary>
            Qualifiers
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART.FULLPATH_NO_QUALIFIERS">
            <summary>
            Full path without qualifiers
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.FileNamePart(System.String,Geosoft.GX.Controls.Helpers.FileUtil.FILE_PART)">
            <summary>
            Get part of a file name.
            </summary>
            <param name="strFile">file name</param>
            <param name="Part">Part to get</param>
            <returns>File name part</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.GetFullPath(System.String)">
            <summary>
            Get absolute path to a file.
            </summary>
            <param name="strFile">file name</param>
            <returns>Absolute file name</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.GetRelativePath(System.String)">
            <summary>
            Get relative path to a file from current directory.
            </summary>
            <param name="strFile">file name</param>
            <returns>Relative file name</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.GetRelativePath(System.String,System.String)">
            <summary>
            Get relative path to a file.
            </summary>
            <param name="strFile">file name</param>
            <param name="strPath">path to make relative to, empty for current directory</param>
            <returns>Relative file name</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.GetDirectoryName(System.String)">
            <summary>
            Returns the directory information for the specified path string.
            </summary>
            <remarks>
            get directory name, this is alternative of .Net method with the same name.
            </remarks>
            <param name="path">path</param>
            <returns>The path of a file or directory.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.Unqualified(System.String)">
            <summary>
            Remove qualifiers, if present, from a string.
            </summary>
            <param name="path">The filename to unqualify.</param>
            <returns>path wtih qualifier removed</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.IsPacked(System.String)">
            <summary>
            Determines if a file is in packed storage.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.TryGetPackedFileAsTempFile(System.String,System.String@)">
            <summary>
            Attempt to extract a packed file from packed storage
            </summary>
            <param name="fileName"></param>
            <param name="tempFile"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FileUtil.DeleteFile(System.String)">
            <summary>
            Delete a file  and also its associated XMl and GI files if they exist.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.SWIGAdapter">
            <summary>
            Class that can be used to adapt the controls to the internal Geosoft interface.
            </summary>
            <remarks>
            This class is intended for internal use and 3rd party GX developers should refrain from using it
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.#ctor(Geosoft.GUI.SWIG.IAPGUI)">
            <summary>
            Default contstructor
            </summary>
            <param name="pAPGUI">External <see cref="T:Geosoft.GUI.SWIG.IAPGUI"/> Interface</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bDirectoryOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Directory open dialog
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the directory is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            File Open Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom File Filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom File Filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom File Filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom File Filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.iGetColor(System.String)">
            <summary>
            Get int from string color (Geosoft way)
            </summary>
            <param name="strValue">string color value</param>
            <returns>int color value</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.strGetColor(System.Int32)">
            <summary>
            Get string from int color (Geosoft way)
            </summary>
            <param name="iValue">int color value</param>
            <returns>string color value</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bColorGui(System.Int32@,System.Boolean)">
            <summary>
            Select a colour GUI.
            </summary>
            <param name="iColor">Returned color</param>
            <param name="bAskTransparent">Ask about C_TRANSPARENT if white is selected&gt;?</param>
            <returns>true - Ok, false - Cancel</returns>
            <remarks>
            Colour value is set on input, and new value returned.  If the input colour
            type is C_TRANSPARENT, then the color is set to white, if any other type
            is input the output is guaranteed to be of the same type.  If the third flag
            is GS_TRUE is used, then on exit, if white is selected, the user is prompted:
            'Do you want white (Yes) or "None" (No) ?' and the colour is converted as
            requested.  If this is not the case, the C_TRANSPARENT is converted to white
            (if "Ok" is selected) and no choice is offered.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bPatternGui(System.Int32@,System.Double@,System.Int32@,System.Double@,System.Int32@,System.Int32@)">
            <summary>
            Select a pattern GUI.
            </summary>
            <param name="iPatNum">Current Pattern</param>
            <param name="dPatSize">Current Size, input GeoEngine.Core.GXNet.Constant.rDUMMY to use default</param>
            <param name="iPatThickness">Current Thick (0-100), input GeoEngine.Core.GXNet.Constant.iDUMMY to use default</param>
            <param name="dPatDensity">Current Density, input GeoEngine.Core.GXNet.Constant.rDUMMY to use default</param>
            <param name="iPatColor">Current Pattern Color</param>
            <param name="iPatBackColor">Current Background Color, can be C_TRANSPARENT</param>
            <returns>true - Ok, false - Cancel</returns>
            <remarks>
            Pattern values set on input, and new values returned.  Solid fill is indicated
            by Pattern number 0.  Size: pattern tile size in mm.  Thick: pattern line
            thickness in percent of the tile size.  valid range is 0-100.  Density: Tile
            spacing. A value of 1 means tiles are laid with no overlap.  A value of 2
            means they overlap each other.  The pattern Angle and Style parameters are
            not user-definable.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.RenderPattern(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Renders a Geosoft pattern to a Windows DC.
            </summary>
            <param name="dc">DC Handle</param>
            <param name="iLeft">left value of the render rect in Windows coordinates (bottom&gt;top)</param>
            <param name="iBottom">bottom value</param>
            <param name="iRight">right value</param>
            <param name="iTop">top value</param>
            <param name="iPatNum">pattern number</param>
            <param name="dPatSize">pattern Size, input GeoEngine.Core.GXNet.Constant.rDUMMY to use default</param>
            <param name="iThick">pattern Thick (0-100), input GeoEngine.Core.GXNet.Constant.iDUMMY to use default</param>
            <param name="dDensity">pattern Density, input GeoEngine.Core.GXNet.Constant.rDUMMY to use default</param>
            <param name="iForeCol">pattern Pattern Color</param>
            <param name="iBackCol">pattern Background Color, can be C_TRANSPARENT</param>
            <param name="bControlEnabled">is this window enabled?</param>
            <param name="bButton">is this a button?</param>
            <param name="bSelected">is this window selected?</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.strGetGlobal(System.String)">
            <summary>
            Get Global parameter from system storage
            </summary>
            <param name="strParam">Parameter name</param>
            <returns>parameter or null if it does not exist</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bInteractive">
            <summary>
            Is the GUI in interactive mode or in scripting mode
            </summary>
            <returns>true if interactive</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.GetDocumentsList(System.String)">
            <summary>
            Get list of documents of a particular type loaded into the application
            </summary>
            <param name="strType">Document type</param>
            <returns>List of file names</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.GetFontList(System.Int32)">
            <summary>
            Get list of GRF or TT fonts
            </summary>
            <param name="fontType">TT: 0, GFN: 1</param>
            <returns>List of GFN or TT fonts.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.GetDATDefaults(System.Int32,System.Boolean,System.String@,System.String@)">
            <summary>
            Return the user default extension and qualifier for grids/images.
            </summary>
            <param name="iType">one of GeoEngine.Core.GXNet.Constant.DAT_TYPE_...</param>
            <param name="bOpen">Open or saving file?</param>
            <param name="strExt">Returned default extension (e.g. "grd")</param>
            <param name="strQual">Returned default qualifier (e.g. "GRD")</param>
            <remarks>
            The default grid/image filters are normally stored in "MONTAJ.DEFAULT_XGD_IN"
            and "MONTAJ.DEFAULT_XGD_OUT" If no filter is defined, or the filter is not
            found then "grd" and "GRD" are returned as the default extension and qualifier.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.GetFileFilter(System.Int32,System.String@,System.String@,System.String@,System.Int32@)">
            <summary>
            Return the defined filter, mask, extension and directory for an input filter.
            </summary>
            <param name="iFilter">One of FILE_FILTER...</param>
            <param name="strFilter">Returned file filter string</param>
            <param name="strMask">Returned file mask string</param>
            <param name="strExt">Returned file extension</param>
            <param name="iDirectory">Returned directory (one of GS_DIRECTORY...)</param>
            <remarks>
            Returns the four parts of the file filter; e.g. for FILE_FILTER_GDB it returns:
            Filter: "Database (*.gdb)" Mask: "*.gdb" Extension: "gdb" Directory: "GS_DIRECTORY_NONE"
            This function is useful for constuction open/save dialog file filters, especially
            in GX.Net functions.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.bGeoFindPath(System.String,System.Int32,System.Int32,System.String@)">
            <summary>
            Get full path for a file if found
            </summary>
            <param name="strFile">File to search for</param>
            <param name="iSearchPath">Constant.FIND_LOCAL, GeoEngine.Core.GXNet.Constant.FIND_GEOSOFT, or FIND_LOCAL_GEOSOFT</param>
            <param name="iGeoDir">one of GEO_DIRECTORY_...</param>
            <param name="strFoundPath">Where path is returned</param>
            <returns>true if file found</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.SWIGAdapter.GeoGetDirectory(System.Int32,System.String@)">
            <summary>
            Get full the full path of a Geosoft Directory
            </summary>
            <param name="iGeoDir">one of GEO_DIRECTORY_...</param>
            <param name="strFolder">Geosoft Directory</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateForm">
            <summary>
            Base class extending <see cref="T:System.Windows.Forms.Form"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm.TranslateControls">
            <summary>
            Translate all controls.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm.DoTranslateControls">
            <summary>
            Force to translate all controls
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.TranslateForm.SkipTranslationDesignMode">
            <summary>
            Should translation be skipped (due to design mode)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm.StartGrowFormDuringTranslation">
            <summary>
            Start mode to grow form during translations if strings do not fit
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm.EndGrowFormDuringTranslation">
            <summary>
            End mode to grow form during translations if strings do not fit
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateForm.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            Processes a command key.
            </summary>
            <param name="msg">A <see cref="T:System.Windows.Forms.Message"/>, passed by reference, that represents the Win32 message to process.</param>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>true if the keystroke was processed and consumed by the control; otherwise, false to allow further processing.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.TranslateUserControl">
            <summary>
            Base class extending <see cref="T:System.Windows.Forms.UserControl"/> and only adding translation functionality
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateUserControl.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.TranslateUserControl.SkipTranslationDesignMode">
            <summary>
            Should translation be skipped (due to design mode)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateUserControl._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateUserControl._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateUserControl._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateUserControl.TranslateControls">
            <summary>
            Translate all controls which have been added to this parent.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.TranslateUserControl.TranslateControl(System.Windows.Forms.Control)">
            <summary>
            Translate a specific control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Helpers.TranslateUserControl.DesignMode">
            <summary>
             Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component"/> is currently
             in design mode.
            </summary>
            <returns>
            	true if the <see cref="T:System.ComponentModel.Component"/> is in design mode; otherwise, false.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FileFilters">
            <summary>
            File filters for use by general file utilities and <see cref="T:Geosoft.GX.Controls.FileEditControl"/>.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.AllFilters">
            <summary>
            All files (*.*)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GridFilters">
            <summary>
            All supported grid file formats.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ImageFilters">
            <summary>
            All supported image file formats.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GridAndImageFilters">
            <summary>
            All supported grid and image file formats.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.MDB">
            <summary>
            Access 97-2003 files (*.mdb)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ACCDB">
            <summary>
            Access 2007 files (*.accdb)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ACTION">
            <summary>
            Action Scripts (*.action)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.AGG">
            <summary>
            Aggregate (*.agg)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ARGIS_LYR">
            <summary>
            ArcGIS Layer Files (*.lyr)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ARGIS_MXD">
            <summary>
            ArcGIS Map Document Files (*.mxd)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.BAR">
            <summary>
            Geosoft Bar File (*.geobar)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.BMP">
            <summary>
            Bitmap files (*.bmp)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.BT2">
            <summary>
            Gemcom BT2 files (*.BT2)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.BPR">
            <summary>
            Gemcom BPR files (*.BPR)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.BPR2">
            <summary>
            Gemcom BPR2 files (*.BPR2)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.CGM">
            <summary>
            CGM Files (*.cgm)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.COMPS">
            <summary>
            Software Components (Components)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.CON">
            <summary>
            Configuration File (*.con)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.CSV">
            <summary>
            MapInfo Tab Files (*.tab)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.DM">
            <summary>
            Datamine files (*.dm)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.DMP">
            <summary>
            Dump files (*.dmp)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.DTM">
            <summary>
            Surpac DTM Files (*.dtm)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.DXF">
            <summary>
            AutoCAD DXF files (*.dxf)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ECS">
            <summary>
            ECS Files (*.ecs)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ECW">
            <summary>
            ECW Files (*.ecw)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.EMF">
            <summary>
            Enhanced Metafies (*.emf)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.EPS">
            <summary>
            EPS Files (*.eps)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ERS">
            <summary>
            ERS Files (*.ers)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GDB">
            <summary>
            Geosoft Database (*.gdb)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GEOSOFT_LICENSE">
            <summary>
            Geosoft License Files (*.geosoft_license)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GIF">
            <summary>
            GIF Files (*.gif)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GMS">
            <summary>
            GM-SYS Profile Model (*.gms)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GMS3D">
            <summary>
            GM-SYS 3D Model (*.geosoft_gmsys3d)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TS">
            <summary>
            GOCAD TSurf Files (*.ts)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GPF">
            <summary>
            Geosoft Project (*.gpf)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GPS_TABLE">
            <summary>
            GPS Table (*.tbl)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GRD">
            <summary>
            GRD Files (*.grd)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GS">
            <summary>
            Geosoft Script (*.gs)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GWS">
            <summary>
            Geosoft workspace (*.gws)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GX">
            <summary>
            Geosoft Executable (*.gx)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GXNET">
            <summary>
            GX.NET Files (*.dll)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.INI">
            <summary>
            Parameter Files (*.ini)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ITR">
            <summary>
            Image transform (*.itr)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.J2K">
            <summary>
            J2K JPEG 2000 Files (*.j2k)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.JP2">
            <summary>
            JP2 JPEG 2000 Files (*.jp2)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.JPG">
            <summary>
            JPG Files (*.jpg)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.KML">
            <summary>
            Google Earth KML (*.kml)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.KMZ">
            <summary>
            Google Earth Compressed KML (*.kmz)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.LST">
             <summary>
            ASCII list (name, value) (*.lst)
             </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.LUT">
            <summary>
            ER Mapper LUT (*.lut)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.MAP">
            <summary>
            Oasis Map Files (*.map)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.MAPPLOT">
            <summary>
            MAPPLOT File (*.con)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.MAPTEMPLATE">
            <summary>
            Map Template File (*.geosoft_maptemplate)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.MNU">
            <summary>
            Sushi MNU Files (*.mnu)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.OMN">
            <summary>
            Oasis Menu Files (*.omn)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PCX">
            <summary>
            PCX Files (*.pcx)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PDF">
            <summary>
            PDF Files (*.pdf)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PLT">
            <summary>
            Geosoft PLT files (*.plt)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PLY">
            <summary>
            Geosoft Polygons (*.ply)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PNG">
            <summary>
            PNG Files (*.png)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PRJ">
            <summary>
            Projection File (*.prj)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SCINTREX_DAT">
            <summary>
            Scintrex gravity files (*.dat)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SEL">
            <summary>
            acQuire parameters (*.sel)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SHP">
            <summary>
            ArcView Shape Files (*.shp)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.STM">
            <summary>
            Scatter templates (*.stm)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SVG">
            <summary>
            SVG File (*.svg)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SVZ">
            <summary>
            SVG Compressed File (*.svz)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TAB">
            <summary>
            MapInfo Tab Files (*.tab)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TARGET_3D">
            <summary>
            Target parameter ini file for 3D plots (*.in3)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TARGET_PLAN">
            <summary>
            Target parameter ini file for plans (*.inp)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TARGET_SECTION">
            <summary>
            Target parameter ini file for sections (*.ins)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TARGET_STRIPLOG">
            <summary>
            Target parameter ini file for strip logs (*.inl)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TARGET_FENCE">
            <summary>
            Target parameter ini file for fence diagrams (*.inl)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TBL">
            <summary>
            Color Table (*.tbl)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TIF">
            <summary>
            TIFF files (*.tif)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TTM">
            <summary>
            Triplot templates (*.ttm)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VAR">
            <summary>
            Geosoft Voxel (*.geosoft_voxel)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VOXEL">
            <summary>
            Geosoft variogram file (*.var)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VU">
            <summary>
            Oasis View Files (*.vu)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.WRP">
            <summary>
            Warp File (*.wrp)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.XLS">
            <summary>
            Excel 97-2003 Workbook (*.xls)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.XLSX">
            <summary>
            Excel 2007 Workbook (*.xlsx)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.XML">
            <summary>
            XML Files (*.xml)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.XYZ">
            <summary>
            Geosoft XYZ Files (*.xyz)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ZON">
            <summary>
            Zone (*.zon)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.Intersection_TBL">
            <summary>
            Levelling intersection (*.tbl)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_CON">
            <summary>
            UBC DCIP2D Conductivity model file (*.con)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_CHG">
            <summary>
            UBC DCIP2D Chargeability model file (*.chg)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_MSH">
            <summary>
            UBC DCIP2D Mesh file (*.msh)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_MSH_DAT">
            <summary>
            UBC DCIP2D Mesh file (*.dat)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_TOPO_DAT">
            <summary>
            UBC DCIP2D Topo file (*.dat)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_TOPO_XYZ">
            <summary>
            UBC DCIP2D Topo file (*.xyz)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.I0">
            <summary>
            XYZ import template file (*.i0)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.I1">
            <summary>
            Picodas import template file (*.i1)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.I2">
            <summary>
            Block Binary import template file (*.i2)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.I3">
            <summary>
            ASCII import template file (*.i3)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.I4">
            <summary>
            ODBC import template file (*.i4)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.EXP">
            <summary>
            Math expression file (*.exp)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SGY">
            <summary>
            SEG-Y file (*.sgy)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.DAARC500">
            <summary>
            RMS Instruments DAARC500 binary files (xYYMMDD)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.TXT">
            <summary>
            Text file (*.txt)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VOXEL_INVERSION">
            <summary>
            VOXI Inversion (*.geosoft_voxi)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.FLT3D">
            <summary>
            Geosoft 3D filter (*.flt3d)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.RESOURCE_PACK">
            <summary>
            Geosoft Resource Update Packages (*.geosoft_resource_pack)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GEOSTRING">
            <summary>
            Geosoft String File (*.gstring)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GEOSURFACE">
            <summary>
            Geosoft Surface File (*.geosoft_surface)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GEOSOFT3DV">
            <summary>
            Geosoft 3DV (*.geosoft_3dv)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VECTORVOXEL">
            <summary>
            Geosoft Vector Voxel (*.geosoft_vectorvoxel)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.FLT">
            <summary>
            Geosoft Filters *.flt
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.O0">
            <summary>
            XYZ Export Templates (*.o0)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GMS2D">
            <summary>
            GM-SYS 2D Model (*.geosoft_gmsys2d)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.IP_DATABASE_TEMPLATE">
            <summary>
            IP database template (*.geosoft_ipdatabasetemplate)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.FILE_FILTER_GEOSOFT_RESOURCE_MODULE">
            <summary>
            Geosoft Resource Module *.geosoft_resources
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VT">
            <summary>
            Shell VT Files     *.vt
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.INT">
            <summary>
            Shell INT Files    *.int
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.SGT">
            <summary>
            Shell SGT Files    *.sgt
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.IMGVIEW">
            <summary>
            Image Viewer Files *.imgview
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ZIP">
            <summary>
            Zip Files*.zip
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VULCAN_TRIANGULATION">
            <summary>
            Vulcan triangulation file *.00t
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.VULCAN_BLOCK_MODEL">
            <summary>
            Vulcan block model file *.bmf
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.PRJVIEW">
            <summary>
            Layout Files *.prjview
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.LEAPFROG_MODEL">
            <summary>
            Leapfrog model files  *.lfm
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.IOGAS">
            <summary>
            Reflex ioGAS files *.gas
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.ESF">
            <summary>
            ASEG ESF files *.esf
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.MGS6_DAT">
            <summary>
            Micro-g LaCoste MGS-6 gravity files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.P190">
            <summary>
             United Kingdom Offshore Operators Association (UKOOA) P1/90 data exchange file
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_OBS_DAT">
            <summary>
             UBC IP observation files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_LOC">
            <summary>
             UBC IP location files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_MOD">
            <summary>
             UBC model files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_DEN">
            <summary>
             UBC density model files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.UBC_SUS">
            <summary>
             UBC susceptibility model files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.GOCAD_VOXET">
            <summary>
             GOCAD voxet files
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.RAW">
            <summary>
            Geosoft RAW gravity file (*.raw)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.DAT">
            <summary>
            Data files (*.dat)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters.OMF">
            <summary>
            OMF files (*.omf)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.FileFilters._3DSURVEY">
            <summary>
            3d survey files (*.3dSurvey)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoDoubleConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> to do Geosoft conversion of doubles, represent empty strings as dummies and do min/max range checking.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoDoubleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified object to another type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.ArgumentNullException">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">destinationType is null.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoInt32Converter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> to do Geosoft conversion of integers, represent empty strings as dummies and do min/max range checking.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoInt32Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoInt32Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified object to another type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.ArgumentNullException">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">destinationType is null.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IDoubleRangeCallbackContainer">
            <summary>
            Implement this interface in a <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/> implementation class to
            provide minimum/maximum range checking for specific propertie(s).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IDoubleRangeCallbackContainer.GetRange(System.String,System.Double@,System.Double@)">
            <summary>
            Get the valid range of a named property.
            </summary>
            <param name="strPropertyName">Property name.</param>
            <param name="dMin">Minimum value allowed.</param>
            <param name="dMax">Maximum value allowed.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoRangeDoubleConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> to do Geosoft conversion of doubles as above but with support for
            specific min/max range checking. The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> has to implement <see cref="T:Geosoft.GX.Controls.Helpers.IDoubleRangeCallbackContainer"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoRangeDoubleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IInt32RangeCallbackContainer">
            <summary>
            Implement this interface in a <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/> implementation class to
            provide minimum/maximum range checking for specific propertie(s).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IInt32RangeCallbackContainer.GetRange(System.String,System.Int32@,System.Int32@)">
            <summary>
            Get the valid range of a named property.
            </summary>
            <param name="strPropertyName">Property name.</param>
            <param name="iMin">Minimum value allowed.</param>
            <param name="iMax">Maximum value allowed.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoRangeInt32Converter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> to do Geosoft conversion of integers as above but with support for
            specific min/max range checking. The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> has to implement <see cref="T:Geosoft.GX.Controls.Helpers.IInt32RangeCallbackContainer"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoRangeInt32Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoMapGroupOrViewConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> to do Geosoft validation on strings to use in map groups
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoMapGroupOrViewConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Validates that this item can be used as a valid Geosoft map group or view name.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to validate.</param>
            <returns>An <see cref="T:System.Object"/> the validated value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter">
            <summary>
            Converter for dealing with measurements in units often used in base map layout positioning and measurement (cm, mm, in)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter.dGetConv(System.String,System.String)">
            <summary>
            Convert a measure string to a double in the specified units.
            </summary>
            <param name="strValue">
            The measure string to convert.
            </param>
            <param name="strConvUnit">
            The units to convert to.
            </param>
            <returns>
            value in required units
            </returns>
            <exception cref="T:System.FormatException">
            if the measure string is not formatted correctly (i.e. \"number&lt;unit&gt;\" where &lt;unit&gt; is one of cm, mm, in).
            </exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter.ConvertString(System.String,System.String)">
            <summary>
            Convert a measure string to a double in the specified units.
            </summary>
            <param name="strValue">
            The measure string to convert.
            </param>
            <param name="strConvUnit">
            The units to convert to.
            </param>
            <returns>
            value in required units
            </returns>
            <exception cref="T:System.FormatException">
            if the measure string is not formatted correctly (i.e. \"number&lt;unit&gt;\" where &lt;unit&gt; is one of cm, mm, in).
            </exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.</summary>
            <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseLengthMeasureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter">
            <summary>
            Converter for dealing with measurements in units often used in base element sizing and measurement (mm, pt, micron)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter.dGetConv(System.String,System.String)">
            <summary>
            Convert a measure string to a double in the specified units.
            </summary>
            <param name="strValue">
            The measure string to convert.
            </param>
            <param name="strConvUnit">
            The units to convert to.
            </param>
            <returns>
            value in required units
            </returns>
            <exception cref="T:System.FormatException">
            if the measure string is not formatted correctly (i.e. \"number&lt;unit&gt;\" where &lt;unit&gt; is one of mm, micron, pt).
            </exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter.ConvertString(System.String,System.String)">
            <summary>
            Convert a measure string to a double in the specified units.
            </summary>
            <param name="strValue">
            The measure string to convert.
            </param>
            <param name="strConvUnit">
            The units to convert to.
            </param>
            <returns>
            value in required units
            </returns>
            <exception cref="T:System.FormatException">
            if the measure string is not formatted correctly (i.e. \"number&lt;unit&gt;\" where &lt;unit&gt; is one of mm, micron, pt).
            </exception>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.</summary>
            <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoBaseSizeMeasureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the converter's native type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> that specifies the culture to represent the number.</param>
            <param name="value">The object to convert.</param>
            <returns>An <see cref="T:System.Object"/> that represents the converted value.</returns>
            <exception cref="T:System.Exception">value is not a valid value for the target type.</exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.IEnumCallbackContainer">
            <summary>
            Implement this interface in a <see cref="T:System.ComponentModel.ICustomTypeDescriptor"/> implementation class to
            provide a drop down display list (similar to that of an enum) for specific propertie(s).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.IEnumCallbackContainer.GetEnumDisplayList(System.String)">
            <summary>
            Get a list of values for the drop down.
            </summary>
            <param name="strPropertyName">Property name.</param>
            <returns>string array containing possible values</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.EnumCallbackConverter">
            <summary>
            <see cref="T:System.ComponentModel.StringConverter"/> to support a dynamic dropdown list of strings resolved at runtime.
            The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> has to implement <see cref="T:Geosoft.GX.Controls.Helpers.IEnumCallbackContainer"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.EnumCallbackConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.EnumCallbackConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.EnumCallbackConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.</summary>
            <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.EnumEditCallbackConverter">
            <summary>
            TypeConverter to support a dynamic dropdown list of strings resolved at runtime.
            The <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> has to implement <see cref="T:Geosoft.GX.Controls.Helpers.IEnumCallbackContainer"/>. This converter supports
            editing of values in the edit box.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.EnumEditCallbackConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.EnumEditCallbackConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.EnumEditCallbackConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.</summary>
            <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoColourConverter">
            <summary>
            Utility class to do Geosoft conversion of a <see cref="T:System.Drawing.Color"/> to and from the <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour integer and string representations.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoColourConverter.iColour2Geo(System.Drawing.Color)">
            <summary>
            Convert from <see cref="T:System.Drawing.Color"/> to <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour integer.
            </summary>
            <param name="col">A <see cref="T:System.Drawing.Color"/>.</param>
            <returns>A <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour integer.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoColourConverter.Colour2Geo(System.Drawing.Color)">
            <summary>
            Convert from <see cref="T:System.Drawing.Color"/> to <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour string.
            </summary>
            <param name="col">A <see cref="T:System.Drawing.Color"/>.</param>
            <returns>A <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour string.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoColourConverter.Geo2Colour(System.Int32)">
            <summary>
            Convert from <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour integer to <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="iColour">A <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour integer.</param>
            <returns>A <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoColourConverter.Geo2Colour(System.String)">
            <summary>
            Convert from <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour string to <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="strColour">A <see cref="T:Geosoft.Engine.Map.SWIG.IMView"/> colour string.</param>
            <returns>A <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoFontConverter">
            <summary>
            <see cref="T:System.ComponentModel.TypeConverter"/> to do support a dropdown list of the available Geosoft and TrueType fonts on a system.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoFontConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</summary>
            <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoFontConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoFontConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.</summary>
            <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GeoColourTypeConverter">
            <summary>
            Colour converter for new map template viewer.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoColourTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from string to color
            </summary>
            <param name="context">TBD</param>
            <param name="culture">TBD</param>
            <param name="value">TBD</param>
            <returns>A <see cref="T:System.Drawing.Color"/>.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GeoColourTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts from Color to string
            </summary>
            <param name="context">TBD</param>
            <param name="culture">TBD</param>
            <param name="value">TBD</param>
            <param name="destinationType">TBD</param>
            <returns>System.String</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.FontEditor">
            <summary>
            <see cref="T:System.Drawing.Design.UITypeEditor"/> to support Geosoft.GX.PropertyHelpers.GeoFontConverter.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FontEditor.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.Helpers.FontEditor"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FontEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Indicates whether the specified context supports painting a representation of an object's value within the specified context.</summary>
            <returns>true if <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)"></see> is implemented; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.FontEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see>.</summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs"></see> that indicates what to paint and where to paint it. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.AnyFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening any file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.AnyFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a map file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GDBFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a GDB file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GDBFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a map template file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DatFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a DAT type file (grids and images) the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DatFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GridFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a grid DAT type file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GridFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ImageFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening an image DAT type file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ImageFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ColourTableFileOpenEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a colour table file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ColourTableFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.AnyFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving any file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.AnyFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a map file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GDBFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a GDB file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GDBFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a map template file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DatFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a DAT type file (grids and images) the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DatFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GridFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a grid DAT type file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GridFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ImageFileSaveEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening an image DAT type file the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ImageFileSaveEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.AnyFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving any file the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.AnyFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a map file the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GDBFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a GDB file the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GDBFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a map template file the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DatFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a DAT type file (grids and images) the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DatFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.GridFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for saving a grid DAT type file the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.GridFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.ImageFileSavePromptEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening an image DAT type file the Geosoft way with prompt for overwrite.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.ImageFileSavePromptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.DirectoryEditor">
            <summary>
            <see cref="T:System.Windows.Forms.Design.FileNameEditor"/> for opening a directory the Geosoft way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.DirectoryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.</summary>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information. </param>
            <param name="value">An instance of the value being edited. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateFileOpenConversion">
            <summary>
            Helper to convert paths for Map Template UI Editors
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.Helpers.MapTemplateFileOpenConversion.strTemplatePre">
            <summary>
            The template dir.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateFileOpenConversion.PreConvert(System.String)">
            <summary>
            Pre convert i.e remove TEMPLATEDIR command.
            </summary>
            <param name="strValue">The STR value.</param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateFileOpenConversion.PostConvert(System.String)">
            <summary>
            Post convert i.e put back TEMPLATEDIR string.
            </summary>
            <param name="strValue">The STR value.</param>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateAnyFileOpenEditor">
            <summary>
            UITypeEditor for opening any file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateAnyFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateMapFileOpenEditor">
            <summary>
            UITypeEditor for opening a map file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateMapFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateGDBFileOpenEditor">
            <summary>
            UITypeEditor for opening a GDB file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateGDBFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateMapTemplateFileOpenEditor">
            <summary>
            UITypeEditor for opening a map template file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateMapTemplateFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateDatFileOpenEditor">
            <summary>
            UITypeEditor for opening a DAT type file (grids and images) the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateDatFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateGridFileOpenEditor">
            <summary>
            UITypeEditor for opening a grid DAT type file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateGridFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateImageFileOpenEditor">
            <summary>
            UITypeEditor for opening an image DAT type file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateImageFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.MapTemplateColourTableFileOpenEditor">
            <summary>
            UITypeEditor for opening a colour table file the Geosoft map template way.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.MapTemplateColourTableFileOpenEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object using the editor style provided by the <see cref="M:System.Windows.Forms.Design.FileNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)"></see> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that can be used to gain additional context information.</param>
            <param name="provider">A service provider object through which editing services may be obtained.</param>
            <param name="value">An instance of the value being edited.</param>
            <returns>
            The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.PathUI">
            <summary>
            Some static path browsing UI routines.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bDirectoryOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Directory open dialog
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the directory is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            File Open Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="sortFilters">(Optional) Sorts the available file filter list in the dialog.</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bBrowseGeodatabase(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
             <summary>
             Browse for geodatabase
             </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the geodatabase name is returned</param>
             <param name="bAllowGeodatabaseCreation">Allow geodatabase creation?</param>
             <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.PathUI.bBrowseForDHProject(System.Windows.Forms.IWin32Window,System.String,System.String@,System.Boolean)">
            <summary>
            Browse for a drill hole project
            </summary>
            <param name="parentWnd">Parent Window</param>
            <param name="strTitle">Title</param>
            <param name="strPath">Default/returned path</param>
            <param name="bAllowCreation">Allow new project creation?</param>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.Helpers.CoordinateSystem">
            <summary>
            Summary description for CoordinateSystem.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Helpers.CoordinateSystem.GetDefaultCoordinateSystem">
            <summary>
            Obtain the default system Coordinate System (and units)
            </summary>
            <returns>CIPJ</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.ControlExtensions">
            <summary>
            Generic extension methods for Windows Forms Controls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ControlExtensions.TryFindFirstParentOf``1(System.Windows.Forms.Control)">
            <summary>
            Find first parent of a specific type
            </summary>
            <typeparam name="TParent">The type of parent to search for,</typeparam>
            <param name="control">This control</param>
            <returns>The parent instance if found or null if not.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ControlExtensions.TryFindFirstChildOf``1(System.Windows.Forms.Control)">
            <summary>
            Find first child control of a specific type (breadth first search)
            </summary>
            <typeparam name="TChild">The type of child to search for.</typeparam>
            <param name="control">This control</param>
            <returns>The child instance if found or null if not.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ControlExtensions.ToRoundedRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Takes a rectangle and applies rounded edges provided a radius.
            </summary>
            <remarks>
            https://stackoverflow.com/a/33853557/2942725
            </remarks>
        </member>
        <member name="T:Geosoft.GX.Controls.NoBottomLineToolStripSystemRenderer">
            <summary>
            Custom <see cref="T:System.Windows.Forms.ToolStripSystemRenderer"/> that eliminates the white line underneath a toolstrip.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NoBottomLineToolStripSystemRenderer.OnRenderToolStripBorder(System.Windows.Forms.ToolStripRenderEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ClickThroughExtensions.ClickThroughWndProc(System.Windows.Forms.Control,System.Windows.Forms.Message@)">
            <summary>
            This WndProc extension method implements click-through functionality. Some controls (MenuStrip, ToolStrip) will not
            recognize a click unless the form they are hosted in is active. So the first click will activate the
            form and then a second is required to actually make the click happen.
            </summary>
            <param name="ctl">The Message that was passed to your WndProc.</param>
            <param name="m">The Message that was passed to your WndProc.</param>
            <returns>true if the message was processed, false if it was not</returns>
            <remarks>
            You should first call base.WndProc(), and then call this method. This method is only intended to
            change a return value, not to change actual processing before that.
            See: https://blogs.msdn.microsoft.com/rickbrew/2006/01/09/how-to-enable-click-through-for-net-2-0-toolstrip-and-menustrip/
            </remarks>
        </member>
        <member name="T:Geosoft.GX.Controls.ClickThroughMenuStrip">
            <summary>
            MenuStrip that allows click through activation of its parent. (see https://blogs.msdn.microsoft.com/rickbrew/2006/01/09/how-to-enable-click-through-for-net-2-0-toolstrip-and-menustrip/)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ClickThroughMenuStrip.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.ClickThroughToolStrip">
            <summary>
            ToolStrip that allows click through activation of its parent. (see https://blogs.msdn.microsoft.com/rickbrew/2006/01/09/how-to-enable-click-through-for-net-2-0-toolstrip-and-menustrip/)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ClickThroughToolStrip.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.ColorMethodControl">
            <summary>
            <see cref="T:System.Windows.Forms.ComboBox"/> type control which selects the colour method for colour zones
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorMethodControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.iColorMethod">
            <summary>
            Return the colour method integer value
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.isAsLastDisplayed">
            <summary>
            Is the current selection As last displayed?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.isDefault">
            <summary>
            Is the current selection Default?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.isHistogramEqualization">
            <summary>
            Is the current selection Histogram Equalization?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.isNormalDistribution">
            <summary>
            Is the current selection Normal Distribution?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.isLinear">
            <summary>
            Is the current selection Linear?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorMethodControl.isLogLinear">
            <summary>
            Is the current selection Log-Linear?
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorMethodControl.SetModel(System.Int32)">
            <summary>
            Set the current colour model - input one of ITR_ZONE_MODELConstant values.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorMethodControl.RemoveAsLastDisplayedItem">
            <summary>
            Remove the "As last displayed" item - in some contexts it makes no sense/
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.GDBDataGridView">
            <summary>
            A <see cref="T:System.Windows.Forms.DataGridView"/> with similar presentation style as a Geosoft GDB
            </summary>
            <remarks>
            A number of static style properties are made available for further external customization.
            </remarks>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBDefaultFontSizePoints">
            <summary>
            DefaultFontSizePoints for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBDefaultFontName">
            <summary>
            Default FontName for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBDefaultFont">
            <summary>
            Default Font for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBDefaultBoldFont">
            <summary>
            Default BoldFont for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBForeColor">
            <summary>
            Default ForeColor for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBBackColor">
            <summary>
            Default BackColor for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBHeaderBackColor">
            <summary>
            Default HeaderBackColor for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBAlternatingBackColor">
            <summary>
            Default AlternatingBackColor for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBHighLightColor">
            <summary>
            Default HighLightColor for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBAlternatingHighLightColor">
            <summary>
            Default AlternatingHighLightColor for a GDB
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBDataGridView.GDBGridColor">
            <summary>
            Default GridColor for a GDB
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.CreateCellStyle(System.Boolean,System.Boolean,System.Boolean,System.Drawing.Font)">
            <summary>
            Create cell style
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.CreateDefaultCellStyle">
            <summary>
            Create default cell style
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.CreateRowHeadersDefaultCellStyle">
            <summary>
            Create default row headers cell style
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.CreateColumnHeadersDefaultCellStyle">
            <summary>
            Create default column headers cell style
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.CreateRowsDefaultCellStyle">
            <summary>
            Create default rows cell style
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBDataGridView.CreateAlternatingRowsDefaultCellStyle">
            <summary>
            Create default alternating rows cell style
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.GXNetParamStorage">
            <summary>
            <see cref="T:Geosoft.GX.Controls.IParamStorage"/> implementation for GeoEngine.Core.GXNet namespace
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.bStringParamExists(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.bIntParamExists(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.bDoubleParamExists(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.iGetParam(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.SetIntParam(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.dGetParam(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.SetDoubleParam(System.String,System.String,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.GetParam(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.SetParam(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.iGetColor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetParamStorage.strGetColor(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.ModelessTabFix">
             <summary>
             Simple class that use the WH_GETMESSAGE hook to capture the keystroke
             messages and call the IsDialogMessage API. If IsDialogMessage returns
             TRUE, then do not pass the message on to the message pump. The hook is
             set when the controls window is created and unset when the control
             window is destroyed.
            
             See http://support.microsoft.com/kb/233263 for details.
            
             Example usage:
             </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessTabFix.#ctor(System.Windows.Forms.Control)">
            <summary>
            Constructor
            </summary>
            <param name="control">Control to hook</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessTabFix.ControlHandleCreated(System.Object,System.EventArgs)">
            <summary>
            Install the hook when the control window handle is created
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessTabFix.ControlHandleDestroyed(System.Object,System.EventArgs)">
            <summary>
            Uninstall the hook when the control window is destroyed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessTabFix.LocalWindowsHook_HookInvoked(System.Object,Geosoft.GX.Controls.HookEventArgs)">
            <summary>
            LocalWindowsHook.HookInvoked event callback, called by LocalWindowsHook
            when a message is received.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Geosoft.GX.Controls.ModelessTabFix.WindowMessage">
            <summary>
            Windows message Id constants
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ModelessTabFix.WindowsInterop">
            <summary>
            Windows imports
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ModelessTabFix.WindowsInterop.MSG">
            <summary>
            Windows MSG structure definition
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessTabFix.WindowsInterop.IsDialogMessageW(System.IntPtr,Geosoft.GX.Controls.ModelessTabFix.WindowsInterop.MSG@)">
            <summary>
            See: http://support.microsoft.com/kb/71450
            </summary>
            <param name="hDlg"></param>
            <param name="lpMsg"></param>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.GXNetXParamStorage">
            <summary>
            <see cref="T:Geosoft.GX.Controls.IParamStorage"/> implementation for GeoEngine.Core.GXNetX namespace
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.#ctor(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
            Default constructor
            </summary>
            <param name="pGeo">A valid <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore"/> instance.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.bStringParamExists(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.bIntParamExists(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.bDoubleParamExists(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.iGetParam(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.SetIntParam(System.String,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.dGetParam(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.SetDoubleParam(System.String,System.String,System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.GetParam(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.SetParam(System.String,System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.iGetColor(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.GXNetXParamStorage.strGetColor(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.ModelessBaseForm">
            <summary>
            A <see cref="T:Geosoft.GX.Controls.BaseForm"/> derived class that supports improved modeless behaviour
            including the ability to automatically close on project close, if launched within montaj.
            </summary>
            <remarks>
            <para>
            Modeless Forms in .Net is arguably broken in the sense that one cannot tab between controls
            within the form and that the controls' with focus is not painted with cues to this effect.
            </para>
            <para>
            This class is derived from <see cref="T:Geosoft.GX.Controls.BaseForm"/> and implements workarounds
            for this issue. Since the solution relies on changing the Z-Order of the controls to match
            their Tab-Order within the parent/child hierarchy, this could lead to unexpected behaviour where overlapped
            controls are used.
            </para>
            <para>
            This class should only be used for modeless operation.
            </para>
            </remarks>
        </member>
        <member name="F:Geosoft.GX.Controls.ModelessBaseForm.m_externalGXX">
            <summary>
            <see cref="T:Geosoft.GX.Controls.Helpers.ExternalGXX"/> to support GeoEngine.Core.GXNetX Geosoft.Desktop.GXNetX API use.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessBaseForm.#ctor(System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="runAsModal">
            Pass true if intending to use as normal modal dialog
            (via <see cref="M:System.Windows.Forms.Form.ShowDialog"/> or <see cref="M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)"/>
            </param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessBaseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessBaseForm.OnShown(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ModelessBaseForm.Context">
             <summary>
             Get the GX execution context
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessBaseForm.ShowHelp">
            <summary>
            Display Help message to the user based on the helpID
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ModelessBaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessBaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Binding.ViewModelWhenAnyValue``2(``1,``0,System.Linq.Expressions.Expression)">
            <summary>
            This method was obtained from the ReactiveUI internals and is very handy to set up bindings
            with natural syntax like with the ControlBindingMixins.BindComboBox mixin.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Binding.GetVMListProp``3(``0,System.Func{``1,``2})">
            <summary>
            Extract an <see cref="T:System.Collections.IList"/> property from the provided ViewModel.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslation">
            <summary>
            Translations for Reactive bindings.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslation.I">
            <summary>
            Singleton instance property.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ComboBoxBindingMixIns">
            <summary>
            View binding mixins for <see cref="T:System.Windows.Forms.ComboBox"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ComboBoxBindingMixIns.BindComboBox``4(``1,``0,System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``0,``3}},System.Linq.Expressions.Expression{System.Func{``1,System.Windows.Forms.ComboBox}})">
             <summary>
             Utility method to bind the combination a reactive IList property and associated selection in a ViewModel to a <see cref="T:System.Windows.Forms.ComboBox"/> control in a view.
             </summary>
             <typeparam name="TViewModel">The type of the view model being bound.</typeparam>
             <typeparam name="TView">The type of the view being bound.</typeparam>
             <typeparam name="TVMListProp">The type of the list property bound on the view model.</typeparam>
             <typeparam name="TVMSelectionProp">The type of the selection property bound on the view model.</typeparam>
             <param name="view">The instance of the view to bind.</param>
             <param name="viewModel">The instance of the view model to bind.</param>
             <param name="vmListProperty">
             An expression indicating the list property that is bound on the view model.
             This can be a chain of properties of the form. <code>vm =&gt; vm.Foo.Bar.Baz</code>
             and the binder will attempt to subscribe to changes on each recursively.
             </param>
             <param name="vmSelectionProperty">
             An expression indicating the selection property that is bound on the view model.
             This can be a chain of properties of the form. <code>vm =&gt; vm.Foo.Bar.Baz</code>
             and the binder will attempt to subscribe to changes on each recursively.
             </param>
             <param name="vComboBoxProperty">
             The combo box property on the view that is to be bound.
             This can be a chain of properties of the form. <code>view => view.Foo.Bar.Baz</code>
             and the binder will attempt to set the last one each time the view model property is updated.
             </param>
             <returns>
             An instance of <see cref="T:System.IDisposable"/> that, when disposed,
             disconnects the binding.
             </returns>
             <example>
             Example ViewModel:
             <code>
             public class SomeViewModel
             {
                [ObservableAsProperty]
                public List&lt;string&gt; SomeList { get; }
            
                [Reactive]
                public string SelectionProperty { get; set; }
            
                public SomeViewModel()
                {
                }
             }
             </code>
             Example View WhenActivated:
             <code>
             this.WhenActivated(d =&gt;
             {
                // Optional set up comboBox DisplayMember if list and selection properties are not simply strings
                d(this.BindComboBox(ViewModel, vm =&gt; vm.SomeList, vm =&gt; vm.SelectionProperty, v =&gt; v.comboBox));
             }
             </code>
             Which would be somewhat equivalent (some extra intelligence was
             added to deal with failing to update VM and maintaining selection) to:
             <code>
             this.WhenActivated(d =&gt;
             {
                // Optional set up comboBox DisplayMember if list and selection properties are not simply strings
                d(this.OneWayBind(ViewModel, vm =&gt; vm.SelectionProperty, v =&gt; v.comboBox.SelectedItem));
                d(this.OneWayBind(ViewModel, vm =&gt; vm.SomeList, v =&gt; v.comboBox.DataSource));
                d(unitsComboBox.Events().SelectedIndexChanged
                    .Select(_ => {
                       if (ViewModel == null)
                          return null;
            
                       return ViewModel.SomeList.ElementAtOrDefault(comboBox.SelectedIndex);
                    })
                    .Where(element =&gt; element != null)
                    .Subscribe(element =&gt; ViewModel.SelectionProperty = element));
               });
             }
             </code>
             </example>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ComboBoxBindingMixIns.BindAliasedComboBoxControl``4(``1,``0,System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``0,``3}},System.Linq.Expressions.Expression{System.Func{``1,System.Windows.Forms.ComboBox}})">
            <summary>
            <para>Binds a <see cref="T:System.Windows.Forms.ComboBox"/> to a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of key-value pairs, where
            the text displayed in the ComboBox is in the first position, and the backing value field is in the
            second position.</para>
            <para>Changes from View (<see cref="T:System.Windows.Forms.ComboBox"/>) to ViewModel (<typeparamref name="TVMProp"/>) are synchronized via
            a lookup on <paramref name="vmListPropertyExpression"/> by the first key-value pair element, and changes
            from ViewModel to View are synchronized via a lookup based on the second value of each tuple (using <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> of <typeparamref name="TVMProp"/>).</para>
            <para>Any changes provided via the <see cref="P:System.Windows.Forms.ComboBox.Text"/> property or through the ViewModel property
            will synchronized.</para>
            </summary>
            <typeparam name="TViewModel">The ViewModel type.</typeparam>
            <typeparam name="TView">The View type.</typeparam>
            <typeparam name="TVMKeyValListProp">the type of the ViewModel list property (needs to be an <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> of (string, T) pairs).</typeparam>
            <typeparam name="TVMProp">The ViewModel value type.</typeparam>
            <param name="view">The view containing the <see cref="T:System.Windows.Forms.ComboBox"/>.</param>
            <param name="viewModel">The ViewModel containing the <typeparamref name="TVMKeyValListProp"/>.</param>
            <param name="vmListPropertyExpression">The ViewModel <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> property, accessed via an expression.</param>
            <param name="vmPropertyExpression">The ViewModel <typeparamref name="TVMProp"/> property, accessed via an expression.</param>
            <param name="comboBoxExpression">The View <see cref="T:System.Windows.Forms.ComboBox"/> control, accessed via an expression.</param>
            <returns>An instance of <see cref="T:System.IDisposable"/> that, when disposed, disconnects the binding.</returns>
            <exception cref="T:System.ArgumentNullException">If any of arguments are null.</exception>
            <exception cref="T:System.ArgumentException">If the supplied <paramref name="vmListPropertyExpression"/> does not yield a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/>.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"></exception>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.FileEditControlBindingMixIns">
            <summary>
            View binding mixins for <see cref="T:Geosoft.GX.Controls.FileEditControl"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.FileEditControlBindingMixIns.BindFileEditControl``2(``1,``0,System.Linq.Expressions.Expression{System.Func{``0,System.String}},System.Linq.Expressions.Expression{System.Func{``1,Geosoft.GX.Controls.FileEditControl}},GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
            Binds the specified view model string property to the given view FileEditControl.
            Pulls the full filepath from the FileEditControl.
            </summary>
            <typeparam name="TViewModel"></typeparam>
            <typeparam name="TView"></typeparam>
            <param name="view">The instance of the view to bind.</param>
            <param name="viewModel">The instance of the view model to bind.</param>
            <param name="vmProperty">An expression indicating the property that is bound on the view model.</param>
            <param name="fileEditControlProperty">The property on the view that is to be bound</param>
            <param name="context">Optional <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore"/> context for use in <see cref="N:GeoEngine.Core.GXNetX"/>.</param>
            <returns>An instance of System.IDisposable that, when disposed, disconnects the binding.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.EditRealControlBinding">
            <summary>
            View binding mixins for <see cref="T:Geosoft.GX.Controls.EditRealControl"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.EditRealControlBinding.BindEditRealControl``2(``1,``0,System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Linq.Expressions.Expression{System.Func{``1,Geosoft.GX.Controls.EditRealControl}})">
            <summary>
            Binds a <see cref="T:Geosoft.GX.Controls.EditRealControl"/> to a <see cref="T:System.Double"/> on the <typeparamref name="TViewModel"/>.
            </summary>
            <remarks>
            <see cref="F:GeoEngine.Core.GXNet.Constant.rDUMMY"/> is used as a default value for the <paramref name="vmProperty"/> if an invalid
            string is entered, or if the value fails <see cref="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)"/>.
            </remarks>
            <typeparam name="TViewModel">The ViewModel type.</typeparam>
            <typeparam name="TView">The View type.</typeparam>
            <param name="view">The view, containing the <see cref="T:Geosoft.GX.Controls.EditRealControl"/>.</param>
            <param name="viewModel">The view model, containing the <paramref name="vmProperty"/>.</param>
            <param name="vmProperty">An expression returning the <see cref="T:System.Double"/> property.</param>
            <param name="editRealControlProperty">An expression returning the <see cref="T:Geosoft.GX.Controls.EditRealControl"/> control.</param>
            <returns>An instance of <see cref="T:System.IDisposable"/> that, when disposed, disconnects the binding.</returns>
            <exception cref="T:System.ArgumentNullException">Throws an exception on missing parameters.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.CIPJExtension">
            <summary>
            CIPJ Extension for INI parameter utilities
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.CIPJExtension.GetIPJFromINI(GeoEngine.Core.GXNet.CIPJ,System.String)">
            <summary>
            Restore CIPJ properties from INI parameters
            </summary>
            <param name="hIPJ"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.CIPJExtension.SaveIPJToINI(GeoEngine.Core.GXNet.CIPJ,System.String)">
            <summary>
            Save CIPJ properties into INI parameter
            </summary>
            <param name="hIPJ"></param>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.CIPJExtension.GetNameUnit(GeoEngine.Core.GXNet.CIPJ,System.String@,System.String@)">
            <summary>
            Retrieve CIPJ name and unit properties
            </summary>
            <param name="hIPJ"></param>
            <param name="name"></param>
            <param name="unit"></param>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.INIGroupAttribute">
            <summary>
            INI Group attribute
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.INIGroupAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.INIGroupAttribute.Name">
            <summary>
            INI Group Name
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.INIParamAttribute">
            <summary>
            INIParam attribute
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.INIParamAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.INIParamAttribute.Name">
            <summary>
            INI Param Name
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.INIUtility">
            <summary>
            INI Utility
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.INIUtility.GetINIGroup``1">
            <summary>
            Get INI Group attribute name
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory">
             <summary>
            
             </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory.Details">
            <summary>
            The details
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory.IsContentProminent">
            <summary>
            Is this category's contents prominent.
            </summary>
            <remarks>
            A category with prominent contents can be indicated as such when used
            by views, e.g. by default expanded in initial view etc.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategoryCollection">
            <summary>
            A simple collection of <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory"/> about an object
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategoryCollection.GetKeyForItem(Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory)">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCollection">
            <summary>
            A simple collection of details about an object
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCollection.GetKeyForItem(Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair)">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair">
            <summary>
            Name/description pair describing a unit of details about an object
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter">
            <summary>
            Operations for interacting with a <see cref="T:Geosoft.View3D.View"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.Clear">
            <summary>
            Clear the contents of the <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.Add(System.String,Geosoft.Core.IVoxel)">
            <summary>
            Add the <paramref name="voxel"/>, which exists at
            <paramref name="filename"/>, to the <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.SetControl(System.IntPtr)">
            <summary>
            Used to provide a context to render graphics onto for the
            <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.Redraw(System.ValueTuple{System.Int32,System.Int32},System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Force the <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter"/> to redraw.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.RestartRender">
            <summary>
            Restart rendering for the <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.GetSceneBounds">
            <summary>
            Attempts to get the extents for the <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter"/>,
            and return it in a <see cref="T:Geosoft.View3D.Volume"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.GetScale">
            <summary>
            Get the view scale represented as a <see cref="T:Geosoft.View3D.Vect3D"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.GetOrigin">
            <summary>
            Get the view origin represented as a <see cref="T:Geosoft.View3D.Vect3D"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.SetOffset(Geosoft.View3D.Vect3D)">
            <summary>
            Set view offset via <see cref="M:Geosoft.View3D.View.SetViewOffset(Geosoft.View3D.Vect3D,System.Boolean)"/>
            and return <see cref="M:Geosoft.View3D.View.GetRealViewOffset"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.SetRealViewDistance(System.Double)">
            <summary>
            Set real view distance via <see cref="M:Geosoft.View3D.View.SetRealViewDistance(System.Double)"/>
            and return <see cref="M:Geosoft.View3D.View.GetViewDistance"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter.SetVisualElements(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Set visual elements of the 3D view. Only non-null
            values will be applied.
            </summary>
            <param name="box">Box visual element.</param>
            <param name="axis">Axis visual element.</param>
            <param name="compass">Orientation compass visual element.</param>
            <param name="navCursor">Navigation cursor visual element.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.DDDViewAdapter.SetVisualElements(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils">
            <summary>
            Utility methods for <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/> and <see cref="T:Geosoft.GX.Controls.ReactiveUI.Views.Reactive3D.Reactive3DView"/>
            components.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.WrapInView(GeoEngine.Core.GXNetX.C3DC)">
            <summary>
            Wrap a <see cref="T:GeoEngine.Core.GXNetX.C3DC"/> in a new <see cref="T:Geosoft.View3D.View"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.TrySetExclusiveView(Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel,System.String,Geosoft.Core.IVoxel)">
            <summary>
            Attempts to set the view to exclusively cover the provided <see cref="T:Geosoft.Core.IVoxel"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.GetBoundingSphereDiameter(Geosoft.View3D.Volume)">
            <summary>
            Gets the bounding sphere diameter for the provided <see cref="T:Geosoft.View3D.Volume"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.GetCenter(Geosoft.View3D.Volume)">
            <summary>
            Returns the center of the <paramref name="volume"/> as a <see cref="T:Geosoft.View3D.Vect3D"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.ToCoreVolume(Geosoft.View3D.Volume)">
            <summary>
            Converts a <see cref="T:Geosoft.View3D.Volume"/> to
            a <see cref="T:Geosoft.Core.Volume"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.ToView3DVolume(Geosoft.Core.Volume)">
            <summary>
            Converts a <see cref="T:Geosoft.Core.Volume"/> to
            a <see cref="T:Geosoft.View3D.Volume"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.ToCoreVector3D(Geosoft.View3D.Vect3D)">
            <summary>
            Converts a <see cref="T:Geosoft.View3D.Vect3D"/> to
            a <see cref="T:Geosoft.Core.Vector3D"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.Reactive3DUtils.ToView3DVec3D(Geosoft.Core.Vector3D)">
            <summary>
            Converts a <see cref="T:Geosoft.Core.Vector3D"/> to
            a <see cref="T:Geosoft.View3D.Vect3D"/>.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveModelessBaseForm`1">
            <summary>
            A <see cref="T:Geosoft.GX.Controls.ModelessBaseForm"/> suitable to use as a View with <see cref="N:Geosoft.GX.Controls.ReactiveUI"/>
            </summary>
            <typeparam name="VM">The type of ViewModel.</typeparam>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveModelessBaseForm`1.#ctor(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveModelessBaseForm`1.ReactiveUI#IViewFor#ViewModel">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveModelessBaseForm`1.ViewModel">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveModelessBaseForm`1.InitializeForm">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveModelessBaseForm`1.ShowHelp">
            <summary>
            Display Help message to the user based on the helpID
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject">
            <summary>
            A <see cref="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateObject"/> that maintains a GX API context for GXNetX API use.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.Activator">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.WhenActivatedFailed">
            <summary>
            Can be set in derived classes to indicate to views some failure occured in VM activation that would
            prevent viewes from operating.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject._isSaveINI">
            <summary>
            Indicate whether to save INI parameters while deactivating
            Derived class needs set this flag properly to indicate whether save INI or not
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.OnDeactivate">
            <summary>
            Called when model is deactivated
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.Context">
             <summary>
             Get the GX execution context
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.InitINIParams">
            <summary>
            Initialize INI parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveGXNetXObject.SaveINIParams">
            <summary>
            Save INI parameters
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateGXNetXUserControl`1">
            <summary>
            An extension of <see cref="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1"/>, exposing a <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore"/> for
            use within <see cref="N:GeoEngine.Core.GXNetX"/> contexts.
            </summary>
            <typeparam name="TViewModel"></typeparam>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateGXNetXUserControl`1.ExternalGXX">
            <summary>
            A <see cref="P:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateGXNetXUserControl`1.ExternalGXX"/> instance
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateGXNetXUserControl`1.Context">
            <summary>
            A <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore"/> instance allowing for invocations into <see cref="N:GeoEngine.Core.GXNetX"/> contexts.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateGXNetXUserControl`1.#ctor">
            <summary>
            Default .ctor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateObject">
            <summary>
            A <see cref="T:ReactiveUI.ReactiveObject"/> supporting translation functionality.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateObject._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateObject._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateObject._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1">
            <summary>
            A <see cref="T:Geosoft.GX.Controls.BaseForm"/> suitable to use as a View with <see cref="N:Geosoft.GX.Controls.ReactiveUI"/>
            </summary>
            <typeparam name="VM">The type of ViewModel.</typeparam>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.#ctor(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.#ctor(System.IntPtr,Geosoft.GX.Controls.IParamStorage)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.#ctor(Geosoft.GX.Controls.IParamStorage)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.#ctor(Geosoft.GX.Controls.IParamStorage,Geosoft.GX.Controls.IAPIAdapter)">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.ReactiveUI#IViewFor#ViewModel">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.ViewModel">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveBaseForm`1.InitializeForm">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1">
            <summary>
            This is an UserControl that is both and UserControl and has ReactiveObject
            powers (i.e. you can call RaiseAndSetIfChanged) and runtime GX translations.
            </summary>
            <typeparam name="TViewModel">The type of the view model.</typeparam>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1.SkipTranslationDesignMode">
            <summary>
            Should translation be skipped (due to design mode)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1._f(System.FormattableString)">
            <summary>
            Translate composite format string (C# string interpolation) based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1.TranslateControls">
            <summary>
            Translate all controls which have been added to this parent.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1.TranslateControl(System.Windows.Forms.Control)">
            <summary>
            Translate a specific control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1.DesignMode">
            <summary>
             Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component"/> is currently
             in design mode.
            </summary>
            <returns>
            	true if the <see cref="T:System.ComponentModel.Component"/> is in design mode; otherwise, false.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ReactiveUtils">
            <summary>
            Provides extension methods for ReactiveUI.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveUtils.WhereNotNullOrWhitespace(System.IObservable{System.String})">
            <summary>
            Enforces <see cref="M:System.String.IsNullOrWhiteSpace(System.String)"/> on the <see cref="T:System.IObservable`1"/> <paramref name="source"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ReactiveUtils.WhereNotNullOrEmpty(System.IObservable{System.String})">
            <summary>
            Enforces <see cref="M:System.String.IsNullOrEmpty(System.String)"/> on the <see cref="T:System.IObservable`1"/> <paramref name="source"/>.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.IDeferredValidation">
            <summary>
            An additional tag that can be applied to <see cref="T:ReactiveUI.Validation.Abstractions.IValidatableViewModel"/> objects
            to provide a means of signalling that the ViewModel is ready for validation.
            </summary>
            <remarks>See <see cref="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.ValidatableViewModelExtensions.DeferredValidationRule``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.IObservable{ReactiveUI.Validation.States.IValidationState})"/>
            for a means of defining deferred validatation rules to be applied after <see cref="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.IDeferredValidation.ReadyForValidation"/> has been set to true.</remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.IDeferredValidation.ReadyForValidation">
            <summary>
            A boolean representing whether the ViewModel is ready for validation.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.ValidatableViewModelExtensions">
             <summary>
            
             </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.ValidatableViewModelExtensions.DeferredValidationRule``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.IObservable{ReactiveUI.Validation.States.IValidationState})">
            <summary>
            Defines a deferred validation rule, which will be applied only when <see cref="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.IDeferredValidation.ReadyForValidation"/> is true.
            </summary>
            <typeparam name="TViewModel">The ViewModel type.</typeparam>
            <typeparam name="TViewModelProp">The ViewModel property type.</typeparam>
            <param name="viewModel">The ViewModel.</param>
            <param name="viewModelProperty">The ViewModel property to apply the validation rule to.</param>
            <param name="validationObservable">The observable setting a validation state.</param>
            <returns>A disposable validation rule.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.ValidatableViewModelExtensions.BindDeferredValidation``2(``0,``1,System.Linq.Expressions.Expression{System.Func{``0,System.Windows.Forms.Button}})">
            <summary>
            <para>If the <see cref="T:System.Windows.Forms.DialogResult"/> of the <paramref name="form"/> is currently <see cref="F:System.Windows.Forms.DialogResult.OK"/>,
            then set the <see cref="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.IDeferredValidation.ReadyForValidation"/> property to true, to signal to the 
            <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.IDeferredValidation"/> object that validation is ready to occur. This will trigger any 
            <see cref="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.ValidatableViewModelExtensions.DeferredValidationRule``2(``0,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.IObservable{ReactiveUI.Validation.States.IValidationState})"/>
            to occur.</para>
            <para>Finally, if <see cref="P:ReactiveUI.Validation.Contexts.ValidationContext.IsValid"/> is false form the <paramref name="form"/>, it will explicitly
            set <see cref="P:System.Windows.Forms.Form.DialogResult"/> to <see cref="F:System.Windows.Forms.DialogResult.None"/>, to keep the form open and allow the user to fix
            the mistakes on the form.</para>
            </summary>
            <typeparam name="TView">The View type.</typeparam>
            <typeparam name="TViewModel">The ViewModel type.</typeparam>
            <param name="form">The form (view) implementing IViewFor and containing the ViewModel.</param>
            <param name="viewModel">The ViewModel property for the view.</param>
            <param name="buttonProperty">The button property for the view.</param>
            <returns>A disposable subscription.</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel">
            <summary>
            A ViewModel for representing 3D objects through a Reactive control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.View">
            <summary>
            The 3D view class, provides a context to render objects in 3D.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.FromHandle(System.IntPtr)">
            <summary>
            Initialize a <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/> from the provided <paramref name="handle"/>,
            which corresponds to the IWin32Window / Control handle.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.Handle">
            <summary>
            The IWin32Window / Control handle used to initialize the <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.Redraw(System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Redraw the <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/> using the supplied width and height.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.GetSceneBounds">
            <summary>
            Get the scene bounds of the <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.SetSceneExtents(Geosoft.Core.Volume)">
            <summary>
            Set the extents of the <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/> to
            cover the provided <paramref name="volume"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel.SetVisualElements(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Set visual elements of the 3D view. Only non-null
            values will be applied.
            </summary>
            <param name="box">Box visual element.</param>
            <param name="axis">Axis visual element.</param>
            <param name="compass">Orientation compass visual element.</param>
            <param name="navCursor">Navigation cursor visual element.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel">
            <summary>
            An implementation of the <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.Activator">
            <summary>
            Responsible for activating the <see cref="T:ReactiveUI.IActivatableViewModel"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.View">
            <summary>
            An adapter to the <see cref="T:Geosoft.View3D.View"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.Handle">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.LastArea">
            <summary>A cache of the last area so we can redraw without passing in the width and height.</summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.Make(Geosoft.GX.Controls.ReactiveUI.Models.Reactive3D.I3DViewAdapter)">
            <summary>
            Factory method for the <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.IReactive3DViewModel"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.FromHandle(System.IntPtr)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.Redraw(System.ValueTuple{System.Int32,System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.GetSceneBounds">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.SetSceneExtents(Geosoft.Core.Volume)">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.SetVisualElements(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel.Dispose">
            <summary>
            Cleanup for <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Reactive3D.Reactive3DViewModel"/>.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow">
            <summary>
            Describes the state of a row in a details grid.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.Description">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.IsCategoryHeader">
            <summary>
            Should this row be presented as a category header (bold style etc.)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.IsCategoryCollapsed">
            <summary>
            Should this row show present it is collapsed (arrow indicators etc.)
            </summary>
            <remarks>Will only be used if IsCategoryHeader is true too.</remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.IsCategoryEmpty">
            <summary>
            Should this row show present it is collapsed (arrow indicators etc.)
            </summary>
            <remarks>Will only be used if IsCategoryHeader is true too.</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.#ctor(Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair)">
            <summary>
            Construct from <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsPair"/>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridRow.#ctor(Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory)">
            <summary>
            Construct from <see cref="T:Geosoft.GX.Controls.ReactiveUI.Models.DetailsCategory"/>
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel">
            <summary>
            View model to manipulate the read-only display of details within a view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel.Activator">
            <summary>
            Gets the Activator which will be used by the View when Activation/Deactivation occurs.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel.DetailsRowsToShow">
            <summary>
            The presentation of the details as a list of rows
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel.Details">
            <summary>
            The current details
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel.ToggleExpandCollapseForRowCommand">
            <summary>
            Command to toggle the expand/collapse state for a row
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Views.Reactive3D.Reactive3DView">
            <summary>
            A <see cref="T:Geosoft.GX.Controls.ReactiveUI.ReactiveTranslateUserControl`1"/> view for displaying and 
            rendering 3D components (embeds a 3D view into a control).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Reactive3D.Reactive3DView.#ctor">
            <summary>
            Basic constructor, set up 
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ReactiveUI.Views.Reactive3D.Reactive3DView.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Reactive3D.Reactive3DView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Reactive3D.Reactive3DView.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Details.SimpleDetailsGridFormView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="F:Geosoft.GX.Controls.ReactiveUI.Views.Details.SimpleDetailsGridFormView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Details.SimpleDetailsGridFormView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Views.Details.DetailsGridView">
            <summary>
            Simple user control to present a <see cref="T:Geosoft.GX.Controls.ReactiveUI.ViewModels.Details.DetailsGridViewModel"/> in a readonly view.
            </summary>
            <remarks>
            The control will auto size to its content
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Details.DetailsGridView.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ReactiveUI.Views.Details.DetailsFormViewFactory">
            <summary>
            Factory class to create a basic standalone details form
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ReactiveUI.Views.Details.DetailsFormViewFactory.Create">
            <summary>
            Create a basic standalone details form
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapCursors">
            <summary>
            Cursors to use in mappping contexts
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapCursors.Shadow">
            <summary>
            Standard shadow cursor mode
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapCursors.Digitize">
            <summary>
            Standard digitize mode
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DataProfileControl">
            <summary>
            Plot one or more data profiles in an XY graph, with axis and scaling options.
            The control currently supports maximum 3 data sets. May consider using more generic data set array instead if needed.
            The data sets can scale together or independently on Y axis, the former scale method will use the range of the data set 1 (YData1) as primary reference.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.DataProfileControl.AxisScaling">
            <summary>
            All Axis scaling options. X and Y axes do not support all types individually
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DataProfileControl.AxisScaling.Equal">
            <summary>
            Space axis equally by data index; ignore actual value, and do not plot labels
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DataProfileControl.AxisScaling.Linear">
            <summary>
            Space axis linearlly
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DataProfileControl.AxisScaling.Log">
            <summary>
            Space axis logarithmically
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DataProfileControl.AxisScaling.LogLinear">
            <summary>
            Space axis using Log-linear transform
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.XAxisScaling">
            <summary>
            Scaling for the X-axis.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.MinimumX">
            <summary>
            Pre-set Minimum X-Axis value.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.MaximumX">
            <summary>
            Pre-set Maximum X-Axis value.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.PlotDiscreteXDataTicsAndLabels">
            <summary>
            If false, plots a "normal" X-axis with tics and labels independent of the XData locations.
            If true, an X-tic is plotted for each YData value. If XData is defined, the value appears as a label.
            If true and XData is not defined, data is spaced equally (XAxisScaling is ignored)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.LogMinimumX">
            <summary>
            Used for Log or LogLinear X-axis scaling
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.XData">
            <summary>
            If defined, individual x-values for the X data. If not set, both MinimumX and MaximumX must be defined.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.MinimumY">
            <summary>
            Pre-set Minimum Y-Axis value.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.MaximumY">
            <summary>
            Pre-set Maximum X-Axis value.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YAxisScaling">
            <summary>
            Scaling for the Y-axis: Equal not supported.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.Label1">
            <summary>
            Label for data set #1
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.Label2">
            <summary>
            Label for data set #2
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.Label3">
            <summary>
            Label for data set #3
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YData1">
            <summary>
            Data set #1 (required)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YData2">
            <summary>
            Data set #2 (optional)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YData3">
            <summary>
            Data set #3 (optional)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YData2ScaleIndependent">
            <summary>
            Scale independently on YAxis for YData2.
            - True: The plotting range is based on YData2 range
            - False: The plotting range is the join of YData1 and YData2 ranges or custom range from MinimumY/MaximumY
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YData3ScaleIndependent">
            <summary>
            Scale independently on YAxis for YData3
            - True: The plotting range is based on YData3 range
            - False: The plotting range is the join of YData1 and YData3 ranges or custom range from MinimumY/MaximumY
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.Color1">
            <summary>
            Colour for YData1 lines and symbols
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.Color2">
            <summary>
            Colour for YData2 lines and symbols
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.Color3">
            <summary>
            Colour for YData3 lines and symbols
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.LogMinimumY">
            <summary>
            Used for Log or LogLinear Y-axis scaling
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.XAxisLabel">
            <summary>
            X-axis units
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.YAxisLabel">
            <summary>
            Y-axis units
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.CurrentXIndex">
            <summary>
            Highlight a particular data index.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.PlotDataSymbols">
            <summary>
            Plot square boxes at data points?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DataProfileControl.PlotLegend">
            <summary>
            Plot legend inside the graph?
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl.Rescale">
            <summary>
            Force rescaling before next refresh
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl._(System.String)">
            <summary>
            Translate string based on the current Geosoft language setting
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.DataProfileControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl.OnResize(System.EventArgs)">
             <summary>
            
             </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DataProfileControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DataProfileControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.GroupedComboBox">
            <summary>
            Represents a Windows combo box control that, when bound to a data source, is capable of
            displaying items in groups/categories.
            </summary>
            <remarks>
            A ComboBox Control With Grouping
            By Bradley Smith - 2010/06/23 (http://www.brad-smith.info/blog/archives/104)
            JB: Modified to work with BetterComboBox
            </remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.GroupedComboBox.DataSource">
            <summary>
            Gets or sets the data source for this GroupedComboBox.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GroupedComboBox.DrawMode">
            <summary>
            Gets a value indicating whether the drawing of elements in the list will be handled by user code.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GroupedComboBox.GroupMember">
            <summary>
            Gets or sets the property to use when grouping items in the list.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.#ctor">
            <summary>
            Initialises a new instance of the GroupedComboBox class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Explicit interface implementation for the IComparer.Compare method. Performs a two-tier comparison
            on two list items so that the list can be sorted by group, then by display value.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.IsGroupStart(System.Int32,System.String@)">
            <summary>
            Determines whether the list item at the specified index is the start of a new group. In all
            cases, populates the string respresentation of the group that the item belongs to.
            </summary>
            <param name="index"></param>
            <param name="groupText"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.mBindingSource_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Re-synchronises the internal sorted collection when the data source changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.OnFontChanged(System.EventArgs)">
            <summary>
            When the control font changes, updates the font used to render group names.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.OnParentChanged(System.EventArgs)">
            <summary>
            When the parent control changes, updates the font used to render group names.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Performs custom painting for a list item.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            Determines the size of a list item.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupedComboBox.SyncInternalItems">
            <summary>
            Rebuilds the internal sorted collection.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IIniParameterControl">
            <summary>
            All controls that wish to work with the INI component should implement this interface.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IIniParameterControl.Name">
            <summary>
            The name of the Control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IIniParameterControl.INIComponent">
            <summary>
            INI support property. Used by INI compoenent to register itself with the form to ensure reliable initialization
            for controls from INI parameter settings irrespective of their property initialization order in the designer generated code.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IIniParameterControl.INIParameter">
            <summary>
            If set will contain the INI parameter (GROUP.PARAM) for this control. This is used to improve the error messaged
            during validation failures during script runs.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Design.LabelControlDesigner._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Design.SeparatorDesigner">
            <summary>
            Constrain sizing horizontally for <see cref="T:Geosoft.GX.Controls.Separator"/> control
            </summary>
            <exclude/>
        </member>
        <member name="T:Geosoft.GX.Controls.Design.DesignContainerControlDesigner">
            <summary>
            Aids in the mechanism for providing nice snapping guides for the various controls in this library.
            </summary>
            <exclude/>
        </member>
        <member name="P:Geosoft.GX.Controls.Design.DesignContainerControlDesigner.SnapLines">
            <summary>Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine"></see> objects representing significant alignment points for this control.</summary>
            <returns>A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine"></see> objects representing significant alignment points for this control.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.Design.TrackBarDesigner._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx">
            <summary>
            DragDropListBoxSelectionSpecifierControlEx
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx.InputListBox">
            <summary>
            Gets or sets the input list box.
            </summary>
            <value>The input list box.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx.OutputListBox">
            <summary>
            Gets or sets the output list box.
            </summary>
            <value>The output list box.</value>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx"/> class.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControlEx.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.InfoLabel">
            <summary>
            Horizontal dual value informational label that helps with designing forms for layout growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.InfoLabel.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.InfoLabel.TextLeft">
            <summary>
            Gets or sets the left hand text.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.InfoLabel.TextLeftColour">
            <summary>
            Gets or sets the left hand text colour.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.InfoLabel.TextRight">
            <summary>
            Gets or sets the right hand text.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.InfoLabel.TextRightColour">
            <summary>
            Gets or sets the right hand text colour.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.InfoLabel.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.InfoLabel.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.InfoLabel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.InfoLabel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.InfoLabel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DualChoiceRadioControl">
            <summary>
            Horizontal dual choice radio button that helps with designing forms for layout growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceRadioControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceRadioControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current radio button passes valiation tests.
            </summary>
            <param name="strError">The error message returned if the control does not validate.</param>
            <returns>Always true except if EnumValues were not configured.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.EnumValue1">
            <summary>
            Gets or sets the numeric value associated with Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.EnumValue2">
            <summary>
            Gets or sets the numeric value associated with Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.DefaultValue">
            <summary>
            Gets or sets the default value of this control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.EqualColumnWidths">
            <summary>
            Make the columns of same width for better alignment with other controls.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.Text1">
            <summary>
            Gets or sets the text next to Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.Text2">
            <summary>
            Gets or sets the text next to Radio Button 2.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.RadioButton1">
            <summary>
            Gets the Radio Button 1 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.RadioButton2">
            <summary>
            Gets the Radio Button 2 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.ReadOnly">
            <summary>
            Gets or sets the read-only status of this control; when set, the unchecked option is disabled to prevent changing.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceRadioControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.Checked">
            <summary>
            Get/set the checked state of second radio button
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceRadioControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DualChoiceRadioControl.CheckedChanged">
            <summary>
            Occurs when either radio button's Checked property is changed.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DualChoiceRadioControl.Click">
            <summary>
            Occurs when either radio button control is clicked.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DualChoiceRadioControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DualChoiceRadioControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceRadioControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DualChoiceRadioControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CheckedComboBox">
            <summary>
            Checked Combo box
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CheckedComboBox.Dropdown">
            <summary>
            Internal class to represent the dropdown list of the CheckedComboBox
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CheckedComboBox.Dropdown.CCBoxEventArgs">
            <summary>
            Custom EventArgs encapsulating value as to whether the combo box value(s) should be assignd to or not.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CheckedComboBox.Dropdown.CustomCheckedListBox">
            <summary>
            A custom CheckedListBox being shown within the dropdown form representing the dropdown list of the CheckedComboBox.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.Dropdown.CustomCheckedListBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Intercepts the keyboard input, [Enter] confirms a selection and [Esc] cancels it.
            </summary>
            <param name="e">The Key event arguments</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.Dropdown.CloseDropdown(System.Boolean)">
            <summary>
            Closes the dropdown portion and enacts any changes according to the specified boolean parameter.
            NOTE: even though the caller might ask for changes to be enacted, this doesn't necessarily mean
                  that any changes have occurred as such. Caller should check the ValueChanged property of the
                  CheckedComboBox (after the dropdown has closed) to determine any actual value changes.
            </summary>
            <param name="enactChanges"></param>
        </member>
        <member name="F:Geosoft.GX.Controls.CheckedComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.ValueSeparator">
            <summary>
            Gets or sets the value separator character(s) between the ticked elements as they appear in the text portion of the CheckedComboBox.
            </summary>
            <value>The value separator.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.CheckOnClick">
            <summary>
            Gets or sets a value indicating whether [check on click].
            </summary>
            <value><c>true</c> if [check on click]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.DisplayMember">
            <summary>
            Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl"/>.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.String"/> specifying the name of an object property that is contained in the collection specified by the <see cref="P:System.Windows.Forms.ListControl.DataSource"/> property. The default is an empty string ("").
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.Items">
            <summary>
            Gets an object representing the collection of the items contained in this <see cref="T:System.Windows.Forms.ComboBox"/>.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection"/> representing the items in the <see cref="T:System.Windows.Forms.ComboBox"/>.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.CheckedItems">
            <summary>
            Gets the checked items.
            </summary>
            <value>The checked items.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.CheckedIndices">
            <summary>
            Gets the checked indices.
            </summary>
            <value>The checked indices.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.ValueChanged">
            <summary>
            Gets a value indicating whether [value changed].
            </summary>
            <value><c>true</c> if [value changed]; otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Geosoft.GX.Controls.CheckedComboBox.ItemCheck">
            <summary>
            Occurs when [item check].
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.CheckedComboBox"/> class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDown"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.OnDropDownClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownClosed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBox.IncludeAllCheckboxItem">
            <summary>
            Include \"All\" checkbox as the first item
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.GetItemChecked(System.Int32)">
            <summary>
            Gets the item checked.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.SetItemChecked(System.Int32,System.Boolean)">
            <summary>
            Sets the item checked.
            </summary>
            <param name="index">The index.</param>
            <param name="isChecked">if set to <c>true</c> [is checked].</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.GetItemCheckState(System.Int32)">
            <summary>
            Gets the state of the item check.
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.SetItemCheckState(System.Int32,System.Windows.Forms.CheckState)">
            <summary>
            Sets the state of the item check.
            </summary>
            <param name="index">The index.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBox.GetItemText(System.Int32)">
            <summary>
            Gets text of the item
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.CheckedComboBoxControl">
            <summary>
            	<see cref="T:System.Windows.Forms.ComboBox"/> type control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.CheckedComboBoxControl.m_strDefault">
            <summary>
            Default Selection
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.CheckedComboBoxControl"/> class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBoxControl.NameOrAlias">
            <summary>
            Gets or sets the List Name/Alias status.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBoxControl.DefaultValue">
            <summary>
            Gets or sets the default value for the edit control. This is either the Name or Alias value, depending on the control type.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.CheckedComboBoxControl.RequiredChanged">
            <summary>
            Fired when <see cref="P:Geosoft.GX.Controls.CheckedComboBoxControl.Required"/> property changes
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBoxControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBoxControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBoxControl.IncludeAllCheckboxItem">
            <summary>
            Set first item as "All", clicking on this checks/unchecks all items
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.Init(GeoEngine.Core.GXNet.CLST,System.Int32)">
            <summary>
            Initialize the control with with item names and optional values. Existing control items are first.
            </summary>
            <param name="hLST">The h LST.</param>
            <param name="iItemType">Type of the i item.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current list box item passes valiation tests.
            </summary>
            <remarks>The following validation is performed:
            <list type="bullet">
            <item><description>If the item is required, it must be defined.</description></item></list>
            </remarks>
            <param name="strError">The error message returned if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.IsItemChecked(System.Int32)">
            <summary>
            Determines whether [is item checked] [the specified index].
            </summary>
            <param name="index">The index.</param>
            <returns>
            	<c>true</c> if [is item checked] [the specified index]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.SetItemCheck(System.Int32,System.Boolean)">
            <summary>
            Sets the item check.
            </summary>
            <param name="index">The index.</param>
            <param name="isChecked">if set to <c>true</c> [is checked].</param>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckedComboBoxControl.Count">
            <summary>
            Gets the number of items
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.Clear">
            <summary>
            Clears all the items
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.ItemName(System.Int32)">
            <summary>
            Gets item name
            </summary>
            <param name="index"></param>
            <returns>Name string</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.ItemValue(System.Int32)">
            <summary>
            Gets item value
            </summary>
            <param name="index"></param>
            <returns>Value string</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.AppendItem(System.String,System.String,System.Boolean)">
            <summary>
            Appends name and value at the end of the list
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="check">the item is checked if true</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.RemoveItem(System.String)">
            <summary>
            Removes item indicated by name and does nothing if the item is not found.
            </summary>
            <param name="name">name of the item to remove.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.RemoveItem(System.Int32)">
            <summary>
            Removes item indicated by index and does nothing if the index is out of range
            </summary>
            <param name="index">The zero-based index of the item to remove</param>
        </member>
        <member name="F:Geosoft.GX.Controls.CheckedComboBoxControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckedComboBoxControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl">
            <summary>
            DragDropListBoxSelectionSpecifierControl
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.InputListBox">
            <summary>
            Gets or sets the input list box.
            </summary>
            <value>The input list box.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.OutputListBox">
            <summary>
            Gets or sets the output list box.
            </summary>
            <value>The output list box.</value>
        </member>
        <member name="E:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.OnAddItemsClick">
            <summary>
            Occurs when the Add button is clicked.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.OnRemoveItemsClick">
            <summary>
            Occurs when the Remove button is clicked.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl"/> class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.AddSelectedFromInputToOutput">
            <summary>
            Adds the selected from input to output.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.RemoveSelectedFromOutputToInput">
            <summary>
            Removes the selected from output to input.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBoxSelectionSpecifierControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DragDropListBox">
            <summary>
            ListBox which provides a fully integrated drag-and-drop functionality, which also works when multiple ListBox items are selected (multiselect).
            Items can be moved and copied between different DragDropListBoxes or can be moved inside of one DragDropListBox in order to be reordered.
            Drag-and-drop works also with or types of controls implementing IDragDropSource.
            </summary>
            <remarks>Provides additional properties for the fine-tuning of the drag-and-drop behavior in the section
            "Behavior (drag-and-drop)" of the properties window of the form designer. </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.DragDropListBox"/> class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.DragDropGroup">
            <summary>
            Drag-and-drop group to which the control belongs. Drag-and-drop is restricted to happen between controls having the same DragDropGroup.
            </summary>
            <example>Let's assume that we have a form with four DragDropListBoxes on it. Two of them contain cats and two of them contain dogs.
            We only want to be able to move cats between the cat lists and dogs between the dog lists (cats and dogs don't like each other).
            We can achieve this simply by setting the DragDropGroup property of the cat lists to "cats". In the dog lists we can leave the
            DragDropGroup empty or we can set it to "dogs" for instance. It just has to be different from the DragDropGroup in the cat lists.
            <code>catList1.DragDropGroup = "cats";   catList2.DragDropGroup = "cats";</code>
            </example>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.IsDragDropCopySource">
            <summary>
            Indicates whether the user can copy items from this control by draging them to another control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.IsDragDropMoveSource">
            <summary>
            Indicates whether the user can remove items from this control by draging them to another control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.GetSelectedItems">
            <summary>
            Returns the selected list items in a array.
            </summary>
            <returns>Array with the selected items.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.RemoveSelectedItems(System.Int32@)">
            <summary>
            Removes the selected items from the list and adjusts the item-index passed to this method,
            so that this index points to the same item afterwards.
            </summary>
            <param name="itemIndexToAjust">Item-index to be adjusted.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnDropped(Geosoft.GX.Controls.DroppedEventArgs)">
            <summary>
            Is called when a drag-and-drop operation is completed in order to raise the Dropped event.
            </summary>
            <param name="e">Event arguments which hold information on the completed operation.</param>
            <remarks>Is called for the target as well as for the source.
            The role a control plays (source or target) can be determined from e.Operation.</remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.AllowItemEditing">
            <summary>
            Gets or sets a value indicating whether the user can edit the list items.
            </summary>
            <value><c>true</c> if [allow item editing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.MetaStartCharacter">
            <summary>
            Gets or sets  the meta data start character to use.
            </summary>
            <value><c>true</c> if [allow item editing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.MetaEndCharacter">
            <summary>
            Gets or sets  the meta data end character to use,
            </summary>
            <value><c>true</c> if [allow item editing]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.AllowReorder">
            <summary>
            Indicates whether the user can redorder the list by dragging items.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DragDropListBox.IsDragDropTarget">
            <summary>
            Indicates whether the user can drop items from another control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DragDropListBox.Dropped">
            <summary>
            Occurs when a extended DragDropListBox drag-and-drop operation is completed.
            </summary>
            <remarks>This event is raised for the target as well as for the source.
            The role a control plays (source or target) can be determined from the Operation property of the DroppedEventArgs.</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.Clear">
            <summary>
            Clear all items in both boxes and restore to initial state. Call this, NOT this.Items.Clear() !
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DragDrop"/> event.
            </summary>
            <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DragOver"/> event.
            </summary>
            <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DragEnter"/> event.
            </summary>
            <param name="drgevent">A <see cref="T:System.Windows.Forms.DragEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnDragLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DragLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            </summary>
            <param name="e">Event object with the details</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnDoubleClick(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.WndProc"/> event.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DragDropListBox.ItemsChanged">
            <summary>
            Handles changes to items in the list box.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.RestoreSelection(System.Int32)">
            <summary>
            Restores the lost selection from the array selectionSave.
            </summary>
            <param name="clickedItemIndex">Index of the clicked item.</param>
            <remarks>If the user clicks into the selection, he might want to drag the selected items,
            but the mouse click destroys the current selection, if more than one item is selected. </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.SaveSelection">
            <summary>
            Saves the current selection to the array selectionSave.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.DropIndex(System.Int32)">
            <summary>
            Gets the index of the item before which items are being dropped. The index is calculated from the vertical position of the mouse.
            If the drop position lies after the last item in the list, then the index of the last item + 1 (which is equal to Item.Count) is returned instead.
            </summary>
            <param name="yScreen">y-coordinate of the mouse expressed in screen coordinates.</param>
            <returns>Index of an item in the list or Items.Count</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox.GetDragDropEffect(System.Windows.Forms.DragEventArgs)">
            <summary>
            Determines the drag-and-drop operation which is beeing performed, which can be either None, Move or Copy.
            </summary>
            <param name="drgevent">DragEventArgs.</param>
            <returns>The current drag-and-drop operation.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.DragDropListBox._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DropOperation">
            <summary>
            Drop Operations Supported
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DropOperation.Reorder">
            <summary>
            Reorder
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DropOperation.MoveToHere">
            <summary>
            Move To Here
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DropOperation.CopyToHere">
            <summary>
            Copy To Here
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DropOperation.MoveFromHere">
            <summary>
            Move From Here
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DropOperation.CopyFromHere">
            <summary>
            Copy From Here
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DroppedEventArgs">
            <summary>
            Dropped Event Args
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DroppedEventArgs.Operation">
            <summary>
            Gets or sets the operation.
            </summary>
            <value>The operation.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DroppedEventArgs.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DroppedEventArgs.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.DroppedEventArgs.DroppedItems">
            <summary>
            Gets or sets the dropped items.
            </summary>
            <value>The dropped items.</value>
        </member>
        <member name="T:Geosoft.GX.Controls.IDragDropSource">
            <summary>
            Drag Drop Source Interface
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IDragDropSource.DragDropGroup">
            <summary>
            Gets the drag drop group.
            </summary>
            <value>The drag drop group.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.IDragDropSource.IsDragDropCopySource">
            <summary>
            Gets a value indicating whether this instance is drag drop copy source.
            </summary>
            <value>
            	<c>true</c> if this instance is drag drop copy source; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Geosoft.GX.Controls.IDragDropSource.IsDragDropMoveSource">
            <summary>
            Gets a value indicating whether this instance is drag drop move source.
            </summary>
            <value>
            	<c>true</c> if this instance is drag drop move source; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Geosoft.GX.Controls.IDragDropSource.GetSelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IDragDropSource.RemoveSelectedItems(System.Int32@)">
            <summary>
            Removes the selected items.
            </summary>
            <param name="rowIndexToAjust">The row index to ajust.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.IDragDropSource.OnDropped(Geosoft.GX.Controls.DroppedEventArgs)">
            <summary>
            Raises the <see cref="E:Dropped"/> event.
            </summary>
            <param name="e">The <see cref="T:Geosoft.GX.Controls.DroppedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.VisualCue">
            <summary>
            Horizontal line, which indicates the current drop position.
            </summary>
            <remarks>In order to be able to delete the visual cue properly, we need to draw in inverted mode. Since
            Microsoft has not included this option into the BCL, we need to fall back on the Win32 API.</remarks>
        </member>
        <member name="F:Geosoft.GX.Controls.VisualCue.NoVisualCue">
            <summary>
            Indicates that no visual cue has been drawn.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.VisualCue.#ctor(System.Windows.Forms.ListBox)">
            <summary>
            Initializes a new instance of the VisualCue class.
            </summary>
            <param name="listBox">ListBox or control derived from ListBox which owns the visual cue.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.VisualCue.Index">
            <summary>
            Gets the index of the item before which the visual cue has been drawn or NoVisualCue if no visual cue has been drawn.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.VisualCue.Clear">
            <summary>
            Clears the visual cue, if some visual cue is visible.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.VisualCue.Draw(System.Int32)">
            <summary>
            Draws a visual cue before (above) the list item indicated by itemIndex. If itemIndex is greater than
            the index of the last item of the list, then the visual cue is drawn after (below) the last list item.
            </summary>
            <remarks>Remembers the passed index for later use by the Clear method and for the Index property.</remarks>
            <param name="itemIndex">Index of a list item.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Win32">
            <summary>
            Win 32 API stuff used in this Project.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ChannelSelectionFilter">
            <summary>
            Channel Selection Filter.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ChannelSelectionFilter.X">
            <summary>
            Select X channel.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ChannelSelectionFilter.Y">
            <summary>
            Select Y channel
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ChannelSelectionFilter.Z">
            <summary>
            Select Z channel
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ChannelSelectionFilter.Data">
            <summary>
            Select Data channel
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.GDBChannelSelectorControl">
             <summary>
            
             </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBChannelSelectorControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.GDBChannelSelectorControl"/> class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GDBChannelSelectorControl.ChannelFilter">
            <summary>
            Gets or sets the channel filter.
            </summary>
            <value>The channel filter.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.GDBChannelSelectorControl.AllowArrayChannels">
            <summary>
            Gets or sets a value indicating whether [allow VA channels].
            </summary>
            <value><c>true</c> if [allow VA channels]; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:Geosoft.GX.Controls.GDBChannelSelectorControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBChannelSelectorControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.GDBChannelSelectorControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.HelpForm">
            <summary>
            Base <see cref="T:System.Windows.Forms.Form"/> which implements hookup to Geosoft help system
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.HelpForm.m_strHelpGroup">
            <summary>
            Help topic group
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.HelpForm.m_strHelpID">
            <summary>
            Help topic ID
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.HelpForm.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.HelpForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.HelpForm.HelpTopicID">
            <summary>
            Help topic ID, set this to display the topic when the help button in the titlebar is clicked
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.HelpForm.ShowHelp">
            <summary>
            Display Help message to the user based on the helpID
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.HelpForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.HelpForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.AutoHideSplitContainer">
            <summary>
            A splitcontainer that provides auto-hide functionality on panel 1
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.AutoHideSplitContainer"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl"/> event
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.</summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.SetRightHand">
            <summary>
            Sets tabs to right hand side.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AutoHideSplitContainer.TabImage">
            <summary>
            The image to display (if any) in the tab if in auto-hide mode
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AutoHideSplitContainer.TabText">
            <summary>
            The text to display in the tab if in auto-hide mode
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AutoHideSplitContainer.PinOnLeft">
            <summary>
            Where to pin the tab
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.Expand">
            <summary>
            Called to cause the panel to expand (does nothing if panel is pinned)
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.AutoHideSplitContainer.PositionPanel">
            <summary>
            Fired if the child controls in Panel1 should be repositioned
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.AutoHideSplitContainer.InsideClientRect">
            <summary>
            Returns the current inside client rectangle based on the visibility of the caption and tab
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.ToggleAutoHide">
            <summary>
            Toggle current autohide state (can be used to start in collapsed state, but have to be called when the control is fully created)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.Collapse">
            <summary>
            Called to cause the panel to collapes (does nothing if panel is pinned)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.AutoHideSplitContainer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideSplitContainer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.AutoHideCaption._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.BaseControl">
            <summary>
            Base class implementing shared functionality of all controls in <see cref="N:Geosoft.GX.Controls"/>
            </summary>
            <exclude/>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.UserControl.Load"></see> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.DoValidation">
            <summary>
            Set the control that the error provider should use as an alternate to posistion itself during failed validation.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.CustomInlineValidation">
            <summary>
            Get or set custom inline validation to be performed on a control after any built-in validation has been performed.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.ErrorProviderBuddy">
            <summary>
            Set the control that the error provider should use as an alternate to posistion itself during failed validation.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.INIParameter">
            <summary>
            If set will contain the INI parameter (GROUP.PARAM) for this control. This is used to improve the error messaged
            during validation failures during script runs.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.LabelBuddy">
            <summary>
            The <see cref="T:Geosoft.GX.Controls.LabelControl"/>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.SetEnabled(System.Boolean)">
            <summary>
            Convenience method to change <see cref="P:System.Windows.Forms.Control.Enabled"/> property for this control and its <see cref="P:Geosoft.GX.Controls.BaseControl.LabelBuddy"/> (if known)
            </summary>
            <param name="enabled">Desired <see cref="P:System.Windows.Forms.Control.Enabled"/> property</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.SetVisible(System.Boolean,System.Boolean)">
            <summary>
            Convenience method to change <see cref="P:System.Windows.Forms.Control.Visible"/> property for this control and its <see cref="P:Geosoft.GX.Controls.BaseControl.LabelBuddy"/> (if known)
            </summary>
            <param name="visible">Desired <see cref="P:System.Windows.Forms.Control.Visible"/> property</param>
            <param name="includeEnabled">
            Update the <see cref="P:System.Windows.Forms.Control.Enabled"/> property too. Usually a control should also be
            disabled when made invisible to prevent validation firing for it.
            For this reason the default for this is true, in rare cases that can be avoided by passing false.
            </param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.FormatINIErrorString(System.String)">
            <summary>
            Formats an error string for error reports during scripting validation failures.
            </summary>
            <param name="strError"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.ValidateContainer(System.Windows.Forms.Control,Geosoft.GX.Controls.GeoErrorProvider)">
            <summary>
            Validates the container.
            </summary>
            <param name="controlsContainer">The controls container.</param>
            <param name="errorProvider">The error provider.</param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.ValidateControl(Geosoft.GX.Controls.GeoErrorProvider)">
            <summary>
            Validates this control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bIsValid">
            <summary>
            Does the control pass all validation tests?
            </summary>
            <remarks>Does all validation, including by range. This is useful to ensure returned values are not used when they have not been validated.</remarks>
            <returns>True if all validation tests, including range (if defined), have passed.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.GlobalAdapterPropertiesOverride">
            <summary>
            Can be used to temproary override since parents are not always set when
            EnsureAdapterInitialization is called upon. E.g. <see cref="T:Geosoft.GX.Controls.ModelessBaseForm"/>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bStringParamExists(System.String,System.String)">
            <summary>
            Check if a string parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bIntParamExists(System.String,System.String)">
            <summary>
            Check if a int parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bDoubleParamExists(System.String,System.String)">
            <summary>
            Check if a double parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.iGetParam(System.String,System.String)">
            <summary>
            Get an int parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.SetIntParam(System.String,System.String,System.Int32)">
            <summary>
            Set an int parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="iValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.dGetParam(System.String,System.String)">
            <summary>
            Get a double parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.SetDoubleParam(System.String,System.String,System.Double)">
            <summary>
            Set a double parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="dValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.GetParam(System.String,System.String)">
            <summary>
            Get a string parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.SetParam(System.String,System.String,System.String)">
            <summary>
            Set a string parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="strValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.iGetColor(System.String)">
            <summary>
            Get int from string color (Geosoft way)
            </summary>
            <param name="strValue">string color value</param>
            <returns>int color value</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.strGetColor(System.Int32)">
            <summary>
            Get string from int color (Geosoft way)
            </summary>
            <param name="iValue">int color value</param>
            <returns>string color value</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bDirectoryOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Directory open dialog
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the directory is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            File Open Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="sortFilters">(Optional) Sorts the available file filter list in the dialog.</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Custom Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bColorGui(System.Int32@,System.Boolean)">
            <summary>
            Select a colour GUI.
            </summary>
            <param name="iColor">Returned color</param>
            <param name="bAskTransparent">Ask about C_TRANSPARENT if white is selected>?</param>
            <returns>true - Ok, false - Cancel</returns>
            <remarks>
            Colour value is set on input, and new value returned.  If the input colour
            type is C_TRANSPARENT, then the color is set to white.  If the third flag
            is GS_TRUE is used, then on exit, if white is selected, the user is prompted:
            'Do you want white (Yes) or "None" (No) ?' and the colour is converted as
            requested.  If this is not the case, the C_TRANSPARENT is converted to white
            (if "Ok" is selected) and no choice is offered.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bPatternGui(System.Int32@,System.Double@,System.Int32@,System.Double@,System.Int32@,System.Int32@)">
            <summary>
            Select a pattern GUI.
            </summary>
            <param name="iPatNum">Current Pattern</param>
            <param name="dPatSize">Current Size, input Constant.rDUMMY to use default</param>
            <param name="iPatThickness">Current Thick (0-100), input Constant.iDUMMY to use default</param>
            <param name="dPatDensity">Current Density, input Constant.rDUMMY to use default</param>
            <param name="iPatColor">Current Pattern Color</param>
            <param name="iPatBackColor">Current Background Color, can be C_TRANSPARENT</param>
            <returns>true - Ok, false - Cancel</returns>
            <remarks>
            Pattern values set on input, and new values returned.  Solid fill is indicated
            by Pattern number 0.  Size: pattern tile size in mm.  Thick: pattern line
            thickness in percent of the tile size.  valid range is 0-100.  Density: Tile
            spacing. A value of 1 means tiles are laid with no overlap.  A value of 2
            means they overlap each other.  The pattern Angle and Style parameters are
            not user-definable.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.RenderPattern(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Renders a Geosoft pattern to a Windows DC.
            </summary>
            <param name="dc">DC Handle</param>
            <param name="iLeft">left value of the render rect in Windows coordinates (bottom>top)</param>
            <param name="iBottom">bottom value</param>
            <param name="iRight">right value</param>
            <param name="iTop">top value</param>
            <param name="iPatNum">pattern number</param>
            <param name="dPatSize">pattern Size, input Constant.rDUMMY to use default</param>
            <param name="iThick">pattern Thick (0-100), input Constant.iDUMMY to use default</param>
            <param name="dDensity">pattern Density, input Constant.rDUMMY to use default</param>
            <param name="iForeCol">pattern Pattern Color</param>
            <param name="iBackCol">pattern Background Color, can be C_TRANSPARENT</param>
            <param name="bControlEnabled">is this window enabled?</param>
            <param name="bButton">is this a button?</param>
            <param name="bSelected">is this window selected?</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.strGetGlobal(System.String)">
            <summary>
            Get Global parameter from system storage
            </summary>
            <param name="strParam">Parameter name</param>
            <returns>parameter or null if it does not exist</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bInteractive">
            <summary>
            Is the GUI in interactive mode or in scripting mode
            </summary>
            <returns>true if interactive</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.GetDocumentsList(System.String)">
            <summary>
            Get list of documents of a particular type loaded into the application
            </summary>
            <param name="strType">Document type</param>
            <returns>List of file names</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.GetFontList(System.Int32)">
            <summary>
            Get list of GFN fonts
            </summary>
            <returns>List of GFN fonts.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.GetDATDefaults(System.Int32,System.Boolean,System.String@,System.String@)">
            <summary>
            Return the user default extension and qualifier for grids/images.
            </summary>
            <param name="iType">one of Constant.DAT_TYPE_...</param>
            <param name="bOpen">Open or saving file?</param>
            <param name="strExt">Returned default extension (e.g. "grd")</param>
            <param name="strQual">Returned default qualifier (e.g. "GRD")</param>
            <remarks>
            The default grid/image filters are normally stored in "MONTAJ.DEFAULT_XGD_IN"
            and "MONTAJ.DEFAULT_XGD_OUT" If no filter is defined, or the filter is not
            found then "grd" and "GRD" are returned as the default extension and qualifier.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.GetFileFilter(System.Int32,System.String@,System.String@,System.String@,System.Int32@)">
            <summary>
            Return the defined filter, mask, extension and directory for an input filter.
            </summary>
            <param name="iFilter">One of FILE_FILTER...</param>
            <param name="strFilter">Returned file filter string</param>
            <param name="strMask">Returned file mask string</param>
            <param name="strExt">Returned file extension</param>
            <param name="iDirectory">Returned directory (one of GS_DIRECTORY...)</param>
            <remarks>
            Returns the four parts of the file filter; e.g. for FILE_FILTER_GDB it returns:
            Filter: "Database (*.gdb)" Mask: "*.gdb" Extension: "gdb" Directory: "GS_DIRECTORY_NONE"
            This function is useful for constuction open/save dialog file filters, especially
            in GX.Net functions.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.bGeoFindPath(System.String,System.Int32,System.Int32,System.String@)">
            <summary>
            Get full path for a file if found
            </summary>
            <param name="strFile">File to search for</param>
            <param name="iSearchPath">Constant.FIND_LOCAL, Constant.FIND_GEOSOFT, or FIND_LOCAL_GEOSOFT</param>
            <param name="iGeoDir">one of GEO_DIRECTORY_...</param>
            <param name="strFoundPath">Where path is returned</param>
            <returns>true if file found</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.GeoGetDirectory(System.Int32,System.String@)">
            <summary>
            Get full the full path of a Geosoft Directory
            </summary>
            <param name="iGeoDir">one of GEO_DIRECTORY_...</param>
            <param name="strFolder">Geosoft Directory</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.NullValidation(System.String@)">
            <summary>
            Utility function that performs no validation.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.INIComponent">
            <summary>
            INI support property. Used by INI compoenent to register itself with the form to ensure reliable initialization
            for controls from INI parameter settings irrespective of their property initialization order in the designer generated code.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseControl.ReactiveValidationError">
            <summary>
            Used in ReactiveUI based validation bindings.
            </summary>
            <remarks>
            Binding validation errors to this property will call <see cref="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)"/> for this controls
            on the error provider of the upmost parent form.
            Also see: https://github.com/reactiveui/ReactiveUI.Validation#how-to-use
            </remarks>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.InlineValidationDelegate">
            <summary>
            Delegate for control validation.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.BaseForm">
            <summary>
            Base <see cref="T:System.Windows.Forms.Form"/> from which simple and advanced GX.Net GX's should derive.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseForm.GxNet">
            <summary>
            The GX .Net object
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseForm.IDEAL_SEPARATION_BETWEEN_BUDDIES">
            <summary>
            Ideal separation between labels and their buddy controls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.#ctor(System.IntPtr)">
            <summary>
            Use this contructor where the derived class acts as the first GX in montaj
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.#ctor">
            <summary>
            Use this contructor where a <see cref="T:GeoEngine.Core.GXNet.CGXNETCore"/> has already been constructed elsewhere or in external applications.
            </summary>
            <seealso cref="P:Geosoft.GX.Controls.BaseForm.ExternalAppMainForm"/>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.#ctor(System.IntPtr,Geosoft.GX.Controls.IParamStorage)">
            <summary>
            Use this constructor to provide an alternative implementation for parameter storage
            </summary>
            <param name="pGeo"></param>
            <param name="IParamStorage"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.#ctor(Geosoft.GX.Controls.IParamStorage)">
            <summary>
            Use this constructor to provide an alternative implementation for parameter storage
            </summary>
            <param name="IParamStorage"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.ExpandedState">
            <summary>
            Show a dialog in an expanded or collapsed state
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.#ctor(Geosoft.GX.Controls.IParamStorage,Geosoft.GX.Controls.IAPIAdapter)">
            <summary>
            Use this constructor to provide an alternative implementation for parameter storage and
            do not use the GX API internallly by going through the API Adapter interface for some
            functionality.
            </summary>
            <param name="IParamStorage"></param>
            <param name="IAPIAdapter"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.GetMainModalParentHWnd_GUI">
            <summary>
            Retrieves the window handle to the active window attached to the calling thread's message queue.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.ShowDialog">
            <summary>
            ShowDialog for GX.NETs
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.GetActiveWindow">
            <summary>
            Get WindowWrapper from current active application window
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.ShowModalDialog">
            <summary>
            Show modal dialog.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.BaseForm.WindowWrapper">
            <summary>
            Wrapper that implements IWin32Window on an unmanaged HWND handle
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.WindowWrapper.#ctor(System.IntPtr)">
            <summary>
            Constructor
            </summary>
            <param name="handle"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.WindowWrapper.Handle">
            <summary>
            Handle
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.AutoScaleMode">
            <summary>
            Gets or sets the automatic scaling mode of the control.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AutoScaleMode"/> that represents the current scaling
            mode. The default is <see cref="F:System.Windows.Forms.AutoScaleMode.None"/>.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            An <see cref="T:System.Windows.Forms.AutoScaleMode"/> value that is not valid was used to
            set this property.
            </exception>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.ExternalAppMainForm">
            <summary>
            Sets this to true if this form is to be used as the main form of an application.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.UseOwnDir">
            <summary>
            Use our own directories instead of Oasis Montaj's (only used for GX API initialization with ExternalAppMainForm property)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.SuppressGuiProgress">
            <summary>
            Suppress GUI Progress Bar (only used for GX API initialization with ExternalAppMainForm property)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.ControlErrorProvider">
            <summary>
            Use to set errors for controls on validation
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.AddVoxelToProjectExplorer(System.String)">
            <summary>
            Adds the voxel to project work explorer.
            </summary>
            <param name="voxelFilePath">The voxel file path.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.AddGridToProjectExplorer(System.String)">
            <summary>
            Adds the grid to project work explorer.
            </summary>
            <param name="gridFilePath">The grid file path.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.InitializeForm">
            <summary>
            Override this in base class to do extra initialization (combobox lst init etc.)
            </summary>
            <remarks>The derived class should call this function in the appropriate place</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.ExternalInitializeForm">
            <summary>
            Calls <see cref="M:Geosoft.GX.Controls.BaseForm.InitializeForm"/> for external usage.
            </summary>
            <seealso cref="P:Geosoft.GX.Controls.BaseForm.ExternalAppMainForm"/>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.bValidateDialog(System.String@,System.Boolean)">
            <summary>
            Override this in base class to do extra validation
            </summary>
            <param name="strINIError"></param>
            <param name="bUseErrorProvider"></param>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.bValidateContainer(System.Windows.Forms.Control,System.String@,System.Boolean)">
            <summary>
            Do validation on items in a container.
            </summary>
            <param name="cont">Container control</param>
            <param name="strINIError">Error string retured</param>
            <param name="bUseErrorProvider">Use the error provider?</param>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.RegisterINIComponent(Geosoft.GX.Controls.INI)">
            <summary>
            Used by INI compoenent to register itself with the form to ensure reliable initialization for controls from INI parameter settings
            irrespective of their property initialization order in the designer generated code
            </summary>
            <param name="ini"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.bValidateDialog">
            <summary>
            Call this during normal GUI validation (e.g. OK button event handler)
            </summary>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.bValidateDialogWithoutShowingErrors">
            <summary>
            Call this validate the dialog at times where you just want to see if things are set up properly,
            without bringing up the validation errors (etc.) in the dialog.
            </summary>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.ResizeAndShiftBuddyControlsForLabels">
            <summary>
            This is a quick method to resize controls to fit if you change the text of one of the labels.
            The controls should all be BuddyControls to corresponding labels. Will also shift CheckBoxControls to 
            left-align. NOTE: This function has room for improvement!
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.bValidateContainer(System.Windows.Forms.Control,System.Boolean,System.String@)">
            <summary>
            Validate all the container controls
            </summary>
            <param name="cont"></param>
            <param name="bUseErrorProvider"></param>
            <param name="strINIError"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.bValidateControl(System.Windows.Forms.Control,System.Boolean,System.String@)">
            <summary>
            Validate a single control
            </summary>
            <param name="ctl"></param>
            <param name="bUseErrorProvider"></param>
            <param name="strINIError"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.CreateGXFailureMessage(System.String)">
            <summary>
            Returns a general failure message for the GX.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.ShowErrorAndExit(System.String,System.String,System.String)">
            <summary>
            Show an error message and exit. Results in MessageBox in interactive mode followed by cancel, or a call to CSYS.Abort otherwise
            </summary>
            <param name="errorMessage"></param>
            <param name="errorSolution"></param>
            <param name="altTitleText"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.ShowErrorAndExit(System.Windows.Forms.Form,Geosoft.GX.Controls.IAPIAdapter,System.String,System.String,System.String)">
            <summary>
            Show an error message and exit. Results in MessageBox in interactive mode followed by cancel, or a call to CSYS.Abort otherwise
            </summary>
            <param name="ownerForm"></param>
            <param name="apiAdapter"></param>
            <param name="errorMessage"></param>
            <param name="errorSolution"></param>
            <param name="altTitleText"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.ParamStorage">
            <summary>
            Get or set the parameter storage interface (if defined)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseForm.APIAdapter">
            <summary>
            Get or set the API adapter interface (if defined)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.BetterComboBox">
            <summary>
            Summary description for BetterComboBox.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BetterComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BetterComboBox.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BetterComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BetterComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BetterComboBox.UpdateDropDownWidth">
            <summary>
            Update the drop-down width.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BetterComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Process Windows messages.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ButtonControl">
            <summary>
            Button control that has consistent look-and-feel, margins, padding and size constraints for use on GX.Net forms.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ButtonControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.ButtonControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.Margin">
            <summary>Gets or sets the space between controls.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between controls.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Geosoft.GX.Controls.ButtonControl.ClearMaximumSize">
            <summary>
            Returns the <see cref="P:Geosoft.GX.Controls.ButtonControl.MaximumSize"/> to defaults from code
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ButtonControl.ClearMinimumSize">
            <summary>
            Returns the <see cref="P:Geosoft.GX.Controls.ButtonControl.MinimumSize"/> to defaults from code
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.RealMaximumSize">
            <summary>
            Changes the <see cref="P:Geosoft.GX.Controls.ButtonControl.MaximumSize"/> property. That property is read-only to prevent accidental overrides in designers.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.RealMinimumSize">
            <summary>
            Changes the <see cref="P:Geosoft.GX.Controls.ButtonControl.MinimumSize"/> property. That property is read-only to prevent accidental overrides in designers.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.MaximumSize">
            <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.MinimumSize">
            <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.BackColor">
            <summary>Gets or sets the background color of the control.</summary>
            <returns>A <see cref="T:System.Drawing.Color"></see> value representing the background color.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.UseVisualStyleBackColor">
            <summary>Gets or sets a value that determines if the background is drawn using visual styles, if supported.</summary>
            <returns>true if the background is drawn using visual styles; otherwise, false.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.GrowParentToFitEnabled">
            <summary>
            Growing the parent is enabled if position or size of this control changes (used in translation)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ButtonControl.BuddyControl">
            <summary>
            Set the control that this button is for (sizing purposes, assumes left to right sizing)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ButtonControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ButtonControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ButtonControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CheckBoxControl">
            <summary>
            <see cref="T:System.Windows.Forms.CheckBox"/> type control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckBoxControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.CheckBoxControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckBoxControl.Text">
            <summary>
            Gets or sets the text displayed next to the checkbox
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckBoxControl.ThreeState">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Geosoft.GX.Controls.CheckBoxControl"/>
            will allow three check states rather than two.
            </summary>
            <returns>
            true if the <see cref="T:Geosoft.GX.Controls.CheckBoxControl"/> is able to display three check
            states; otherwise, false. The default value is false.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckBoxControl.Checked">
            <summary>
            Gets or set a value indicating whether the <see cref="T:Geosoft.GX.Controls.CheckBoxControl"/>
            is in the checked state.
            </summary>
            <returns>
            true if the <see cref="T:Geosoft.GX.Controls.CheckBoxControl"/> is in the checked state; otherwise,
            false. The default value is false.If the <see cref="P:Geosoft.GX.Controls.CheckBoxControl.ThreeState"/>
            property is set to true, the <see cref="P:Geosoft.GX.Controls.CheckBoxControl.Checked"/> property
            will return true for either a Checked or Indeterminate <see cref="P:Geosoft.GX.Controls.CheckBoxControl.CheckState"/>.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckBoxControl.CheckState">
            <summary>
            Gets or sets the state of the <see cref="T:Geosoft.GX.Controls.CheckBoxControl"/>.
            </summary>
            <returns>
            One of the <see cref="T:System.Windows.Forms.CheckState"/> enumeration values. The default
            value is Unchecked.
            </returns>
        </member>
        <member name="E:Geosoft.GX.Controls.CheckBoxControl.CheckStateChanged">
            <summary>
            Occurs when the value of the <see cref="P:Geosoft.GX.Controls.CheckBoxControl.CheckState"/> property changes.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.CheckBoxControl.CheckedChanged">
            <summary>
            Occurs when the value of the <see cref="P:Geosoft.GX.Controls.CheckBoxControl.Checked"/> property changes.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckBoxControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckBoxControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CheckBoxControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.CheckBoxControl.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.CheckBoxControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckBoxControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CheckBoxControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ColorEditControl">
            <summary>
            Geosoft color edit control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorEditControl.AllowWhiteAsNone">
            <summary>
            Gets or sets whether to query for "None" (transparent) as a colour when the user
            selects white in the colour browse tool.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorEditControl.DefaultValue">
            <summary>
            Gets or sets the default value for the edit control from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorEditControl.Color">
            <summary>
            Gets or sets the current Color
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.SetColor(System.String)">
            <summary>
            Set the colour of the edit window, using a string colour as input.
            </summary>
            <param name="strValue">The Geosoft string colour value to set the window colour to.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.GetColor(System.String@)">
            <summary>
            Get the value in the edit window returning a string.
            </summary>
            <param name="strValue">The returned string value of the colour displayed.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.SetColor(System.Int32)">
            <summary>
            Set the colour of window, using an integer colour as input.
            </summary>
            <param name="iGeoCol">The Geosoft C_ANY integer value to set the window colour to.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.SetColor(System.Drawing.Color)">
            <summary>
            Set the colour of window, using a Color object as input.
            </summary>
            <param name="color">The Color object to set the window colour to.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.iGetColor">
            <summary>
            Get the window colour as a Geosoft C_ANY integer.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.GetColor">
            <summary>
            Get the window colour
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.CurrentValue">
            <summary>
            Get the current COLOR value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.SetCurrentValue(System.Drawing.Color)">
            <summary>
            Set the current COLOR value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ColorEditControl.ColorChanged">
            <summary>
            Fires when the color is changed
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorEditControl.OnColorChanged">
            <summary>Raises the <see cref="E:Geosoft.GX.Controls.ColorEditControl.ColorChanged"/> event.</summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ColorZoneEditControl">
            <summary>
            Geosoft color zone edit control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ColorZoneEditControl.IsEmbeddedInModlessDialog">
            <summary>
            Indicate this control is placed inside a modeless or modal dialog
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.ZoneFile">
            <summary>
            Gets or sets the default value for the zone colour file from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.Colors">
            <summary>
            Current color list
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.ReplaceFilenameByDefault">
            <summary>
            Whether or not to replace a file name with a default if the file does not exist or is empty
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.Reversed">
            <summary>
            Gets or sets the default value for order of colours.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.ToolTipControl">
            <summary>
            ToolTip control to show a filename on
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.BrightnessTrackBar">
            <summary>
            Trackbar control to use for brightness
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.BrightnessIntEdit">
            <summary>
            Edit control to use for brightness
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.ReverseCheckbox">
            <summary>
            Checkbox control to use for color reversed order
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.Brightness">
            <summary>
            Gets or sets the default value for order of colours.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.ReadOnly">
            <summary>
            If the control is read-only one cannot click it to browsae for a new table.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.GetDefaultColorTableFileName">
            <summary>
            Get the default color zone file defined in "MONTAJ.DEFAULT_COLOUR". Final default is colour.tbl.
            </summary>
            <returns>The default color zone file name.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.GetDefaultShadeColorTableFileName">
            <summary>
            Get the default shade color zone file defined in "MONTAJ.DEFAULT_SHADE_COLOUR". Final default is lgray.tbl.
            </summary>
            <returns>The default shade color zone file name.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ColorZoneEditControl.ColorZoneFileChanged">
            <summary>
            Fires when he color zone file is changed
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ColorZoneEditControl.OnColorZoneFileChanged">
            <summary>Raises the <see cref="E:Geosoft.GX.Controls.ColorZoneEditControl.ColorZoneFileChanged"/> event.</summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ColorZoneEditControl.ColorZoneFileChangedObservable">
            <summary>
            ColorZoneFileChanged event observable
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ListItemEnum">
            <summary>
            This defines which part of the value of <see cref="T:Geosoft.GX.Controls.ComboBoxControl"/> to use when transferring values to and from the GX parameters.
            </summary>
            <seealso cref="T:Geosoft.GX.Controls.ComboBoxControl"/>
            <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.strGetValue"/>
            <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.strGetName"/>
            <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.SetValue(System.String)"/>
            <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.SetName(System.String)"/>
        </member>
        <member name="F:Geosoft.GX.Controls.ListItemEnum.Name">
            <summary>
            Use name.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ListItemEnum.Alias">
            <summary>
            Use alias (value).
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Item">
            <summary>
            Used to store key/value pairs within the Items for ComboBox
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Item.Value">
            <summary>
            Gets or sets the value for this item
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Item.Key">
            <summary>
            Gets or sets the key for this item
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Item.#ctor(System.String,System.String)">
            <summary>
            Initializes the Item object with key and value parameters
            </summary>
            <param name="value">The value that is displayed on the item list of the combobox</param>
            <param name="key">The hidden value passed in and out from INI</param>
        </member>
        <member name="M:Geosoft.GX.Controls.Item.ToString">
            <summary>
            This will display the value of the key/value pair in the combobox list
            </summary>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.ComboBoxControl">
            <summary>
            <see cref="T:System.Windows.Forms.ComboBox"/> type control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ComboBoxControl.m_strDefault">
            <summary>
            Default Selection
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.ComboBoxControl.m_cmbList">
            <summary>
            Internal <see cref="T:Geosoft.GX.Controls.BetterComboBox"/>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ComboBoxControl.SelectedValueChanged">
            <summary>
            Occurs when the combobox's selected value property changes.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ComboBoxControl.SelectionChangeCommitted">
            <summary>
            Occurs when the combobox's selected value property changes are commited.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ComboBoxControl.TextChanged">
            <summary>
            Occurs when the combobox's text changes.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ComboBoxControl.RequiredChanged">
            <summary>
            Fired when <see cref="P:Geosoft.GX.Controls.ComboBoxControl.Required"/> property changes
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.DataSource">
            <summary>
            Gets or sets the data source for this <see cref="T:Geosoft.GX.Controls.ComboBoxControl"/>
            </summary>
            <returns>
            An object that implements the <see cref="T:System.Collections.IList"/> interface, such as
            a System.Data.DataSet or an System.Array. The default is null.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.Items">
            <summary>
            Gets an object representing the collection of the items contained in this
            <see cref="T:Geosoft.GX.Controls.ComboBoxControl"/>.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection"/> representing the items in
            the System.Windows.Forms.ComboBox.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.SelectedIndex">
            <summary>
            Gets or sets the index specifying the currently selected item.
            </summary>
            <returns>
            A zero-based index of the currently selected item. A value of negative one
            (-1) is returned if no item is selected.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.SelectedItem">
            <summary>
            Gets or sets currently selected item
            </summary>
            <returns>
            The object that is the currently selected item or null if there is no currently selected item.
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.NameOrAlias">
            <summary>
            Gets or sets the List Name/Alias status.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.DefaultValue">
            <summary>
            Gets or sets the default value for the edit control. This is either the Name or Alias value, depending on the control type.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.ValidChannelName">
            <summary>
            If true, then the selected Name value (if defined) must be a valid database channel name
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.RequiredErrorOverride">
            <summary>
            Alternate error provider text to display in case field is required.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.Force">
            <summary>
            If true, then the control may not be left blank (dummy).
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.Count">
            <summary>
            Return the number of items in the combo box.
            </summary>
            <remarks>Return the number of items in the combo box.</remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.ComboBox">
            <summary>
            Get interior <see cref="P:Geosoft.GX.Controls.ComboBoxControl.ComboBox"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.Value">
            <summary>
            Get/Set the Value part of the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.Init(GeoEngine.Core.GXNet.CLST,System.Int32)">
             <summary>
             Initialize the control with with item names and optional values. Existing control items are first.
             </summary>
            
             <remarks>
             This should generally be called from within a <see cref="M:Geosoft.GX.Controls.BaseForm.InitializeForm"/> override
             in the parent form (see example).
             </remarks>
             <param name="hLST">Input CLST object containing name and value items.</param>
             <param name="iItemType">One of GeoEngine.Core.GXNet.Constant.LST_ITEM_NAME or GeoEngine.Core.GXNet.Constant.LST_ITEM_VALUE. This determines
             which part of the list is passed in and out of the GX parameter block using the ini.SyncXXX methods.
             </param>
            
             <example>
             <code>
            protected override void InitializeForm()
            {
               base.InitializeForm();
            
               CEDB hEDB = CEDB.Current();
               CDB hDB = hEDB.Lock();
               CLST hChanLST = CLST.Create(128);
               hDB.ArrayLST(hChanLST);
            
               if (hChanLST.iSize() &lt; 2)
                  ShowErrorAndExit(_("At least two array channels are required."));
               m_cmbData.Init(hChanLST, GeoEngine.Core.GXNet.Constant.LST_ITEM_NAME);
            
               hEDB.UnLock();
            }
             </code>
             </example>
             <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.SetValue(System.String)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.InitX(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST,System.Int32)">
             <summary>
             Initialize the control with with item names and optional values. Existing control items are first.
             </summary>
            
             <remarks>
             This should generally be called from within a <see cref="M:Geosoft.GX.Controls.BaseForm.InitializeForm"/> override
             in the parent form (see example).
             </remarks>
             <param name="gxContext">Input GeoEngine.Core.GXNetX.CGXNETCore context.</param>
             <param name="hLSTx">Input GXNetX.CLST object containing name and value items.</param>
             <param name="iItemType">One of GeoEngine.Core.GXNet.Constant.LST_ITEM_NAME or GeoEngine.Core.GXNet.Constant.LST_ITEM_VALUE. This determines
             which part of the list is passed in and out of the GX parameter block using the ini.SyncXXX methods.
             </param>
            
             <example>
             <code>
            protected override void InitializeForm()
            {
               base.InitializeForm();
            
               CEDB hEDB = CEDB.Current();
               CDB hDB = hEDB.Lock();
               CLST hChanLST = CLST.Create(128);
               hDB.ArrayLST(hChanLST);
            
               if (hChanLST.iSize() &lt; 2)
                  ShowErrorAndExit(_("At least two array channels are required."));
               m_cmbData.InitX(GetGXContext(), hChanLST, GeoEngine.Core.GXNetX.Constant.LST_ITEM_NAME);
            
               hEDB.UnLock();
            }
             </code>
             </example>
             <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.SetValue(System.String)"/>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.strGetName">
             <summary>
             Get the currently selected item from the list control.
             </summary>
             <remarks>The "Name" part is the text actually seen in the control, not
             its alias value.</remarks>
            
             <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.strGetValue"/>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.SetName(System.String)">
            <summary>
            Select an item in the list by its "Name" part.
            </summary>
            <remarks>The "Name" part is the text actually seen in the control.
            If the "Force" value is set to true, and if no matching value
            is found, then the selection remains unchanged.</remarks>
            <param name="strName">The input "Name" string.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.strGetValue">
            <summary>
            Get the "value" part of the currently selected item from the list control.
            </summary>
            <remarks>The "Name" part is the text actually seen in the control. The "Value"
            is defined during the control's initialization. If no value is defined,
            then the "Name" is returned. Returns the value associated with the currently
            displayed item. If no value is defined, then the "Name" is returned.
            </remarks>
            <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.Init(GeoEngine.Core.GXNet.CLST,System.Int32)"/>
            <seealso cref="M:Geosoft.GX.Controls.ComboBoxControl.strGetName"/>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.SetValue(System.String)">
            <summary>
            Select an item in the list by its "Value" part.
            </summary>
            <remarks>The "Name" part is the text actually seen in the control. The "Value"
            is defined during the control's initialization. If no matching value
            is found, then the selection remains unchanged.</remarks>
            <param name="strValue">The input "value" string.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.DropDown(System.String)">
            <summary>
            Display the combo box in its dropped down state.
            </summary>
            <remarks>Cause the combo box to display in its dropped down state. </remarks>
            <param name="strName">If this input item is
            defined, then that item will be selected (if it exists in the current list).</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.AddItem(System.String,System.String)">
            <summary>
            Add a name and value to the combobox.
            </summary>
            <remarks>This method should be used instead of accessing the combo-box's Items member directly, as it
            ensures that any DefaultValue will be correctly set.</remarks>
            <param name="name">The Name part of the item</param>
            <param name="value">The Value part of the item</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.AddItem(System.String,System.Int32)">
            <summary>
            Add a name and value to the combobox.
            </summary>
            <remarks>This method should be used instead of accessing the combo-box's Items member directly, as it
            ensures that any DefaultValue will be correctly set.</remarks>
            <param name="name">The Name part of the item</param>
            <param name="value">The Value part of the item</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.AddItem(System.String)">
            <summary>
            Add a name to the combobox. The value is set to be the same as the name.
            </summary>
            <remarks>This method should be used instead of accessing the combo-box's Items member directly, as it
            ensures that any DefaultValue will be correctly set.</remarks>
            <param name="name">The Name part of the item</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.GetNames">
            <summary>
            Get a list of the name (displayed) values in the combobox.
            </summary>
            <remarks>This method should be used instead of accessing the combo-box's Items member directly.</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current list box item passes valiation tests.
            </summary>
            <remarks>The following validation is performed:
            <list type="bullet">
            <item><description>If the item is required, it must be defined.</description></item></list>
            </remarks>
            <param name="strError">The error message returned if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ComboBoxControl.UpdateDropDownWidth">
            <summary>
            Update the dropdown width.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ComboBoxControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ConstrainControl">
            <summary>
            <see cref="T:System.Windows.Forms.UserControl"/> to constrain sizing, padding and margins to predefined values
            </summary>
            <remarks>This helps with a consistant look-and-feel and prevents developers from accidentally changing it in forms.</remarks>
            <exclude/>
        </member>
        <member name="M:Geosoft.GX.Controls.ConstrainControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.ConstrainControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.Margin">
            <summary>Gets or sets the space between controls.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between controls.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Geosoft.GX.Controls.ConstrainControl.ClearMaximumSize">
            <summary>
            Returns the <see cref="P:Geosoft.GX.Controls.ConstrainControl.MaximumSize"/> to defaults from code
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ConstrainControl.ClearMinimumSize">
            <summary>
            Returns the <see cref="P:Geosoft.GX.Controls.ConstrainControl.MinimumSize"/> to defaults from code
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.RealMaximumSize">
            <summary>
            Changes the <see cref="P:Geosoft.GX.Controls.ConstrainControl.MaximumSize"/> property. That property is read-only to prevent accidental overrides in designers.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.RealMinimumSize">
            <summary>
            Changes the <see cref="P:Geosoft.GX.Controls.ConstrainControl.MinimumSize"/> property. That property is read-only to prevent accidental overrides in designers.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.MaximumSize">
            <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.MinimumSize">
            <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.ConstrainControl.AutoScaleMode">
            <summary>
            Gets or sets the automatic scaling mode of the control.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AutoScaleMode"/> that represents the current scaling
            mode. The default is <see cref="F:System.Windows.Forms.AutoScaleMode.None"/>.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            An <see cref="T:System.Windows.Forms.AutoScaleMode"/> value that is not valid was used to
            set this property.
            </exception>
        </member>
        <member name="F:Geosoft.GX.Controls.ConstrainControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ConstrainControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ConstrainControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.BaseWizard">
            <summary>
            Base <see cref="T:System.Windows.Forms.Form"/> from which wizard style GX.Net GX's should derive.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseWizard.GxNet">
            <summary>
            The GX .Net object
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.#ctor(System.IntPtr)">
            <summary>
            Use this contructor where the derived class acts as the first GX in montaj
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.#ctor">
            <summary>
            Use this contructor where a <see cref="T:GeoEngine.Core.GXNet.CGXNETCore"/> has already been constructed elsewhere or in external applications.
            </summary>
            <seealso cref="P:Geosoft.GX.Controls.BaseForm.ExternalAppMainForm"/>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.#ctor(Geosoft.GX.Controls.IParamStorage,Geosoft.GX.Controls.IAPIAdapter,System.Drawing.Size)">
            <summary>
            Use this contructor where a <see cref="T:GeoEngine.Core.GXNet.CGXNETCore"/> has already been constructed elsewhere or in external applications.
            This version allows you to create a narrower wizard, but keeps the buttons, etc. the size required for 120 dpi desktops
            </summary>
            <seealso cref="P:Geosoft.GX.Controls.BaseForm.ExternalAppMainForm"/>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.#ctor(Geosoft.GX.Controls.IParamStorage)">
            <summary>
            Use this constructor to provide an alternative implementation for parameter storage
            </summary>
            <param name="IParamStorage"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.#ctor(System.IntPtr,Geosoft.GX.Controls.IParamStorage)">
            <summary>
            Use this constructor to provide an alternative implementation for parameter storage
            </summary>
            <param name="pGeo"></param>
            <param name="IParamStorage"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.#ctor(Geosoft.GX.Controls.IParamStorage,Geosoft.GX.Controls.IAPIAdapter)">
            <summary>
            Use this constructor to provide an alternative implementation for parameter storage and
            do not use the GX API internallly by going through the API Adapter interface for some
            functionality.
            </summary>
            <param name="IParamStorage"></param>
            <param name="IAPIAdapter"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.ClientSize">
            <summary>Gets or sets the size of the client area of the form.</summary>
            <returns>A <see cref="T:System.Drawing.Size"></see> that represents the size of the form's client area.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.AutoScaleMode">
            <summary>
            Gets or sets the automatic scaling mode of the control.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Forms.AutoScaleMode"/> that represents the current scaling
            mode. The default is <see cref="F:System.Windows.Forms.AutoScaleMode.None"/>.
            </returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            An <see cref="T:System.Windows.Forms.AutoScaleMode"/> value that is not valid was used to
            set this property.
            </exception>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.CurrentPage">
            <summary>
            Indicates the current page
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.IsOnLastPage">
            <summary>
            Indicates whether the wizard is displaying the last page
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.IsOnFirstPage">
            <summary>
            Indicates whether the wizard is displaying the first page
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.AllowNext">
            <summary>
            Indicates whether the wizard is displaying the last page
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.ExternalAppMainForm">
            <summary>
            Sets this to true if this form is to be used as the main form of an application.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.UseOwnDir">
            <summary>
            Use our own directories instead of Oasis Montaj's (only used for GX API initialization with ExternalAppMainForm property)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.SuppressGuiProgress">
            <summary>
            Suppress GUI Progress Bar (only used for GX API initialization with ExternalAppMainForm property)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.Text">
            <summary>
            Gets/sets the title for the wizard form. The current and total page count will be added during runtime.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.Pages">
            <summary>
            Gets/sets the pages and their order using this collection.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.ControlErrorProvider">
            <summary>
            Use to set errors for controls on validation
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Form.Load"></see> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.InitializeForm">
            <summary>
            Override this in base class to do extra initialization (combobox lst init etc.)
            </summary>
            <remarks>The derived class should call this function in the appropriate place</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.bValidateDialog(System.Int32,System.String@,System.Boolean)">
            <summary>
            Override this in base class to do extra validation
            </summary>
            <param name="iPage">-1 for all controls</param>
            <param name="strINIError"></param>
            <param name="bUseErrorProvider"></param>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.RegisterINIComponent(Geosoft.GX.Controls.INI)">
            <summary>
            Used by INI compoenent to register itself with the form to ensure reliable initialization for controls from INI parameter settings
            irrespective of their property initialization order in the designer generated code
            </summary>
            <param name="ini"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.bValidateDialog(System.Int32)">
            <summary>
            Call this during normal GUI validation (e.g. OK button event handler)
            </summary>
            <returns>true if validation is successful</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.DisableLastPage">
            <summary>
            Disable the Last page, so that "Finish" appears on the second last page
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.EnableLastPage">
            <summary>
            Re-enable the Last page, so that "Finish" appears on last page
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.SetPage(System.Int32)">
            <summary>
            Changes the page that is currently displayed.
            </summary>
            <param name="iPage">Page to display.</param>
            <remarks>No validation is performed.</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.UpdateState">
            <summary>
            Called shortly before the page is changed.
            </summary>
            <remarks>
            This is called after validation for the previous page has passed.
            Override to implement additional functionality based on choices
            in the previous page.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.SetMultilineTextForControl(System.Windows.Forms.Control,System.String,System.Int32)">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.bValidateContainer(System.Windows.Forms.Control,System.Boolean,System.String@)">
            <summary>
            Validate all the container controls
            </summary>
            <param name="cont"></param>
            <param name="bUseErrorProvider"></param>
            <param name="strINIError"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.CreateGXFailureMessage(System.String)">
            <summary>
            Returns a general failure message for the GX.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.ShowErrorAndExit(System.String,System.String,System.String)">
            <summary>
            Show an error message and exit. Results in MessageBox in interactive mode followed by cancel, or a call to CSYS.Abort otherwise
            </summary>
            <param name="errorMessage"></param>
            <param name="errorSolution"></param>
            <param name="altTitleText"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.ParamStorage">
            <summary>
            Get the parameter storage interface (if defined)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.BaseWizard.APIAdapter">
            <summary>
            Get the API adapter interface (if defined)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.BaseWizard.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.BaseWizard.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CollapsePanelControl">
            <summary>
            Implements a convenient panel which can collapse/expand in response to click on a <see cref="T:Geosoft.GX.Controls.CollapsePanelButtonControl"/> elsewhere on the form.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.CollapsePanelControl.m_bVisibleStateInitialized">
            <summary>
            	<para>Initialization flag for tab visibility control.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.InitializeVisibleState">
            <summary>
            	<para>Initializes the machinery to ensure that
              the controls are not included in the TAB order when the collapse panel is hidden.<see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.ReInitialize">
            <summary>
            	<para>Force reinitialization of the panel to make ready to add new controls.<see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.HideControls">
            <summary>
            	<para>Hides the controls in the collapse panel. This ensures, for instance, that
              the controls are not included in the TAB order when the collapse panel is hidden.<see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.ShowControls">
            <summary>
            	<para>Shows the controls in the collapse panel. This ensures, for instance, that
              the controls are not included in the TAB order when the collapse panel is hidden.
              The Visible state of the control is reset to its initial value (whether visible or not).<see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelControl.BorderStyle">
            <summary>Indicates the border style for the control.</summary>
            <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle"></see> values. The default is BorderStyle.None.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.BorderStyle"></see> value.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelControl.StartCollapsed">
            <summary>
            Gets or sets if the panel should be collapsed on startup.
            </summary>
            <remarks>
            This propert will only have an effect if this control is set into the <see cref="P:Geosoft.GX.Controls.CollapsePanelButtonControl.CollapsePanel"/>
            property of a <see cref="T:Geosoft.GX.Controls.CollapsePanelButtonControl"/> elsewhere on the form.
            </remarks>
        </member>
        <member name="F:Geosoft.GX.Controls.CollapsePanelControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.CollapsePanelButtonControl">
            <summary>
            Implements collapse button which works together with a <see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> by expanding/collapsing the panel and
            positioning other controls on the <see cref="T:Geosoft.GX.Controls.BaseForm"/> accordingly.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.CollapsePanelButtonControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.UserControl.Load"></see> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.CollapsePanelButtonControl.ShowControlsEventHandler">
            <summary>
            Represents the method that will handle the event that gets fired when the controls gets shown or hidden
            </summary>
            <param name="sender"></param>
            <param name="shown"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.Button">
            <summary>
            Internal button control
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.ShowPanel">
            <summary>
            Shows the panel.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.CollapsePanelButtonControl.ShowControlsChanged">
            <summary>
            Fired as controls state changes
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.ShowControls">
            <summary>
            	<para>Shows the controls in the collapse panel. This ensures, for instance, that
              the controls are not included in the TAB order when the collapse panel is hidden.
              The Visible state of the control is reset to its initial value (whether visible or not).<see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.HideControls">
            <summary>
            	<para>Hides the controls in the collapse panel. This ensures, for instance, that
              the controls are not included in the TAB order when the collapse panel is hidden.
              The Visible state of the control is reset to its initial value (whether visible or not).<see cref="T:Geosoft.GX.Controls.CollapsePanelControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.CollapsePanel">
            <summary>
            Gets or sets the CollapsePanelControl that this button will affect.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.AutoCollapsePanel">
            <summary>
            Gets or sets wether to use automatic hide/show behaviour for <see cref="P:Geosoft.GX.Controls.CollapsePanelButtonControl.CollapsePanel"/>. 
            Subscribe to <see cref="E:Geosoft.GX.Controls.CollapsePanelButtonControl.ShowControlsChanged"/> to implement custom behaviour.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.BackColor">
            <summary>Gets or sets the background color for the control.</summary>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor"></see> property.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.Margin">
            <summary>Gets or sets the space between controls.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between controls.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.MaximumSize">
            <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.CollapsePanelButtonControl.MinimumSize">
            <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.iUncollapsedPanelHeight">
            <summary>
            Return the uncollapsed height of the CollapsePanelControl that this button will affect.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.ReInitialize(System.Int32)">
            <summary>
            Reinitialize the panel to a new height.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.Collapse">
            <summary>
            Collapse the pannel.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.m_buttonControl_Enter(System.Object,System.EventArgs)">
            <summary>
            Ensures visibilty/tab controls are initialized. If a user is tabbing through
            the controls, they will always enter this button before entering the controls in
            the collapse panel.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.CollapsePanelButtonControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.CollapsePanelButtonControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DHProjectEditControl">
            <summary>
            Reusable DH Project Browsing Edit control for use in Geosoft GX.Net code.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DHProjectEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DHProjectEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DHProjectEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DHProjectEditControl.DHCollarLocation">
            <summary>
            Gets or sets the value for the DH Project's Collar database
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DHProjectEditControl.BrowseQuery">
            <summary>
            The title of the browse dialog launched using the browse button.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DHProjectEditControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DHProjectEditControl.FileOpenSave">
            <summary>
            Gets or sets if the control should be used to open or to save file(s).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DHProjectEditControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current Project location passes validation tests.
            </summary>
            <remarks></remarks>
            <param name="strError">The returned error string if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.DHProjectEditControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DHProjectEditControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.DHProjectEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DHProjectEditControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.DHProjectEditControl.Required"/> property changes
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.DHProjectEditControl.DHProjectChanged">
            <summary>
            Fired when the project location changed
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.HDragRect.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.</summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.HDragRect.DragRectDesigner">
            <summary>
            Constrain sizing for control
            </summary>
            <exclude/>
        </member>
        <member name="T:Geosoft.GX.Controls.GSColorParameter">
            <summary>
            Represents one GX parameter of Geosoft type Color
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GSColorParameter.DefaultValue">
            <summary>
            The default value for the parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GSColorParameter.BuddyControl">
            <summary>
            The parameter's buddy COLOR control
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IColorControl">
            <summary>
            All COLOR controls that wish to work with the INI component should implement this interface.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IColorControl.CurrentValue">
            <summary>
            Get the current COLOR value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IColorControl.SetCurrentValue(System.Drawing.Color)">
            <summary>
            Set the current COLOR value within the control.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IIntControl">
            <summary>
            All INT controls that wish to work with the INI component should implement this interface.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IIntControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IIntControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.INIComponentDesigner">
            <summary>
            Component Designer for INI component
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INIComponentDesigner.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.INIComponentDesigner"/> class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INIComponentDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Prepares the designer to view, edit, and design the specified component.
            </summary>
            <param name="component">The component for this designer.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.INIComponentDesigner.DoDefaultAction">
            <summary>
            Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.
            </summary>
            <exception cref="T:System.ComponentModel.Design.CheckoutException">
            An attempt to check out a file that is checked into a source code management program failed.
            </exception>
        </member>
        <member name="P:Geosoft.GX.Controls.INIComponentDesigner.Verbs">
            <summary>
            Gets the design-time verbs supported by the component that is associated with the designer.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection"/> of <see cref="T:System.ComponentModel.Design.DesignerVerb"/> objects, or null if no designer verbs are available. This default implementation always returns null.
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.INIComponentDesigner.onMigrateParams(System.Object,System.EventArgs)">
            <summary>
            Ons the verb.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.INIComponentDesigner._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IntParameter">
            <summary>
            Represents one GX parameter of Geosoft type Int
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IntParameter.DefaultValue">
            <summary>
            The default value for the parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IntParameter.BuddyControl">
            <summary>
            The parameter's buddy INT control
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IRealControl">
            <summary>
            All REAL controls that wish to work with the INI component should implement this interface.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IRealControl.CurrentValue">
            <summary>
            Get the current REAL value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IRealControl.SetCurrentValue(System.Double)">
            <summary>
            Set the current REAL value within the control.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IStringControl">
            <summary>
            All STRING controls that wish to work with the INI component should implement this interface.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IStringControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.IStringControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.INI">
            <summary>
            Class used for handling Geosoft INI parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.DesignMode">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.ContainerControl">
            <summary>
            DO NOT USE THIS PROPERTY IN YOUR GX CODE. IT IS STRICTLY MEANT FOR THE VISUAL STUDIO DESIGNER.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.GroupName">
            <summary>
            Group Name for GX parameters. Use only if you know what you are doing!
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.IntParameters">
            <summary>
            DO NOT USE THIS PROPERTY IN YOUR GX CODE. IT IS STRICTLY MEANT FOR THE VISUAL STUDIO DESIGNER.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.RealParameters">
            <summary>
            DO NOT USE THIS PROPERTY IN YOUR GX CODE. IT IS STRICTLY MEANT FOR THE VISUAL STUDIO DESIGNER.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.StringParameters">
            <summary>
            DO NOT USE THIS PROPERTY IN YOUR GX CODE. IT IS STRICTLY MEANT FOR THE VISUAL STUDIO DESIGNER.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.ResetComboBoxDefaultValues">
            <summary>
            The following ensures that the "Default Value" is set up for comboboxes, because they may be
            post-initialized with items after initial construction, and calling SyncStringValuesToMatchDisk()
            will not work to set the default; the selected item is actually set up at post-initialization time,
            and at that time the combobox.DefaultValue has to already be set.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.GSColorParameters">
            <summary>
            DO NOT USE THIS PROPERTY IN YOUR GX CODE. IT IS STRICTLY MEANT FOR THE VISUAL STUDIO DESIGNER.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.GetInt(System.String)">
            <summary>
            Get the value of an INT parameter
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.GetReal(System.String)">
            <summary>
            Get the value of a REAL parameter
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.GetString(System.String)">
            <summary>
            Get the value of a STRING parameter
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.RefreshControls">
            <summary>
            Refresh the controls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.ReloadValuesFromDisk">
            <summary>
            Reload values from disk
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SyncDiskToMatchCurrentControls">
            <summary>
            Update the on-disk INI storage to match whatever currently appears in the controls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SyncCurrentControlsToMatchDisk">
            <summary>
            Update  whatever currently appears in the controls to match on-disk INI, the data is not reloaded form disk, use ReloadValuesFromDisk()
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SyncCurrentControlsToMatchDiskUseDefaultIfValueIsDummy">
            <summary>
            Update  whatever currently appears in the controls to match  on-disk INI if values are dummies, the data is not reloaded form disk, use ReloadValuesFromDisk()
            keep the default values.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SyncCurrentControlsToMatchDisk(System.Boolean)">
            <summary>
            Update  whatever currently appears in the controls to match  on-disk INI
            </summary>
            <param name="UseDefaultIfValueIsDummy">if set to <c>true</c> [use default if value is dummy].</param>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.RefreshControl(Geosoft.GX.Controls.BaseControl)">
            <summary>
            Refresh a specific control, return true if control is found in the INI.
            This loads the value already stored in the INI into the control; it does NOT load the value
            stored on disk to the INI.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SyncDiskToMatchControl(Geosoft.GX.Controls.BaseControl)">
            <summary>
            Update the on-disk INI storage to match whatever currently appears in the input control, return true if control is found in the INI.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SetControlParameterName(Geosoft.GX.Controls.BaseControl,System.String)">
            <summary>
            Set the GX parameter name associated with this control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SetControlDefaultValue(Geosoft.GX.Controls.BaseControl,System.String)">
            <summary>
            Set the default value associated with this control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SetControlDefaultValue(Geosoft.GX.Controls.BaseControl,System.Int32)">
            <summary>
            Set the default value associated with this control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.ClearControlDiskParameter(Geosoft.GX.Controls.BaseControl)">
            <summary>
            Clear the INI parameter associated with a control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.INI.Site">
            <summary>
            ISite override
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.SyncDiskToMatchCurrentControls(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
            Update the on-disk INI storage to match whatever currently appears in the controls. This version does NOT, 
            in turn, refresh the controls from disk (as the regular version does).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.INI.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.INI.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Parameter">
            <summary>
            Represents one GX parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Parameter.Name">
            <summary>
            The name of the parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Parameter.HelpDescription">
            <summary>
            A help description for the parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Parameter.BuddyControl">
            <summary>
            The parameter's buddy control
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.LineSelectionControl">
            <summary>
            <see cref="T:System.Windows.Forms.ComboBox"/> type control which selects the database lines to process
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.LineSelectionControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LineSelectionControl.IncludeDisplayedLineAsOption">
            <summary>
            If false, remove 'Displayed line' as one of the options"
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LineSelectionControl.IncludeMarkedRowsAsOption">
            <summary>
            If false, remove 'Displayed line' as one of the options"
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LineSelectionControl.isDisplayedLine">
            <summary>
            Is the current selection for the currently displayed line?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LineSelectionControl.isSelectedLines">
            <summary>
            Is the current selection for the selected lines?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LineSelectionControl.isAllLines">
            <summary>
            Is the current selection for all the lines?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LineSelectionControl.IsMarkedRows">
            <summary>
            Is the current selection for the currently marked rows?
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.LineSelectionControl.GetLineLST(GeoEngine.Core.GXNet.CDB,System.String)">
            <summary>
            Get a CLST object containing the currently requested lines, NAME = Line Name, VALUE = Line Symbol.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.LineSelectionControl.GetLineLST(GeoEngine.Core.GXNet.CDB,System.String,System.Int32)">
            <summary>
            Get a CLST object containing the currently requested lines, NAME = Line Name, VALUE = Line Symbol.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.LinkLabelControl">
            <summary>
            Represents a Windows label control that can display hyperlinks.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LinkLabelControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ListBoxControl">
            <summary>
            Represents a Windows control to display a list of items.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ListBoxControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapViewFitting">
            <summary>
            This defines how to fit the visible area of the map view map into the control picture box.
            The visible area is measured in base view units, NOT data units, when considering scaling.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewFitting.Fit">
            <summary>
            Stretch the visible area to fill the control.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewFitting.AspectFit">
            <summary>
            Preserve X/Y aspect ratio, Min X and Min Y
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewFitting.AspectFitCentered">
            <summary>
            Preserve X/Y aspect ratio, Center the input ranges
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapViewControl">
            <summary>
            Geosoft map view control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewControl.m_MapName">
            <summary>
            Temporary map file name
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewControl.m_MapX">
            <summary>
            Temporary map object
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewControl.m_MapViewX">
             <summary>
            
             </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MinX">
            <summary>
            Minimum X of current window
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MinY">
            <summary>
            Minimum Y of current window
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MaxX">
            <summary>
            Maximum X of current window
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MaxY">
            <summary>
            Maximum Y of current window
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MinXAOI">
            <summary>
            Minimum X of last zoomed area of interest
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MinYAOI">
            <summary>
            Minimum Y of last zoomed area of interest
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MaxXAOI">
            <summary>
            Maximum X of last zoomed area of interest
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MaxYAOI">
            <summary>
            Maximum Y of last zoomed area of interest
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.ViewFit">
            <summary>
            Gets or sets the List Name/Alias status.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.PixelPadding">
            <summary>
            Add padding for X Y depend on the MapViewFitting is AspectFitCentered or Fit
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.IsDirty">
            <summary>
            Set to true to force update of the displayed image on the next render
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.PictureBoxHeight">
            <summary>
            Returns the height in pixels of the picture box
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.PictureBoxWidth">
            <summary>
            Returns the width in pixels of the picture box
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.OnDragActive">
            <summary>
            Emit <see cref="E:Geosoft.GX.Controls.MapViewControl.OnDragCompleted"/> on next click and drag of mouse on control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.GridValueIMG">
            <summary>
            Set this property to display a grid value at the mouse cursor location in the status label
            Set this property AFTER setting MapView to correctly inherit the IMG's projection onto the view
            for the return of grid values.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.GridValueIMGX">
            <summary>
            Set this property to display a grid value at the mouse cursor location in the status label
            Set this property AFTER setting MapViewX to correctly inherit the IMG's projection onto the view
            for the return of grid values.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.GXX">
            <summary>
            Set External GXX
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapView">
            <summary>
            Get the internal CMVIEW handle for rendering. Do not dispose!
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapViewX">
            <summary>
            Get the internal CMVIEW handle for rendering. Do not dispose!
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.Context">
            <summary>
            GeoEngine.Core.GXNetX.CGXNETCore Context
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.XPerPixel">
            <summary>
            Return the horizontal scale Ground_X / Pixels
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.YPerPixel">
            <summary>
            Return thevertical scale Ground_Y / Pixels
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapViewControl.OnDragCompletedEventArgs">
            <summary>
            Event argument to use with the <see cref="E:Geosoft.GX.Controls.MapViewControl.OnDragCompleted"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.OnDragCompletedEventArgs.Canceled">
            <summary>
            Action was cancelled or failed to get valid extents
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.OnDragCompletedEventArgs.XMin">
            <summary>
            Starting location - X
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.OnDragCompletedEventArgs.YMin">
            <summary>
            Starting location - Y
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.OnDragCompletedEventArgs.XMax">
            <summary>
            Ending location - X
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.OnDragCompletedEventArgs.YMax">
            <summary>
            Ending location - Y
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MapViewControl.OnDragCompleted">
            <summary>
            Drag was completed.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MapViewControl.OnPictureClick">
            <summary>
            Called when the picture control is clicked
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapViewControl.MapCursorUpdateArgs">
            <summary>
            Event argument to use with the <see cref="E:Geosoft.GX.Controls.MapViewControl.OnDragCompleted"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapCursorUpdateArgs.X">
            <summary>
            X
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapCursorUpdateArgs.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapCursorUpdateArgs.XScreen">
            <summary>
             X screen position
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapCursorUpdateArgs.YScreen">
            <summary>
            Y screen position
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MapViewControl.MapCursorUpdated">
            <summary>
            Map cursor and was updated (can be use to link controls)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapCursorUpdatedObservable">
            <summary>
            MapCursorUpdated event observable
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapViewControl.MapClickUpdateArgs">
            <summary>
            Event argument to use with the <see cref="E:Geosoft.GX.Controls.MapViewControl.MapClickUpdated"/>.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapClickUpdateArgs.Button">
            <summary>
            Button name
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MapViewControl.MapClickUpdated">
            <summary>
            Map clicked updated
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapClickUpdatedObservable">
            <summary>
            MapClickUpdated event observable
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.MapViewControl.MapMouseDownUpArgs">
            <summary>
            Event argument to use with the <see cref="E:Geosoft.GX.Controls.MapViewControl.MapMouseDownUpdated"/> and <see cref="E:Geosoft.GX.Controls.MapViewControl.MapMouseUpUpdated"/>.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MapViewControl.MapMouseDownUpdated">
            <summary>
            Map mouse down update
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapMouseDownUpdatedObservable">
            <summary>
            MapMouseDownUpdated event observable
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MapViewControl.MapMouseUpUpdated">
            <summary>
            Map mouse up update
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.MapMouseUpUpdatedObservable">
            <summary>
            MapMouseUpUpdated event observable
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.HideStatusLabel">
            <summary>
            Hide status label if not needed
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.DeleteTempFiles">
            <summary>
            Delete temporary map file with xml
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.Initialize">
            <summary>
            Initialize temporary map and view instances
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Render the map view to the picture box
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.TrackMouseCursor(System.Double,System.Double)">
            <summary>
            Draw full control tracking mouse cursor and update status text
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.ResetTrackMouseCursor">
            <summary>
            Clear full control tracking mouse cursor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.UpdateStatus(System.Double,System.Double,System.String)">
            <summary>
            Update status text
            </summary>
            <param name="x">X location</param>
            <param name="y">Y location</param>
            <param name="otherText">optional text to use</param>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.CoordinateSystemDescription">
            <summary>
            Coordinate system description to display along with cursor-tracked location
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.CoordinateSystemUnits">
            <summary>
            Coordinate system units to display along with cursor-tracked location
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.GetLocationFromClick(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Get the mouse click location.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.ZoomToFullExtents">
            <summary>
            Zoom to full extents of visible groups in view
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.ZoomToPreviousExtents">
            <summary>
            Zoom to previous extents, so even if the map visible extents change you get the same extents
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.ZoomTo(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Zoom to specified area
            </summary>
            <param name="xMin">Min X</param>
            <param name="yMin">Min Y</param>
            <param name="xMax">Max X</param>
            <param name="yMax">Max Y</param>
        </member>
        <member name="P:Geosoft.GX.Controls.MapViewControl.ForceViewExtents">
            <summary>
            Determines view extents will be used when redrawing
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.SetCurrentExtents(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set current view extents
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.SetAreaOfInterest(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Set current area of interest
            </summary>
            <param name="xMin"></param>
            <param name="yMin"></param>
            <param name="xMax"></param>
            <param name="yMax"></param>
        </member>
        <member name="F:Geosoft.GX.Controls.MapViewControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MapViewControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation">
            <summary>
            <para>
            Modeless Forms in .Net is arguably broken in the sense that one cannot tab between controls
            within the form and that the controls' with focus is not painted with cues to this effect.
            </para>
            <para>
            Another issue is that if these forms are used within a native application the main window
            (or its last active popup) is not activated as soon as a modeless child is closed.
            It seems that the last active desktop application is activated and this causes usability
            issues.
            </para>
            <para>
            This class is derived from <see cref="T:System.Windows.Forms.Form"/> and implements workarounds
            for these two issues. Unless the form is shown modelessly
            </para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.#ctor">
            <summary>
            Default contructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.Show(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the form modelessly with the specified owner.
            </summary>
            <param name="owner">
            Any object that implements <see cref="T:System.Windows.Forms.IWin32Window"/> and represents
            the top-level window that will own this form.
            </param>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.Show">
            <summary>
            Shows the form modelessly.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.ShowDialog(System.Windows.Forms.IWin32Window)">
            <summary>
            Shows the form as a modal dialog box with the specified owner.
            </summary>
            <param name="owner">
            Any object that implements <see cref="T:System.Windows.Forms.IWin32Window"/> that represents
            the top-level window that will own the modal dialog box.
            </param>
            <returns>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.ShowDialog">
            <summary>
            Shows the form as a modal dialog box.
            </summary>
            <returns>One of the <see cref="T:System.Windows.Forms.DialogResult"/> values.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.ProcessKeyPreview(System.Windows.Forms.Message@)">
            <summary>
            Previews a keyboard message.
            </summary>
            <param name="m">
            A System.Windows.Forms.Message, passed by reference, that represents the
            window message to process.
            </param>
            <returns>true if the message was processed by the control; otherwise, false.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ModelessFormWithFocusCuesAndMainWindowReactivation.OnShown(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Shown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.MultiSelectTreeControl">
            <summary>
            Implements a TreeView that simulates user selection of multiple nodes.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.MultiSelectTreeControl.m_rootNodes">
            <summary>
            Contains the list of root nodes for the tree. This should be set by the user of the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MultiSelectTreeControl.MultiSelectionUpdated">
            <summary>
            Occurs when the set of selected TreeNodes changes.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.SuspendSelectionUpdate">
            <summary>
            Suspend selection event calls
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.OnMultiSelectionUpdated">
            <summary>
            Raises the MultiSelectionUpdated event.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.MultiSelectTreeControl.NodeKeyRequested">
            <summary>
            Occurs when this MultiSelectTreeControl needs to query the unique name of
            a node, to save the tree's expanded/collapsed state. (Node names are
            implementation-specific).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.OnNodeKeyRequested(System.Windows.Forms.TreeNode)">
            <summary>
            Raises the NodeKeyRequested for a node.
            </summary>
            <param name="node">The node for which to get a unique name.</param>
            <returns>The unique name returned from the event handler.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeSelect event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Raises the AfterSelect event.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.SelectAll">
            <summary>
            Selects all of the nodes in the tree.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.SelectNone">
            <summary>
            Deselect all of the nodes in the tree.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.SelectSingleNode(System.Windows.Forms.TreeNode)">
            <summary>
            Change the selection of the tree to a single node.
            </summary>
            <param name="node">The node to select.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.ControlKeySelectNode(System.Windows.Forms.TreeNode)">
            <summary>
            Change the selection of the tree to a single node.
            Add/remove based on currently selected and Control Key held.
            </summary>
            <param name="node">The node to change selection for.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.SelectSingleNodeFromRMB(System.Windows.Forms.TreeNode)">
            <summary>
            Change selection of the tree to a single node. Used by right-click handlers
            to ensure that the node that was right-clicked is selected.
            </summary>
            <param name="node">The node to select.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.RemoveNodeFromSelectionCollections(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            Remove node from selected nodes list
            </summary>
            <param name="node">Node to be removed</param>
            <param name="updateBackColor">Option to reset back color</param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.ClearSelectedItems">
             <summary>
            
             </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.RestoreNodeSelection">
             <summary>
            
             </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.HasNodesSelected">
            <summary>
            Gets whether there are any nodes selected in the tree.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.HasSingleSelectedNode">
            <summary>
            Gets whether there is exactly one node selected in the tree.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.SingleSelectedNode">
            <summary>
            Gets the single selected node, if there is one.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.HasMultipleSelectedNodes">
            <summary>
            Gets whether there is more than one node selected in the tree.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.AllSelectedNodes">
            <summary>
            Enumerates all of the selected nodes in the tree.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.MultiSelectTreeControl.AllNodes">
            <summary>
            Enumerates all the nodes in the tree.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.IsSelected(System.Windows.Forms.TreeNode)">
            <summary>
            Queries whether a given node is selected.
            </summary>
            <param name="node">The node to check.</param>
            <returns>True, if the node is selected; otherwise, false.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.GetNodesCollapsedState">
            <summary>
            Gets a list of noes which are currently in the collapsed state.
            </summary>
            <returns>The list of unique names for collapsed nodes in the tree.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.SetNodesCollapsedState(System.Collections.Generic.List{System.String})">
            <summary>
            Sets which nodes are collapsed in the tree.
            </summary>
            <param name="collapsedNodes">
            A list of unique names for nodes in the tree.
            Nodes whose unique name is in this list will be collapsed.
            All others will be expanded.
            </param>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.RestoreCurrentlyCollapsedNodes">
            <summary>
            Restore the current collapse state of the nodes in the tree to what
            was previously saved with SaveCurrentlyCollapsedNodes.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.MultiSelectTreeControl.SaveCurrentlyCollapsedNodes">
            <summary>
            Save the current collapse state of the nodes in the tree.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.NodeKeyRequestEventArgs">
            <summary>
            Event data for the NodeKeyRequested event.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NodeKeyRequestEventArgs.Node">
            <summary>
            The node for which to query a unique name.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NodeKeyRequestEventArgs.NodeKey">
            <summary>
            The unique name for the node. This value must be set before the NodeKeyRequest
            event returns.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NodeKeyRequestEventArgs.#ctor(System.Windows.Forms.TreeNode)">
            <summary>
            Initializes a new instance of the NodeKeyRequestEventArgs class.
            </summary>
            <param name="node">The node for which to query a unique name.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.RoundToSignificantFiguresMode">
            <summary>
            Specifies how mathematical rounding method should process the number
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.RoundToSignificantFiguresMode.Round">
            <summary>
            When a number is halfway between two others, it is rounded toward the nearest number that is away from zero at the significant figures specified.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.RoundToSignificantFiguresMode.Floor">
            <summary>
            Returns the largest value less than or equal to the specified the nearest double-precision floating-point number at the significant figures specified.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.RoundToSignificantFiguresMode.Ceiling">
            <summary>
            Returns the smallest value that is greater than or equal to the specified double-precision floating-point number at the significant figures specified.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.NumberExtensionMethods">
            <summary>
            Extension class for number formatting and rounding
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumberExtensionMethods.RoundToSignificantFigures(System.Double,System.Int32,Geosoft.GX.Controls.RoundToSignificantFiguresMode)">
            <summary>
            Extension method to round a double value to a certain number of significant figures
            </summary>
            <param name="value">The value to round</param>
            <param name="numSignificantFigures">The number of significant figures</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers at the significant figures specified.</param>
            <returns>
            The number nearest to value that has a number of significant figures equal to digits. If value has fewer
            significant figures than specified, the value is returned unchanged.
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.NumberExtensionMethods.ToStringNoScientific(System.Double,System.Int32,Geosoft.GX.Controls.RoundToSignificantFiguresMode)">
            <summary>
            Convert to a display string with numeric precision parameters and without falling back to scientific notation
            </summary>
            <param name="value">The value to round</param>
            <param name="numSignificantFigures">The number of significant figures</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers at the significant figures specified.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.NumberExtensionMethods.IsEqualToSignificantFigures(System.Double,System.Double,System.Int32,Geosoft.GX.Controls.RoundToSignificantFiguresMode)">
            <summary>
            Compare two double precision values to a specified significant number of figures.
            </summary>
            <param name="value">This value</param>
            <param name="otherValue">The other value</param>
            <param name="numSignificantFigures">The number of significant figures</param>
            <param name="mode">Specification for how to round value if it is midway between two other numbers at the significant figures specified.</param>
            <returns>
            True if the value is equal to otherValue for the specified significaant digits and rounding
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.NumericUpDownControl">
            <summary>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.GetPrivateField``1(Geosoft.GX.Controls.NumericUpDownControl,System.String)">
            <summary>
            Extracts a reference to a private underlying field
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.CurrentValue">
            <summary>
            Get the current REAL value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.SetCurrentValue(System.Double)">
            <summary>
            Set the current REAL value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            WndProc override to kill WN_MOUSEWHEEL message
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.AutoSelect">
            <summary>
            Automatically select control text when it receives focus.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the text box.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in the text box.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.SelectedText">
            <summary>
            Gets or sets a value indicating the currently selected text in the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.InterceptMouseWheel">
            <summary>
            Enables MouseWheel only under certain conditions.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.NumericUpDownControl.InterceptMouseWheelMode">
            <summary>
            Mouse wheel intercept mode.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NumericUpDownControl.InterceptMouseWheelMode.Always">
            <summary>MouseWheel always works (defauld behavior)</summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NumericUpDownControl.InterceptMouseWheelMode.WhenMouseOver">
            <summary>MouseWheel works only when mouse is over the (focused) control</summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NumericUpDownControl.InterceptMouseWheelMode.Never">
            <summary>MouseWheel never works</summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.ShowUpDownButtons">
            <summary>
            Set UpDownButtons visibility mode.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.NumericUpDownControl.ShowUpDownButtonsMode">
            <summary>
            UpDown buttons visibility options.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NumericUpDownControl.ShowUpDownButtonsMode.Always">
            <summary>UpDownButtons are always visible (defauld behavior)</summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NumericUpDownControl.ShowUpDownButtonsMode.WhenMouseOver">
            <summary>UpDownButtons are visible only when mouse is over the control</summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.WrapValue">
            <summary>
            If set, incrementing value will cause it to restart from Minimum
            when Maximum is reached (and viceversa).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.OnGotFocus(System.EventArgs)">
            <summary>
            elect all the text on focus enter
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            MouseUp will kill the SelectAll made on GotFocus.
            Will restore it, but only if user have not made a partial text selection.
            </summary>
            <param name="mevent"></param>
        </member>
        <member name="E:Geosoft.GX.Controls.NumericUpDownControl.MouseEnter">
            <summary>
            Event raised (correctly) when mouse enters on the textbox
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.NumericUpDownControl.MouseLeave">
            <summary>
            Event raised (correctly) when mouse leaves on the textbox
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.NumericUpDownControl.BeforeValueDecrement">
            <summary>
            Event raised BEFORE value decrement
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.NumericUpDownControl.BeforeValueIncrement">
            <summary>
            Event raised BEFORE value increment
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.DownButton">
            <summary>
            Programatically presses DownButton
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.UpdateEditText">
            <summary>
            Update edit text.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.ValidateEditText">
            <summary>
            Validate edit text.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.UpButton">
            <summary>
            Programatically presses UpButton
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.UpdateUpDownButtonsVisibility">
            <summary>
            Show or hide the UpDownButtons, according to ShowUpDownButtons property value
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.OnTextBoxResize(System.Object,System.EventArgs)">
            <summary>
            Custom textbox size management
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.ReactiveValidationError">
            <summary>
            Used in ReactiveUI based validation bindings.
            </summary>
            <remarks>
            Binding validation errors to this property will call <see cref="M:System.Windows.Forms.ErrorProvider.SetError(System.Windows.Forms.Control,System.String)"/> for this controls
            on the error provider of the upmost parent form.
            Also see: https://github.com/reactiveui/ReactiveUI.Validation#how-to-use
            </remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.INIComponent">
            <summary>
            INI support property. Used by INI compoenent to register itself with the form to ensure reliable initialization
            for controls from INI parameter settings irrespective of their property initialization order in the designer generated code.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.NumericUpDownControl.INIParameter">
            <summary>
            If set will contain the INI parameter (GROUP.PARAM) for this control. This is used to improve the error messaged
            during validation failures during script runs.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NumericUpDownControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.NumericUpDownControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ParameterStorage.IniStorage">
            <summary>
            IniStorage implements IParamStorage using the INI for the global workspace.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.ParameterStorage.IniStorage"/> class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.bStringParamExists(System.String,System.String)">
            <summary>
            Check if a string parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.bIntParamExists(System.String,System.String)">
            <summary>
            Check if a int parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.bDoubleParamExists(System.String,System.String)">
            <summary>
            Check if a double parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.iGetParam(System.String,System.String)">
            <summary>
            Get an int parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.SetIntParam(System.String,System.String,System.Int32)">
            <summary>
            Set an int parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="iValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.dGetParam(System.String,System.String)">
            <summary>
            Get a double parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.SetDoubleParam(System.String,System.String,System.Double)">
            <summary>
            Set a double parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="dValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.GetParam(System.String,System.String)">
            <summary>
            Get a string parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.SetParam(System.String,System.String,System.String)">
            <summary>
            Set a string parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="strValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.ParameterStorage.IniStorage.GetIni">
            <summary>
            Gets the ini.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Geosoft.GX.Controls.QuantitativeColors">
             <summary>
             Static class to provide colors to make graphics with scientific results as clear as possible.
             Credits to Paul Tol: https://personal.sron.nl/~pault/
             
             The aim is to have a palette of colours that are:
            
               1. distinct for all people, including colour-blind readers;
               2. distinct from black and white;
               3. distinct on screen and paper; and
               4. still match well together.
               
             As of now three of the qualitative schemes are provided here, Bright, Vibrant and Muted
             </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.QuantitativeColors.Bright">
            <summary>
            Bright qualitative colour scheme that is colour-blind safe. The main scheme for lines and their labels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Cyan">
            <summary>
            Cyan
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Yellow">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Purple">
            <summary>
            Purple
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Grey">
            <summary>
            Grey
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Bright.Black">
            <summary>
            Black
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.QuantitativeColors.Vibrant">
            <summary>
            Vibrant qualitative colour scheme, an alternative to the bright scheme that is equally colour-blind safe. 
            It has been designed for data visualization framework TensorBoard, built around their signature orange FF7043. 
            That colour has been replaced here to make it print-friendly.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Cyan">
            <summary>
            Cyan
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Teal">
            <summary>
            Teal
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Orange">
            <summary>
            Orange
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Magenta">
            <summary>
            Purple
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Grey">
            <summary>
            Grey
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Vibrant.Black">
            <summary>
            Black
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.QuantitativeColors.Muted">
            <summary>
            Muted qualitative colour scheme, an alternative to the bright scheme of that is equally 
            colour-blind safe with more colours, but lacking a clear red or medium blue. 
            Pale grey is meant for bad data in maps.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Indigo">
            <summary>
            Indigo
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Cyan">
            <summary>
            Cyan
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Teal">
            <summary>
            Teal
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Olive">
            <summary>
            Olive
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Sand">
            <summary>
            Sand
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Rose">
            <summary>
            Rose
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Wine">
            <summary>
            Wine
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Purple">
            <summary>
            Purple
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.PaleGrey">
            <summary>
            PaleGrey
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.QuantitativeColors.Muted.Black">
            <summary>
            Black
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.RadioButtonControl">
            <summary>
            <see cref="T:System.Windows.Forms.RadioButton"/> type control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.GrowParentToFitEnabled">
            <summary>
            Growing the parent is enabled if position or size of this control changes (used in translation)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.BuddyControl">
            <summary>
            Set the control that this label is for.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RadioButtonControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.RadioButtonControl"/> class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.Text">
            <summary>
            Gets or sets the text displayed next to the checkbox
            </summary>
            <value>The label text.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.Checked">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Geosoft.GX.Controls.RadioButtonControl"/> is checked.
            </summary>
            <value><c>true</c> if checked; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.AutoCheck">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:Geosoft.GX.Controls.RadioButtonControl.Checked"/>
            value and the appearance of the control automatically change when the control
            is clicked.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.RadioButtonControl.CheckedChanged">
            <summary>
            Occurs when [checked changed].
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RadioButtonControl.radioButton_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Handles the CheckedChanged event of the radioButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.RadioButtonControl.EnumValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="M:Geosoft.GX.Controls.RadioButtonControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RadioButtonControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.RadioButtonControl.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.RadioButtonControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RadioButtonControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.RadioButtonControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.RangeControl">
            <summary>
            Control that allows setting a range in an interactive fashion
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RangeControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.RangeControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RangeControl.Value">
            <summary>
            Range value.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RangeControl.LabelText">
            <summary>
            Label text.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RangeControl.Limits">
            <summary>
            Limits.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RangeControl.Sensitivity">
            <summary>
            Sensitivity of the range control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RangeControl.Decimals">
            <summary>
            Number of decimals shown in the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.RangeControl.RangeChanged">
            <summary>
            Fires when range value changed
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.RangeControl.ValueChanged">
            <summary>
            Fires when the Value property is changed
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.RangeControl.RangeSensitivityChanged">
            <summary>
            Fires when the sensitivity value changed
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.RangeControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RangeControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.RangeControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.RangeControlSensitivity.RangeSensitivityChanged">
            <summary>
            Fires when the sensitivity value changed
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.RangeControlSensitivity.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.RangeControlSensitivity.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.RangeControlSensitivity.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.RealParameter">
            <summary>
            Represents one GX parameter of Geosoft type Real
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RealParameter.DefaultValue">
            <summary>
            The default value for the parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.RealParameter.BuddyControl">
            <summary>
            The parameter's buddy REAL control
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.SelectionSpecifier">
            <summary>
            Selection Specifier
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SelectionSpecifier.SelectAllButtonPressed">
            <summary>
            Occurs when [select all button pressed].
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SelectionSpecifier.DeselectAllButtonPressed">
            <summary>
            Occurs when [deselect all button pressed].
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SelectionSpecifier.SelectOneButtonPressed">
            <summary>
            Occurs when [select one button pressed].
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SelectionSpecifier.DeselectOneButtonPressed">
            <summary>
            Occurs when [deselect one button pressed].
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SelectionSpecifier.ResetSelectionButtonPressed">
            <summary>
            Occurs when [reset selection button pressed].
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.SelectionSpecifier"/> class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.EnableAllSelectionButtons">
            <summary>
            Enables all selection buttons.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.EnableResetButton">
            <summary>
            Enables the reset button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.EnableDeSelectAllButton">
            <summary>
            Enables the de select all button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.EnableDeSelectOneButton">
            <summary>
            Enables the de select one button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.EnableSelectOneButton">
            <summary>
            Enables the select one button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.EnableSelectAllButton">
            <summary>
            Enables the select all button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.DisableAllSelectionButtons">
            <summary>
            Disables all selection buttons.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.DisableResetButton">
            <summary>
            Disables the reset button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.DisableDeSelectAllButton">
            <summary>
            Disables the de select all button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.DisableDeSelectOneButton">
            <summary>
            Disables the de select one button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.DisableSelectOneButton">
            <summary>
            Disables the select one button.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.DisableSelectAllButton">
            <summary>
            Disables the select all button.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.SelectionSpecifier.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.SelectionSpecifier.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Separator">
            <summary>
            Very simple horizontal separator
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Separator.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.Separator"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Separator.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Separator.OnSizeChanged(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged"/> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.Separator.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.</summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data. </param>
        </member>
        <member name="T:Geosoft.GX.Controls.FileOpenSaveEnum">
            <summary>
            Use to set open or save behavior in the <see cref="T:Geosoft.GX.Controls.FileEditControl"/> control.
            </summary>
            <seealso cref="T:Geosoft.GX.Controls.FileMustExistEnum"/>
        </member>
        <member name="F:Geosoft.GX.Controls.FileOpenSaveEnum.Open">
            <summary>
            Use to open existing file(s).
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.FileOpenSaveEnum.Save">
            <summary>
            Use to save file
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.FileMustExistEnum">
            <summary>
            Use to set open or save behavior in the <see cref="T:Geosoft.GX.Controls.FileEditControl"/> control.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.FileMustExistEnum.Default">
            <summary>
            File must exist.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.FileMustExistEnum.No">
            <summary>
            Does not need to exist (but can).
            </summary>
            <remarks>Use in case where <see cref="P:Geosoft.GX.Controls.FileEditControl.Required"/> is <c>true</c>, but the file will be created
            by the user if it does not exist.</remarks>
        </member>
        <member name="F:Geosoft.GX.Controls.FileMustExistEnum.Yes">
            <summary>
            <c>Yes</c> for open and <c>No</c> for save behaviour
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.FileMustBeWriteableEnum">
            <summary>
            Use to set whether the file must be writeable in the <see cref="T:Geosoft.GX.Controls.FileEditControl"/> control.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.FileMustBeWriteableEnum.No">
            <summary>
            Does not need to be writeable.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.FileMustBeWriteableEnum.Yes">
            <summary>
            Needs to be writeable.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.DisplayOverwritePromptDuringValidationEnum">
            <summary>
            Whether to display the overwrite prompt during validation, when FileOpenSave=Save.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DisplayOverwritePromptDuringValidationEnum.No">
            <summary>
            Don't display.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.DisplayOverwritePromptDuringValidationEnum.Yes">
            <summary>
            Display.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.UseComboboxEnum">
            <summary>
            Whether to use the combobox.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.UseComboboxEnum.Yes">
            <summary>
            Use combobox.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.UseComboboxEnum.No">
            <summary>
            Don't use combobox.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.FileEditControl">
            <summary>
            Override File Browse button in the File Edit control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.OnFileBrowse">
            <summary>
            Override the File Browse button.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.OnFileEdit">
            <summary>
            Called when Edit button is clicked
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.FileOpenSave">
            <summary>
            Gets or sets if the control should be used to open or to save file(s).
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.FileMustExist">
            <summary>
            Gets or sets the <see cref="T:Geosoft.GX.Controls.FileMustExistEnum"/> behavior of this control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.FileMustBeWriteable">
            <summary>
            Gets or sets the <see cref="T:Geosoft.GX.Controls.FileMustBeWriteableEnum"/> behavior of this control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.DisplayOverwritePromptgDuringValidation">
            <summary>
            Gets or sets the <see cref="T:Geosoft.GX.Controls.DisplayOverwritePromptDuringValidationEnum"/> behavior of this control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.DefaultValue">
            <summary>
            Gets or sets the default value for the file (ignored if <see cref="P:Geosoft.GX.Controls.FileEditControl.MultipleFiles"/> is <c>true</c>).
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.ShowEditButton">
            <summary>
            Show edit button
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.EditButtonEnabled">
            <summary>
            Enable/disable edit button
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.MultipleFiles">
            <summary>
            If true, then allows multiple file selection. The file path returned is in Geosoft
            multiple file format, directory, "|" delimited file names, then (for DAT files) qualifiers; e.g.
            "c:\data\file1.grd|file2.grd|file3.grd(GRD)"</summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.BrowseQuery">
            <summary>
            Gets or sets the title of the browse dialog launched using the browse button.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.CustomFilter">
            <summary>
            Gets or sets the title of the browse dialog launched using the browse button.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.Filters">
            <summary>
            Gets or sets the file filters to use, which determines the choices that appear in the "Save as file type" or "Files of type" dropdown in the file dialog.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.UseCombobox">
            <summary>
            If true, then allows multiple file selection. The file path returned is in Geosoft
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.BrowseListItems">
            <summary>
            Get/Set the file names in the Browse List
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.BrowseListWidth">
            <summary>
            Get the width of the Browse List
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.RequiredFileExtension">
            <summary>
            If a desired file name extension must exist then it will be added to the file name
            whenever it doesn't end with that extension. The extension may carry a leading "."
            or not, and is always converted to lower case.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.IsPacked">
            <summary>
            Is the file in packed storage?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.SortFilters">
            <summary>
            Sort the available list of file filters in the dialog.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.TextBox">
            <summary>
            Get TextBox control
            ToDo: Should consider a better way like mixins to aggregate all text change events to use in Reactive UI gracefully
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.ComboBox">
            <summary>
            Get ComboBox control
            ToDo: Should consider a better way like mixins to aggregate all text change events to use in Reactive UI gracefully
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.FileEditControl.Required"/> property changes
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.TextBoxLeave">
            <summary>
            Fired when control leaves the text box.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.SetFilePath(System.String)">
             <summary>
             Set the file path value in an FEdit control.
             </summary>
             <remarks><para>The input string is a Geosoft path, and may contain multiple files
             (if you are using the multiple file option) or qualifiers (for grid
             and image DATs). The volume and directory parts are options, with
             the current workspace directory assumed.</para>
            
             <para>The path is automatically split, so that only the file name(s) and qualifier
             appears in the text edit box.</para>
             <para>The input can be a replaceable parameter in the form %FILE%, for instance
             you can input %MONTAJ.DEFAULT_COLOUR% to set the default colour table.</para>
             </remarks>
             <param name="strPath">The input path string.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.SetDefaultFilePath(System.String)">
            <summary>
            Set a default path for first-time use of new filter for a multi-filter dialog, so that
            the underlying can deduce the selected filter index by inspecing the file name. This
            cannot be set to the ini parameter as in SetFilePath which doesn't exist for such a
            filter that has never been used.
            </summary>
            <param name="strPath"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.SetFileDirectory(System.String)">
            <summary>
            Set the file directory value in an FEdit control.
            </summary>
            <remarks><para>This is useful for pre-defining where the browse will open up.</para>
            </remarks>
            <param name="strDir">The input directory string.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.strFilePath">
             <summary>
             Get the file path value from an FEdit control.
             </summary>
            
             <remarks>
             The returned string is a Geosoft path, and may contain multiple files
             (if you are using the multiple file option) or qualifiers (for grid
             and image DATs).
             </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.tryGetValidStrPath(System.String@)">
            <summary>
            Check if the strPath is valid and will not throw exceptions when accessed
            </summary>
            <returns>True if strPath is valid</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.strFullFilePath">
             <summary>
             Get the full file path value from an FEdit control.
             </summary>
            
             <remarks>
             The returned string is a Geosoft path, and may contain multiple files
             (if you are using the multiple file option) or qualifiers (for grid
             and image DATs).
             </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.strFilePath(System.Boolean)">
             <summary>
             Get the file path value from an FEdit control.
             </summary>
            
             <remarks>
             The returned string is a Geosoft path, and may contain multiple files
             (if you are using the multiple file option) or qualifiers (for grid
             and image DATs).
             </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.GetFilePath(System.String@)">
             <summary>
             Get the file path value from an FEdit control.
             </summary>
            
             <remarks>The returned string is a Geosoft path, and may contain multiple files
             (if you are using the multiple file option) or qualifiers (for grid
             and image DATs)</remarks>
            
             <param name="strPath">The returned path in Geosoft multi-path format, with qualifiers (if relevent)</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.GetFullFilePath(System.String@)">
             <summary>
            
             </summary>
             <param name="strFullPath"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.GetText(System.String@)">
             <summary>
             Get the text currently displayed in the FEdit control.
             </summary>
            
             <remarks></remarks>
            
             <param name="strText">The returned text currently displayed in the FEDit control</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.SetFileFiltersAndBrowseList(Geosoft.GX.Controls.Helpers.FileFilters[],System.Collections.Generic.SortedList{System.String,System.String},System.Int32)">
             <summary>
             Set up file filters and browse list
             </summary>
            
             <remarks></remarks>
            
             <param name="eFilt">Array of Geosoft file filters</param>
             <param name="fileList">Sorted list of file names with corresponding full paths</param>
             <param name="dropDownWidth">Width in pixels to make the drop-down list</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current file path passes validation tests.
            </summary>
            <remarks>The following validation is performed:
            <list type="bullet"><item><description>The file name(s) must not contain illegal characters.</description></item>
            <item><description>If the control is opened using Constant.FILE_FORM_OPEN, the the file(s) must exist.</description></item>
            <item><description>If the control is opened using Constant.FILE_FORM_SAVE, permission must have been given for overwriting.</description></item>
            <item><description>If the item is required, it must be defined.</description></item></list>
            </remarks>
            <param name="strError">The returned error string if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.Browse">
            <summary>
            Invoke browsing for a file (called when browse button is clicked)
            </summary>
            <returns>true if OK, false if user cancels</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.bValidateThatFileIsNotLocked(System.Boolean,System.String@,System.Boolean,Geosoft.GX.Controls.GeoErrorProvider)">
            <summary>
            Check to see if the file exists and is locked. Call this during
            validation to ensure that an output file can be created successfully.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.OnBrowseForFile(System.String@)">
            <summary>
            Override to provide custom browsing utility and/or extra validation.
            </summary>
            <param name="strReturnPath">Path to file(s) returned.</param>
            <returns><c>true</c> if file(s) were sucessfully selected and accepted by user and all validation passed based on properties.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.Init(Geosoft.GX.Controls.Helpers.FileFilters[])">
            <summary>
            Initialize the FEdit control with multiple file filters.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.FillBrowseLST(Geosoft.GX.Controls.Helpers.FileFilters,System.Collections.Generic.SortedList{System.String,System.String})">
            <summary>
            Update auto-complete list for a given single file type.
            </summary>
            <param name="eFileFilter">One of the standard Geosoft file filters</param>
            <param name="_list">Sorted list of file names and full paths</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.FillBrowseLST(Geosoft.GX.Controls.Helpers.FileFilters[],System.Collections.Generic.SortedList{System.String,System.String})">
            <summary>
            Update auto-complete list for list of file types.
            </summary>
            <param name="eFileFilters">Array of the standard Geosoft file filters</param>
            <param name="_list">Sorted list of file names and full paths</param>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.TextChanged">
            <summary>
            Occurs when the TextBox's text property changes.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.Browsed">
            <summary>
            Occurs when a browse is completed.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.EnterKeyPressed">
            <summary>
            Occurs when the enter key is pressed (the default button will not be pressed if this event is assigned)
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.OnTextBoxLeave(System.Object,System.EventArgs)">
            <summary>
            Occurs when control leaves the text box portion of the control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FileEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FileEditControl.FileTextChanged">
            <summary>
            Occurs when the textbox's text is changed to the name of an existing file, or if it is cleared, and if this
            is the single-file version.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FileEditControl.m_tbFileName_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Occurs when the textbox's text is changed to the name of an existing file, and if this
            is the single-file version.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.GeoDatabaseEditControl">
            <summary>
            Reusable Geodatabase Browsing Edit control for use in Geosoft GX.Net code.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.OnLoad(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Form.Load"></see> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
        </member>
        <member name="P:Geosoft.GX.Controls.GeoDatabaseEditControl.ShowOnlyFileGeodatabases">
            <summary>
            Only for File Geodatabase
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GeoDatabaseEditControl.AllowGeodatabaseCreation">
            <summary>
            Enable/Disable File Geodatabase creation mode
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GeoDatabaseEditControl.GeodatabaseLocation">
            <summary>
            Gets or sets the value for the GeoDatabase edit control's location.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GeoDatabaseEditControl.BrowseQuery">
            <summary>
            The title of the browse dialog launched using the browse button.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GeoDatabaseEditControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current Geodatabase location passes validation tests.
            </summary>
            <remarks></remarks>
            <param name="strError">The returned error string if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GeoDatabaseEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.GeoDatabaseEditControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.GeoDatabaseEditControl.Required"/> property changes
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.GeoDatabaseEditControl.GeodatabaseLocationChanged">
            <summary>
            Fired when the location changes
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoDatabaseEditControl.Browse">
            <summary>
            Invoke browsing for a file Geodatabase (called when browse button is clicked)
            </summary>
            <returns>true if OK, false if user cancels</returns>
        </member>
        <member name="T:Geosoft.GX.Controls.GeoErrorProvider">
            <summary>
            Derives from ErrorProvider to implement SetError to be aware of <see cref="P:Geosoft.GX.Controls.BaseControl.ErrorProviderBuddy"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoErrorProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.GeoErrorProvider"/> class
            and initializes the default settings for <see cref="P:System.Windows.Forms.ErrorProvider.BlinkRate"/>,
            <see cref="P:System.Windows.Forms.ErrorProvider.BlinkStyle"/>, and the <see cref="P:System.Windows.Forms.ErrorProvider.Icon"/>.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoErrorProvider.#ctor(System.Windows.Forms.ContainerControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.GeoErrorProvider"/> class attached to a container.
            </summary>
            <param name="parentControl">The container of the control to monitor for errors.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoErrorProvider.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Geosoft.GX.Controls.GeoErrorProvider"/> class
            attached to an <see cref="T:System.ComponentModel.IContainer"/> implementation.
            </summary>
            <param name="container">The System.ComponentModel.IContainer to monitor for errors.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoErrorProvider.Clear">
            <summary>
            Clears all settings associated with this component.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoErrorProvider.SetError(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the error description string for the specified control.
            </summary>
            <param name="control">The control to set the error description string for.</param>
            <param name="value">The error description string.</param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
        </member>
        <member name="M:Geosoft.GX.Controls.GeoErrorProvider.GetError(System.Windows.Forms.Control)">
            <summary>
            Gets the error description string for the specified control.
            </summary>
            <param name="control">The control to set the error description string for.</param>
            <exception cref="T:System.ArgumentNullException">control is null.</exception>
        </member>
        <member name="T:Geosoft.GX.Controls.GroupBoxControl">
            <summary>
            A simple <see cref="T:System.Windows.Forms.GroupBox"/> control wich can also have a separator-like appearance
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupBoxControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.GroupBoxControl"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupBoxControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.GroupBoxControl.SeparatorLook">
            <summary>
            Gets or sets if the groupbox should have a separator-like appearance instead of the normal surround
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.GroupBoxControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupBoxControl._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.GroupBoxControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupBoxControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.GroupBoxControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IAdapterProperties">
            <summary>
            Forms and Container Controls which can provide these adapaters should implement this interface.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IAdapterProperties.ParamStorage">
            <summary>
            Get the parameter storage interface (if defined)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IAdapterProperties.APIAdapter">
            <summary>
            Get the API adapter interface (if defined)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IAPIAdapter">
            <summary>
            Interface adapter for GX controls to make it possible to use an alternative API
            than the default classes in the Geosoft.Desktop.GXNet and GeoEngine.Core.GXNet namespace.
            </summary>
            <remarks>
            An object that implements this interface can be passed as a parameter to the constructors
            of Geosoft GX control containers to override the default implementation,
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bDirectoryOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Directory open dialog
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the directory is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Single file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            File Open Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Single file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            File Save Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiImageOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiGridOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiDatOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@)">
            <summary>
            Multiple file open dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiFileOpen(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@)">
            <summary>
            Multi File Open Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiImageSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available image formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiGridSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying available grid formats only
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiDatSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multiple file save dialog displaying both grid and image formats
            </summary>
            <param name="ipWin">Parent window (need not be defined)</param>
            <param name="strTitle">Title of the dialog</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt to overwrite existing files?</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eFileFilter">File filter</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,Geosoft.GX.Controls.Helpers.FileFilters[],System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Geosoft Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="eaFileFilters">Array of file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bMultiFileSave(System.Windows.Forms.IWin32Window,System.String,System.String,System.String,System.String@,System.Boolean)">
            <summary>
            Multi File Save Dialog for Custom Filetypes with multiple file types
            </summary>
            <param name="ipWin">Parent window (need not be defined).</param>
            <param name="strTitle">Title of the dialog.</param>
            <param name="strFilter">Custom file filters</param>
            <param name="strDefault">Default value</param>
            <param name="strReturn">Where the file name(s) is returned</param>
            <param name="bPromptOverwrite">Prompt for overwriting existing files</param>
            <returns>
            true - Ok
            false - Cancel
            </returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.iGetColor(System.String)">
            <summary>
            Get int from string color (Geosoft way)
            </summary>
            <param name="strValue">string color value</param>
            <returns>int color value</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.strGetColor(System.Int32)">
            <summary>
            Get string from int color (Geosoft way)
            </summary>
            <param name="iValue">int color value</param>
            <returns>string color value</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bColorGui(System.Int32@,System.Boolean)">
            <summary>
            Select a colour GUI.
            </summary>
            <param name="iColor">Returned color</param>
            <param name="bAskTransparent">Ask about C_TRANSPARENT if white is selected>?</param>
            <returns>true - Ok, false - Cancel</returns>
            <remarks>
            Colour value is set on input, and new value returned.  If the input colour
            type is C_TRANSPARENT, then the color is set to white, if any other type
            is input the output is guaranteed to be of the same type.  If the third flag
            is GS_TRUE is used, then on exit, if white is selected, the user is prompted:
            'Do you want white (Yes) or "None" (No) ?' and the colour is converted as
            requested.  If this is not the case, the C_TRANSPARENT is converted to white
            (if "Ok" is selected) and no choice is offered.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bPatternGui(System.Int32@,System.Double@,System.Int32@,System.Double@,System.Int32@,System.Int32@)">
            <summary>
            Select a pattern GUI.
            </summary>
            <param name="iPatNum">Current Pattern</param>
            <param name="dPatSize">Current Size, input Constant.rDUMMY to use default</param>
            <param name="iPatThickness">Current Thick (0-100), input Constant.iDUMMY to use default</param>
            <param name="dPatDensity">Current Density, input Constant.rDUMMY to use default</param>
            <param name="iPatColor">Current Pattern Color</param>
            <param name="iPatBackColor">Current Background Color, can be C_TRANSPARENT</param>
            <returns>true - Ok, false - Cancel</returns>
            <remarks>
            Pattern values set on input, and new values returned.  Solid fill is indicated
            by Pattern number 0.  Size: pattern tile size in mm.  Thick: pattern line
            thickness in percent of the tile size.  valid range is 0-100.  Density: Tile
            spacing. A value of 1 means tiles are laid with no overlap.  A value of 2
            means they overlap each other.  The pattern Angle and Style parameters are
            not user-definable.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.RenderPattern(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Renders a Geosoft pattern to a Windows DC.
            </summary>
            <param name="dc">DC Handle</param>
            <param name="iLeft">left value of the render rect in Windows coordinates (bottom>top)</param>
            <param name="iBottom">bottom value</param>
            <param name="iRight">right value</param>
            <param name="iTop">top value</param>
            <param name="iPatNum">pattern number</param>
            <param name="dPatSize">pattern Size, input Constant.rDUMMY to use default</param>
            <param name="iThick">pattern Thick (0-100), input Constant.iDUMMY to use default</param>
            <param name="dDensity">pattern Density, input Constant.rDUMMY to use default</param>
            <param name="iForeCol">pattern Pattern Color</param>
            <param name="iBackCol">pattern Background Color, can be C_TRANSPARENT</param>
            <param name="bControlEnabled">is this window enabled?</param>
            <param name="bButton">is this a button?</param>
            <param name="bSelected">is this window selected?</param>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.GetFontList(System.Int32)">
            <summary>
            Get list of GFN fonts
            </summary>
            <returns>List of GFN fonts.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.strGetGlobal(System.String)">
            <summary>
            Get Global parameter from system storage
            </summary>
            <param name="strParam">Parameter name</param>
            <returns>parameter or null if it does not exist</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bInteractive">
            <summary>
            Is the GUI in interactive mode or in scripting mode
            </summary>
            <returns>true if interactive</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.GetDocumentsList(System.String)">
            <summary>
            Get list of documents of a particular type loaded into the application
            </summary>
            <param name="strType">Document type</param>
            <returns>List of file names</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.GetDATDefaults(System.Int32,System.Boolean,System.String@,System.String@)">
            <summary>
            Return the user default extension and qualifier for grids/images.
            </summary>
            <param name="iType">one of Constant.DAT_TYPE_...</param>
            <param name="bOpen">Open or saving file?</param>
            <param name="strExt">Returned default extension (e.g. "grd")</param>
            <param name="strQual">Returned default qualifier (e.g. "GRD")</param>
            <remarks>
            The default grid/image filters are normally stored in "MONTAJ.DEFAULT_XGD_IN"
            and "MONTAJ.DEFAULT_XGD_OUT" If no filter is defined, or the filter is not
            found then "grd" and "GRD" are returned as the default extension and qualifier.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.GetFileFilter(System.Int32,System.String@,System.String@,System.String@,System.Int32@)">
            <summary>
            Return the defined filter, mask, extension and directory for an input filter.
            </summary>
            <param name="iFilter">One of FILE_FILTER...</param>
            <param name="strFilter">Returned file filter string</param>
            <param name="strMask">Returned file mask string</param>
            <param name="strExt">Returned file extension</param>
            <param name="iDirectory">Returned directory (one of GS_DIRECTORY...)</param>
            <remarks>
            Returns the four parts of the file filter; e.g. for FILE_FILTER_GDB it returns:
            Filter: "Database (*.gdb)" Mask: "*.gdb" Extension: "gdb" Directory: "GS_DIRECTORY_NONE"
            This function is useful for constuction open/save dialog file filters, especially
            in GX.Net functions.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.bGeoFindPath(System.String,System.Int32,System.Int32,System.String@)">
            <summary>
            Get full path for a file if found
            </summary>
            <param name="strFile">File to search for</param>
            <param name="iSearchPath">Constant.FIND_LOCAL, Constant.FIND_GEOSOFT, or FIND_LOCAL_GEOSOFT</param>
            <param name="iGeoDir">one of GEO_DIRECTORY_...</param>
            <param name="strFoundPath">Where path is returned</param>
            <returns>true if file found</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IAPIAdapter.GeoGetDirectory(System.Int32,System.String@)">
            <summary>
            Get full the full path of a Geosoft Directory
            </summary>
            <param name="iGeoDir">one of GEO_DIRECTORY_...</param>
            <param name="strFolder">Geosoft Directory</param>
        </member>
        <member name="T:Geosoft.GX.Controls.IParamStorage">
            <summary>
            Implement this interface to provide an alternate implementation of parameter storage
            for the GX Controls.
            </summary>
            <remarks>
            An object that implements this interface can be passed as a parameter to the constructors
            of Geosoft GX control containers to override the default implementation,
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.bStringParamExists(System.String,System.String)">
            <summary>
            Check if a string parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.bIntParamExists(System.String,System.String)">
            <summary>
            Check if a int parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.bDoubleParamExists(System.String,System.String)">
            <summary>
            Check if a double parameter exists in storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>true if it exists</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.iGetParam(System.String,System.String)">
            <summary>
            Get an int parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.SetIntParam(System.String,System.String,System.Int32)">
            <summary>
            Set an int parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="iValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.dGetParam(System.String,System.String)">
            <summary>
            Get a double parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.SetDoubleParam(System.String,System.String,System.Double)">
            <summary>
            Set a double parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="dValue">Value to set</param>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.GetParam(System.String,System.String)">
            <summary>
            Get a string parameter from storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <returns>Parameter</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.IParamStorage.SetParam(System.String,System.String,System.String)">
            <summary>
            Set a string parameter to storage
            </summary>
            <param name="strGroup">Parameter Group</param>
            <param name="strName">Parameter Name</param>
            <param name="strValue">Value to set</param>
        </member>
        <member name="T:Geosoft.GX.Controls.RequiredPictureBox">
            <summary>
            <see cref="T:System.Windows.Forms.TextBox"/> type control which remembers previous state using GX parameters and provides
            Geosoft integer validation and conversion on GX dialogs.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.StringParameter">
            <summary>
            Represents one GX parameter of Geosoft type String
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.StringParameter.DefaultValue">
            <summary>
            The default value for the parameter
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.StringParameter.BuddyControl">
            <summary>
            The parameter's buddy STRING control
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.SizeGripStatusStrip">
            <summary>
            Geosoft color edit control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SizeGripStatusStrip.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Geosoft.GX.Controls.SizeGripStatusStrip"/> class.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SizeGripStatusStrip.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override the background paint to put in the size grip.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.SizeGripStatusStrip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SizeGripStatusStrip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.SizeGripStatusStrip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.SpinButtonControl">
            <summary>
            C# replacement for the MFC Spin-Button control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SpinButtonControl.#ctor">
            <summary>
            C# replacement for the MFC Spin-Button control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SpinButtonControl.UpButtonClicked">
            <summary>
            Occurs when the up button is clicked.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.SpinButtonControl.DownButtonClicked">
            <summary>
            Occurs when the down button is clicked.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SpinButtonControl.OnResize(System.EventArgs)">
            <summary>
            Overridden OnResize()
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Geosoft.GX.Controls.SpinButtonControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SpinButtonControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.SpinButtonControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.SplitContainerControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SplitContainerControl.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.SplitContainerControl.SplitterWidth">
            <inheritdoc cref="P:System.Windows.Forms.SplitContainer.SplitterWidth"/>
        </member>
        <member name="P:Geosoft.GX.Controls.SplitContainerControl.TabStop">
            <inheritdoc cref="P:System.Windows.Forms.SplitContainer.TabStop"/>
        </member>
        <member name="P:Geosoft.GX.Controls.SplitContainerControl.GripperWidth">
            <summary>
            Width of gripper
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.SplitContainerControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:Geosoft.GX.Controls.Style.ButtonBaseBorderStyle">
            <summary>
            Enables dynamic border toggling for a <see cref="T:System.Windows.Forms.ButtonBase"/> 
            control depending on mouse events.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Style.ButtonBaseBorderStyle.RegisterStyleEvents(System.Windows.Forms.ButtonBase)">
            <summary>
            Register the <see cref="E:System.Windows.Forms.Control.MouseEnter"/> and <see cref="E:System.Windows.Forms.Control.MouseLeave"/> events
            to toggle the <paramref name="button"/> border. If the <paramref name="button"/> is
            a <see cref="T:System.Windows.Forms.CheckBox"/>, then also toggle on <see cref="E:System.Windows.Forms.CheckBox.CheckedChanged"/> as well.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.TabControlCustom">
            <summary>
            A customizable <see cref="T:System.Windows.Forms.TabControl"/> tab control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.TabControlCustom"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl"/> method.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.AdjustHeaderFont">
            <summary>
            HeaderFont allows for non-ambient font assignment (to TabControl headers only).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.AdjustItemSize">
            <summary>
            Adjust TabControl header height.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.DisplayStyleProvider">
            <summary>
            Gets/Sets the display style provider of the tab control. These are defined in the TabStyleProviders folder.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.DisplayStyle">
            <summary>
            Gets/Sets the display style of the tab control. The definition of the style is done in DisplayStyleProvider.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.Multiline">
            <summary>
            Is the tab control multi-line?
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.Padding">
            <summary>
            Gets/Sets the padding of the control (technically done in the style provider).
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.RightToLeftLayout">
            <summary>
            Defines the direction of the tab control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.HotTrack">
            <summary>
            Turns the HotTrack on/off. This defines whether the pointer is tracked when hovered over the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.Alignment">
            <summary>
            Defines the control alignment.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.Appearance">
            <summary>
            Appearance value of the control. The painting is actually customized internally so this value is not used.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.DisplayRectangle">
            <summary>
            The rectangle attribute of the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.ActiveIndex">
            <summary>
            The active index tab of the tab control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.ActiveTab">
            <summary>
            Returns the active tab page.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.HideTab(System.Windows.Forms.TabPage)">
            <summary>
            Removes tab from tab pages list.
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.HideTab(System.Int32)">
            <summary>
            Removes tab from tab pages list (by index).
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.HideTab(System.String)">
            <summary>
            Removes tab from tab pages list (by key).
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.ShowTab(System.Windows.Forms.TabPage)">
            <summary>
            Shows tab (by retrieving a hidden tab and adding it to the main tabs list).
            </summary>
            <param name="page"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.ShowTab(System.Int32)">
            <summary>
            Shows tab by retrieving it to the main tabs list (by index).
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.ShowTab(System.String)">
            <summary>
            Shows tab (by key).
            </summary>
            <param name="key"></param>
        </member>
        <member name="E:Geosoft.GX.Controls.TabControlCustom.HScroll">
            <summary>
            Gets the horizontal scroll handler.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.TabControlCustom.TabImageClick">
            <summary>
            Gets the even handler for clicking on a tab image.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.TabControlCustom.TabClosing">
            <summary>
            Gets event handler when tab is closing.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the FontChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnResize(System.EventArgs)">
            <summary>
            Raises the Resize event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnParentBackColorChanged(System.EventArgs)">
            <summary>
            Raises the BackColorChanged event when the BackColor property value of the control's container changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnParentBackgroundImageChanged(System.EventArgs)">
            <summary>
            Raises the BackgroundImageChanged event when the property value of the control's container changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the ParentChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnSelecting(System.Windows.Forms.TabControlCancelEventArgs)">
            <summary>
            Raises the Selecting event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnMove(System.EventArgs)">
            <summary>
            Raises the Move event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlAdded event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the ControlRemoved event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.ProcessMnemonic(System.Char)">
            <summary>
            Processes a mnemonic character.
            </summary>
            <param name="charCode"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseClick event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnTabImageClick(System.Windows.Forms.TabControlEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnTabClosing(System.Windows.Forms.TabControlCancelEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnHScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Raises the HScroll event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the OnMouseMove(MouseEventArgs) event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.PaintTransparentBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
             <summary>
            
             </summary>
             <param name="graphics"></param>
             <param name="clipRect"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.GetPageBounds(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.GetTabRow(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.GetTabPosition(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.IsFirstTabInRow(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.GetTabCloserRect(System.Int32)">
             <summary>
            
             </summary>
             <param name="index"></param>
             <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.GetRightDropShadowRect(System.Int32)">
            <summary>
            Gets the drop shadow rectangle present to the right of the provided index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TabControlCustom.GetLeftDropShadowRect(System.Int32)">
            <summary>
            Gets the drop shadow rectangle present to the left of the provided index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.MousePosition">
             <summary>
            
             </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TabControlCustom.HeaderFont">
            <summary>
            Customizable font for Tab headers (text above pages).
            Kept separate from Control.Font to allow for non-transient font assignment to controls.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.TabStyle">
            <summary>
            Tab styles
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.TabStyle.None">
            <summary>
            No style defined
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.TabStyle.Rounded">
            <summary>
            Rounded style
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.TabStyle.Seequent">
            <summary>
            Seequent style defined
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.TabStyleProvider">
            <summary>
            Tab style providers and definitions
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TabStyleProvider.#ctor(Geosoft.GX.Controls.TabControlCustom)">
            <summary>
            
            </summary>
            <param name="tabControl"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.TabStyleProvider.Radius">
            <summary>
            Determines the radius of the arc located at the corners of tabs. A larger radius yields lesser curves.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.ToolStripTrackBar">
            <summary>
            Adds TrackBar to ToolStrip
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.ToolStripTrackBar.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.ToolStripTrackBar.Scroll">
            <summary>
            Fires when track bar changes positions
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ToolStripTrackBar.Minimum">
            <summary>
            Set TrackBar minimum value
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ToolStripTrackBar.Maximum">
            <summary>
            Set TrackBar maximum value
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.ToolStripTrackBar.Value">
            <summary>
            Set TrackBar value
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.TrackBar">
            <summary>
            Simple trackbar that emulates the trackbar found in OSX (Most code from http://www.codeproject.com/KB/miscctrl/TrackBar.aspx)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TrackBar.Minimum">
            <summary>
            Set Trackerbar minimum value
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TrackBar.Maximum">
            <summary>
            Set TrackerBar maximum value
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TrackBar.Value">
            <summary>
            Set or get the Tracker position
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TrackBar.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.TrackBar.Scroll">
            <summary>
            Fires when track bar changes positions
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.TrackBar.PropertyChanged">
            <summary>
            For use with ReactiveUI views, as it implements INotifyPropertyChanged
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar.OnScroll">
            <summary>Raises the <see cref="E:Geosoft.GX.Controls.TrackBar.Scroll"/> event.</summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.TrackBar"/> class.</para>
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar.OnSizeChanged(System.EventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged"/> event.</summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.</summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar.DrawControl(System.Drawing.Graphics)">
            <summary>
            Draw the Control
            </summary>
            <param name="g">Graphics object to draw to</param>
        </member>
        <member name="M:Geosoft.GX.Controls.TrackBar._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.FontComboBox">
            <summary>
            <see cref="T:System.Windows.Forms.ComboBox"/> type control which allows you to pick from Geosoft and TrueType fonts
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FontComboBox.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FontComboBox.Init(System.Boolean,System.Boolean)">
            <summary>
            Initialize the control with the list of fonts on the system.
            </summary>
            <remarks>
            This should generally be called from within a <see cref="M:Geosoft.GX.Controls.BaseForm.InitializeForm"/> override
            in the parent form.
            </remarks>
            <param name="bShowSample">If true will display a sample of the Font on the right (TrueType fonts only)</param>
            <param name="bSkipGFN">If true will show TrueType fonts only</param>
        </member>
        <member name="M:Geosoft.GX.Controls.FontComboBox.FontName(System.Boolean@)">
            <summary>
            Get the currently selected font
            </summary>
            <remarks>
            This should generally be called from within a <see cref="M:Geosoft.GX.Controls.BaseForm.InitializeForm"/> override
            in the parent form.
            </remarks>
            <param name="isGeosoftFont">returns true if a GFN font is selected</param>
        </member>
        <member name="T:Geosoft.GX.Controls.TripleChoiceRadioControl">
            <summary>
            Horizontal triple choice radio button that helps with designing forms for layout growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TripleChoiceRadioControl.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TripleChoiceRadioControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current radio button passes valiation tests.
            </summary>
            <param name="strError">The error message returned if the control does not validate.</param>
            <returns>Always true except if EnumValues were not configured.</returns>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.EnumValue1">
            <summary>
            Gets or sets the numeric value associated with Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.EnumValue2">
            <summary>
            Gets or sets the numeric value associated with Radio Button 2.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.EnumValue3">
            <summary>
            Gets or sets the numeric value associated with Radio Button 3.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.DefaultValue">
            <summary>
            Gets or sets the default value of this control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.EqualColumnWidths">
            <summary>
            Make the columns of same width for better alignment with other controls.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.Text1">
            <summary>
            Gets or sets the text next to Radio Button 1.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.Text2">
            <summary>
            Gets or sets the text next to Radio Button 2.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.Text3">
            <summary>
            Gets or sets the text next to Radio Button 3.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.RadioButton1">
            <summary>
            Gets the Radio Button 1 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.RadioButton2">
            <summary>
            Gets the Radio Button 2 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.RadioButton3">
            <summary>
            Gets the Radio Button 3 control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.ReadOnly">
            <summary>
            Gets or sets the read-only status of this control; when set, the unchecked option is disabled to prevent changing.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TripleChoiceRadioControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TripleChoiceRadioControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.TripleChoiceRadioControl.CheckedChanged">
            <summary>
            Occurs when either radio button's Checked property is changed.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.TripleChoiceRadioControl.Click">
            <summary>
            Occurs when either radio button control is clicked.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TripleChoiceRadioControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.TripleChoiceRadioControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TripleChoiceRadioControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.TripleChoiceRadioControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse">
            <summary>
            Adds some infrastructure to a TriStateTreeView around controlling when events fire
            and querying the scroll bar state.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.SuppressBeforeExpandAndBeforeCollapseEvents">
            <summary>
            Whether to allow the BeforeExpand and BeforeCollapse events to fire.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeExpand event, unless it has been turned off.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the BeforeCollapse event, unless it has been turned off.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.GetScrollPosition">
            <summary>
            Gets the current scroll positions for the control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.SetScrollPosition(System.Drawing.Point)">
            <summary>
            Sets the current scroll positions for the control.
            </summary>
            <param name="scrollPosition"></param>
        </member>
        <member name="P:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.SuppressInvalidateEvent">
            <summary>
            Whether to suppress the Invalidate event.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.TriStateTreeViewWithAlteredExpandCollapse.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            Raises the Invalidated event, unless it has been turned off.
            </summary>
            <param name="e">The event data.</param>
        </member>
        <member name="T:Geosoft.GX.Controls.Validator">
            <summary>
            A class that provides various data validation methods.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.Validator.IsChannelNameValid(System.String)">
            <summary>
            Determines whether the channel name specified is valid
            </summary>
            <param name="channelName">Name of the channel.</param>
            <returns>
            	<c>true</c> if the channel name specified is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Geosoft.GX.Controls.DBConnectionUtility">
            <summary>
            DBConnectionUtility
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DBConnectionUtility.GetSchemaViaODBCConnection(System.String,System.String,System.String[])">
            <summary>
            GetSchemaViaODBCConnection
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.DBConnectionUtility.GetSchemaViaOLEDBConnection(System.String,System.Guid,System.Object[])">
            <summary>
            GetSchemaViaOLEDBConnection
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.WizardPage">
            <summary>
            A wizard page which can be added
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.WizardPage.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.WizardPage"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.Margin">
            <summary>Gets or sets the space between controls.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between controls.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.MaximumSize">
            <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.MinimumSize">
            <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.BorderStyle">
            <summary>Indicates the border style for the control.</summary>
            <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle"></see> values. The default is BorderStyle.None.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.BorderStyle"></see> value.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Geosoft.GX.Controls.WizardPage._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.Title">
            <summary>
            A single line title. Will be displayed in bold in the top panel of the <see cref="T:Geosoft.GX.Controls.BaseWizard"/> derived parent.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.WizardPage.SubTitle">
            <summary>
            The more descriptive sub-title (1 or more lines). Will be displayed underneath the title in the top panel of the <see cref="T:Geosoft.GX.Controls.BaseWizard"/> derived parent.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.WizardPage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.WizardPage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.WizardPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.IDesignContainerControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.EditIntControl">
            <summary>
            <see cref="T:System.Windows.Forms.TextBox"/> type control which remembers previous state using GX parameters and provides
            Geosoft integer validation and conversion on GX dialogs.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.DefaultValue">
            <summary>
            Gets or sets the default value for the edit control from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.Value">
            <summary>
            Gets or sets the value for the edit control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.MinimumValue">
            <summary>
            Gets or sets the minimum value for the edit control from the design view. Leave blank for no set minimum.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.MaximumValue">
            <summary>
            Gets or sets the maximum value for the edit control from the design view. Leave blank for no set maximum.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.MinimumValueInclusive">
            <summary>
            Gets or sets whether the minimum value is inclusive and should be allowed.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.MaximumValueInclusive">
            <summary>
            Gets or sets whether the maximum value is inclusive and should be allowed.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditIntControl.Text">
            <summary>
            Override Text property to use iGetValue() and SetValue().
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.SetValue(System.Int32)">
            <summary>
            Set the value in the edit window, using an integer as input.
            </summary>
            <param name="iValue">If the value is GeoEngine.Core.GXNet.Constant.iDUMMY, the field is left blank, otherwise
            it is converted to a string for display.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.iGetValue">
            <summary>
            Get the value from the edit box, interpreted as an integer.
            </summary>
            <remarks>Validation by range is not performed. Use the Edit.bIsValid() function.</remarks>
            <returns>The integer value of the displayed text. If the value cannot be interpreted as an integer,
            or if the field is empty, then the returned value is GeoEngine.Core.GXNet.Constant.iDUMMY.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current edit text box item passes valiation tests.
            </summary>
            <param name="strError">Error string return describing failure (if any)</param>
            <returns><c>true</c> if validation succeeds</returns>
            <remarks>
            The following validation is performed:
            <list type="bullet">
            <item><description>If the item is required, it must be defined.</description></item>
            <item><description>If the item is an integer or real value, it must be interpretable as such.</description></item>
            <item><description>If a numeric range is defined, the value must be within the range.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.CurrentValue">
            <summary>
            Get the current INT value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.SetCurrentValue(System.Int32)">
            <summary>
            Set the current INT value within the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.EditIntControl.ValueChanged">
            <summary>
            Occurs when the edit real control value changes.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditIntControl.OnValueChanged(System.Object,System.EventArgs)">
            <summary>
            text change event
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="T:Geosoft.GX.Controls.EditRealControl">
            <summary>
            <see cref="T:System.Windows.Forms.TextBox"/> type control which remembers previous state using GX parameters and provides
            Geosoft floating point validation and conversion on GX dialogs.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.DefaultValue">
            <summary>
            Gets or sets the default value for the edit control from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.Value">
            <summary>
            Gets the value for the edit control.
            </summary>
            <remarks>
            <para>
            <see cref="M:Geosoft.GX.Controls.EditRealControl.SetValue(System.Double)"/> at the call-site to set a new double value in 
            the control</para>
            </remarks>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.MinimumValue">
            <summary>
            Gets or sets the minimum value for the edit control from the design view. Leave blank for no set minimum.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.MaximumValue">
            <summary>
            Gets or sets the maximum value for the edit control from the design view. Leave blank for no set maximum.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.DecimalPlaces">
            <summary>
            If this is set to a value equal or greater than 0 the displayed text will be rounded to this number of decimals. The internal value will still be the
            real set value, this just affects the display of the values.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.MinimumValueInclusive">
            <summary>
            Gets or sets whether the minimum value is inclusive and should be allowed.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.MaximumValueInclusive">
            <summary>
            Gets or sets whether the maximum value is inclusive and should be allowed.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditRealControl.Text">
            <summary>
            Override Text property to use dGetValue() and SetValue().
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.SetValue(System.Double)">
            <summary>
            Set the value in the edit window, using a double value as input.
            </summary>
            <param name="dValue">If the value is GeoEngine.Core.GXNet.Constant.rDUMMY, the field is left blank, otherwise
            it is converted to a string for display.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.FormatDouble(System.Double)">
            <summary>
            Utility method that trims labels like "1.0000000000003", which occur
            because of numeric precision issues. Look for at least
            9 zeroes preceding a final value.
            </summary>
            <param name="dValue">Value to turn to string.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.dGetValue">
            <summary>
            Get the value from the edit box, interpreted as a real value.
            </summary>
            <remarks>Validation by range is not performed. Use the Edit.bIsValid() function.</remarks>
            <returns>The real value of the displayed text. If the value cannot be interpreted as a real value,
            or if the field is empty, then the returned value is GeoEngine.Core.GXNet.Constant.rDUMMY.</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current edit text box item passes valiation tests.
            </summary>
            <param name="strError">Error string return describing failure (if any)</param>
            <returns><c>true</c> if validation succeeds</returns>
            <remarks>
            The following validation is performed:
            <list type="bullet">
            <item><description>If the item is required, it must be defined.</description></item>
            <item><description>If the item is an integer or real value, it must be interpretable as such.</description></item>
            <item><description>If a numeric range is defined, the value must be within the range.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.CurrentValue">
            <summary>
            Get the current REAL value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.SetCurrentValue(System.Double)">
            <summary>
            Set the current REAL value within the control.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.EditRealControl.ValueChanged">
            <summary>
            Occurs when the edit real control value changes.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditRealControl.OnValueChanged(System.Object,System.EventArgs)">
            <summary>
            text change event
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="T:Geosoft.GX.Controls.EditStringControl">
            <summary>
            <see cref="T:System.Windows.Forms.TextBox"/> type control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.DefaultValue">
            <summary>
            Gets or sets the default value for the edit control from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.Lines">
            <summary>
            Gets or sets the lines of text in a text box control
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.Multiline">
            <summary>
             Gets or sets a value indicating whether this is a multiline System.Windows.Forms.TextBox control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.UsePasswordChars">
            <summary>
            Gets or sets whether or not this control uses password characters.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.MaximumLength">
            <summary>
            Gets or sets the maximum number of characters allowable in the textbox.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.Mask">
            <summary>
            Gets or sets the input mask to use at run time. This is a regular expression, parsed using Regex.
            </summary>
            <returns>
            A <see cref="T:System.String"/> representing the current mask. The default value is the empty
            string which allows any input. If a MaskValidationError is defined, it will be printed
            for strings not matching the mask, otherwise the regular expression will be used (which can be ugly).
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.MaskValidationError">
            <summary>
            Gets or sets the mask validation message to use at run time.
            </summary>
            <returns>
            A <see cref="T:System.String"/> representing the mask validation message. If a MaskValidationError is defined, it will be printed
            for strings not matching the mask, otherwise the regular expression will be shown to the user (which can be ugly).
            </returns>
        </member>
        <member name="P:Geosoft.GX.Controls.EditStringControl.Text">
            <summary>
            Override Text property to use strGetValue() and SetValue().
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.SetValue(System.String)">
            <summary>
            Set the value in the edit window, using a string as input.
            </summary>
            <param name="strValue">The value to put in the edit window.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.strGetValue">
            <summary>
            Get the value from the edit box as a string.
            </summary>
            <remarks>Validation is not performed. Use the Edit.bIsValid() function.</remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current edit text box item passes valiation tests.
            </summary>
            <remarks>The following validation is performed:
            <list type="bullet">
            <item><description>If the item is required, it must be defined.</description></item></list>
            </remarks>
            <param name="strError">The error message returned if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.EditStringControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.FolderEditControl">
            <summary>
            Reusable Folder Browsing Edit control for use in Geosoft GX.Net code.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FolderEditControl.Value">
            <summary>
            Gets or sets the value for the directory edit control's path.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FolderEditControl.BrowseQuery">
            <summary>
            Gets or sets the title to be dispalayed above the folder tree.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FolderEditControl.Required">
            <summary>
            If true, then the control may not be left blank.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FolderEditControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.FolderEditControl.Required"/> property changes
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FolderEditControl.TextBoxLeave">
            <summary>
            Fired when control leaves the text box.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.bIsValid(System.String@)">
            <summary>
            Check to see if the current folder path passes validation tests.
            </summary>
            <remarks></remarks>
            <param name="strError">The returned error string if the control does not validate.</param>
            <returns>true if validation succeeds</returns>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.CurrentValue">
            <summary>
            Get the current STRING value within the control.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.SetCurrentValue(System.String)">
            <summary>
            Set the current STRING value within the control.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FolderEditControl.UseProjectDirectoryAsDefault">
            <summary>
            Use project directory as default
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.FolderEditControl.OnTextBoxLeave(System.Object,System.EventArgs)">
            <summary>
            Occurs when control leaves the text box portion of the control
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.FolderEditControl.TextChanged">
            <summary>
            Occurs when the TextBox's text property changes.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.FolderEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.IRequiredControl">
            <summary>
            Interface implemented by controls which can indicate to their parents that they are require user input.
            </summary>
            <remarks>Used by <see cref="T:Geosoft.GX.Controls.LabelControl"/> to indicate required status on the parent Form. The indicator is in the form of a star icon to the left of the label.</remarks>
            <exclude/>
        </member>
        <member name="P:Geosoft.GX.Controls.IRequiredControl.Required">
            <summary>
            If true, then the field requires user input.
            </summary>
        </member>
        <member name="E:Geosoft.GX.Controls.IRequiredControl.RequiredChanged">
            <summary>
            Fired when the <see cref="P:Geosoft.GX.Controls.IRequiredControl.Required"/> property changes
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.LabelControl">
            <summary>
            Use to indicate required status of a "buddy" control on the parent Form. The indicator is in the form of a star icon to the left of the label.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.LabelControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LabelControl.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control is automatically resized
            to display its entire contents.
            </summary>
            <value>
            true if the control adjusts its width to closely fit its contents; otherwise,
            false. The default is true.
            </value>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.OnEnabledChanged(System.EventArgs)">
            <summary>
            Handles changes to the <see cref="P:System.Windows.Forms.Control.Enabled"/> property.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.OnVisibleChanged(System.EventArgs)">
            <summary>
            Handles changes to the <see cref="P:System.Windows.Forms.Control.Visible"/> property.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Sets the specified bounds of the label.</summary>
            <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top"></see> property value of the control. </param>
            <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified"></see> values. For any parameter not specified, the current value will be used. </param>
            <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width"></see> property value of the control. </param>
            <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height"></see> property value of the control. </param>
            <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left"></see> property value of the control. </param>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.OnCreateControl">
            <summary>Raises the <see cref="M:System.Windows.Forms.Control.CreateControl"></see> event.</summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LabelControl.GrowParentToFitEnabled">
            <summary>
            Growing the parent is enabled if position or size of this control changes (used in translation)
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LabelControl.BuddyControl">
            <summary>
            Set the control that this label is for.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LabelControl.ForceRequired">
            <summary>
            Set the control that this label is for.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.LabelControl.GrowthAnchorFamilyBehaviour">
            <summary>
            Defines the behaviour(s) of a control when any of its siblings with this
            property defined is shifted or moved due to translation string growth.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.LabelControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.NativeIntegration">
            <summary>
            Exported definitions for native-method integration.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NativeIntegration.IsKeyDownMessage(System.Windows.Forms.Message)">
            <summary>
            Checks whether the message is in (WM_KEYDOWN | WM_SYSKEYDOWN | WM_CHAR).
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.NativeIntegration.IsKeyUpMessage(System.Windows.Forms.Message)">
            <summary>
            Checks whether the message is in (WM_KEYUP | WM_SYSKEYUP).
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.NativeMethods.SystemMetric">
             <summary>
             Flags used with the Windows API (User32.dll):GetSystemMetrics(SystemMetric smIndex)
            
             This Enum and declaration signature was written by Gabriel T. Sharp
             ai_productions@verizon.net or osirisgothra@hotmail.com
             Obtained on pinvoke.net, please contribute your code to support the wiki!
             </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXSCREEN">
            <summary>
             Width of the screen of the primary display monitor, in pixels. This is the same values obtained by calling GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, HORZRES).
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYSCREEN">
            <summary>
            Height of the screen of the primary display monitor, in pixels. This is the same values obtained by calling GetDeviceCaps as follows: GetDeviceCaps( hdcPrimaryMonitor, VERTRES).
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYVSCROLL">
            <summary>
            Height of the arrow bitmap on a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXVSCROLL">
            <summary>
            Width of a vertical scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYCAPTION">
            <summary>
            Height of a caption area, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXBORDER">
            <summary>
            Width of a window border, in pixels. This is equivalent to the SM_CXEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYBORDER">
            <summary>
            Height of a window border, in pixels. This is equivalent to the SM_CYEDGE value for windows with the 3-D look.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the height of the horizontal border and SM_CYFIXEDFRAME is the width of the vertical border.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYDLGFRAME">
            <summary>
            Thickness of the frame around the perimeter of a window that has a caption but is not sizable, in pixels. SM_CXFIXEDFRAME is the height of the horizontal border and SM_CYFIXEDFRAME is the width of the vertical border.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYVTHUMB">
            <summary>
            Height of the thumb box in a vertical scroll bar, in pixels
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXHTHUMB">
            <summary>
            Width of the thumb box in a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXICON">
            <summary>
            Default width of an icon, in pixels. The LoadIcon function can load only icons with the dimensions specified by SM_CXICON and SM_CYICON
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYICON">
            <summary>
            Default height of an icon, in pixels. The LoadIcon function can load only icons with the dimensions SM_CXICON and SM_CYICON.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXCURSOR">
            <summary>
            Width of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYCURSOR">
            <summary>
            Height of a cursor, in pixels. The system cannot create cursors of other sizes.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMENU">
            <summary>
            Height of a single-line menu bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXFULLSCREEN">
            <summary>
            Width of the client area for a full-screen window on the primary display monitor, in pixels. To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars, call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYFULLSCREEN">
            <summary>
            Height of the client area for a full-screen window on the primary display monitor, in pixels. To get the coordinates of the portion of the screen not obscured by the system taskbar or by application desktop toolbars, call the SystemParametersInfo function with the SPI_GETWORKAREA value.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYKANJIWINDOW">
            <summary>
            For double byte character set versions of the system, this is the height of the Kanji window at the bottom of the screen, in pixels
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_MOUSEWHEELPRESENT">
            <summary>
            Nonzero if a mouse with a wheel is installed; zero otherwise
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYHSCROLL">
            <summary>
            Height of a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXHSCROLL">
            <summary>
            Width of the arrow bitmap on a horizontal scroll bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_DEBUG">
            <summary>
            Nonzero if the debug version of User.exe is installed; zero otherwise.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_SWAPBUTTON">
            <summary>
            Nonzero if the left and right mouse buttons are reversed; zero otherwise.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_RESERVED1">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_RESERVED2">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_RESERVED3">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_RESERVED4">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMIN">
            <summary>
            Minimum width of a window, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMIN">
            <summary>
            Minimum height of a window, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXSIZE">
            <summary>
            Width of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYSIZE">
            <summary>
            Height of a button in a window's caption or title bar, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window that can be resized, in pixels. SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYFRAME">
            <summary>
            Thickness of the sizing border around the perimeter of a window that can be resized, in pixels. SM_CXSIZEFRAME is the width of the horizontal border, and SM_CYSIZEFRAME is the height of the vertical border.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMINTRACK">
            <summary>
            Minimum tracking width of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMINTRACK">
            <summary>
            Minimum tracking height of a window, in pixels. The user cannot drag the window frame to a size smaller than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXDOUBLECLK">
            <summary>
            Width of the rectangle around the location of a first click in a double-click sequence, in pixels. The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider the two clicks a double-click
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYDOUBLECLK">
            <summary>
            Height of the rectangle around the location of a first click in a double-click sequence, in pixels. The second click must occur within the rectangle defined by SM_CXDOUBLECLK and SM_CYDOUBLECLK for the system to consider the two clicks a double-click. (The two clicks must also occur within a specified time.)
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXICONSPACING">
            <summary>
            Width of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CXICON
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYICONSPACING">
            <summary>
            Height of a grid cell for items in large icon view, in pixels. Each item fits into a rectangle of size SM_CXICONSPACING by SM_CYICONSPACING when arranged. This value is always greater than or equal to SM_CYICON.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_MENUDROPALIGNMENT">
            <summary>
            Nonzero if drop-down menus are right-aligned with the corresponding menu-bar item; zero if the menus are left-aligned.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_PENWINDOWS">
            <summary>
            Nonzero if the Microsoft Windows for Pen computing extensions are installed; zero otherwise.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_DBCSENABLED">
            <summary>
            Nonzero if User32.dll supports DBCS; zero otherwise. (WinMe/95/98): Unicode
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CMOUSEBUTTONS">
            <summary>
            Number of buttons on mouse, or zero if no mouse is installed.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYFIXEDFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYSIZEFRAME">
            <summary>
            Identical Values Changed After Windows NT 4.0
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_SECURE">
            <summary>
            Nonzero if security is present; zero otherwise.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXEDGE">
            <summary>
            Width of a 3-D border, in pixels. This is the 3-D counterpart of SM_CXBORDER
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYEDGE">
            <summary>
            Height of a 3-D border, in pixels. This is the 3-D counterpart of SM_CYBORDER
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMINSPACING">
            <summary>
            Width of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. This value is always greater than or equal to SM_CXMINIMIZED.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMINSPACING">
            <summary>
            Height of a grid cell for a minimized window, in pixels. Each minimized window fits into a rectangle this size when arranged. This value is always greater than or equal to SM_CYMINIMIZED.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXSMICON">
            <summary>
            Recommended width of a small icon, in pixels. Small icons typically appear in window captions and in small icon view
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYSMICON">
            <summary>
            Recommended height of a small icon, in pixels. Small icons typically appear in window captions and in small icon view.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYSMCAPTION">
            <summary>
            Height of a small caption, in pixels
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXSMSIZE">
            <summary>
            Width of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYSMSIZE">
            <summary>
            Height of small caption buttons, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMENUSIZE">
            <summary>
            Width of menu bar buttons, such as the child window close button used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMENUSIZE">
            <summary>
            Height of menu bar buttons, such as the child window close button used in the multiple document interface, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_ARRANGE">
            <summary>
            Flags specifying how the system arranged minimized windows
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMINIMIZED">
            <summary>
            Width of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMINIMIZED">
            <summary>
            Height of a minimized window, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMAXTRACK">
            <summary>
            Default maximum width of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMAXTRACK">
            <summary>
            Default maximum height of a window that has a caption and sizing borders, in pixels. This metric refers to the entire desktop. The user cannot drag the window frame to a size larger than these dimensions. A window can override this value by processing the WM_GETMINMAXINFO message.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMAXIMIZED">
            <summary>
            Default width, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMAXIMIZED">
            <summary>
            Default height, in pixels, of a maximized top-level window on the primary display monitor.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_NETWORK">
            <summary>
            Least significant bit is set if a network is present; otherwise, it is cleared. The other bits are reserved for future use
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CLEANBOOT">
            <summary>
            Value that specifies how the system was started: 0-normal, 1-failsafe, 2-failsafe /w net
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXDRAG">
            <summary>
            Width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYDRAG">
            <summary>
            Height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins. This value is in pixels. It allows the user to click and release the mouse button easily without unintentionally starting a drag operation.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_SHOWSOUNDS">
            <summary>
            Nonzero if the user requires an application to present information visually in situations where it would otherwise present the information only in audible form; zero otherwise.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXMENUCHECK">
            <summary>
            Width of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYMENUCHECK">
            <summary>
            Height of the default menu check-mark bitmap, in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_SLOWMACHINE">
            <summary>
            Nonzero if the computer has a low-end (slow) processor; zero otherwise
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_MIDEASTENABLED">
            <summary>
            Nonzero if the system is enabled for Hebrew and Arabic languages, zero if not.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_MOUSEPRESENT">
            <summary>
            Nonzero if a mouse is installed; zero otherwise. This value is rarely zero, because of support for virtual mice and because some systems detect the presence of the port instead of the presence of a mouse.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_XVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the top of the virtual screen
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_YVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Coordinate of the left of the virtual screen
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Width of the virtual screen
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYVIRTUALSCREEN">
            <summary>
            Windows 2000 (v5.0+) Height of the virtual screen
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CMONITORS">
            <summary>
            Number of display monitors on the desktop
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_SAMEDISPLAYFORMAT">
            <summary>
            Windows XP (v5.1+) Nonzero if all the display monitors have the same color format, zero otherwise. Note that two displays can have the same bit depth, but different color formats. For example, the red, green, and blue pixels can be encoded with different numbers of bits, or those bits can be located in different places in a pixel's color value.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_IMMENABLED">
            <summary>
            Windows XP (v5.1+) Nonzero if Input Method Manager/Input Method Editor features are enabled; zero otherwise
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CXFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Width of the left and right edges of the focus rectangle drawn by DrawFocusRect. This value is in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CYFOCUSBORDER">
            <summary>
            Windows XP (v5.1+) Height of the top and bottom edges of the focus rectangle drawn by DrawFocusRect. This value is in pixels.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_TABLETPC">
            <summary>
            Nonzero if the current operating system is the Windows XP Tablet PC edition, zero if not.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_MEDIACENTER">
            <summary>
            Nonzero if the current operating system is the Windows XP, Media Center Edition, zero if not.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CMETRICS_OTHER">
            <summary>
            Metrics Other
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CMETRICS_2000">
            <summary>
            Metrics Windows 2000
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_CMETRICS_NT">
            <summary>
            Metrics Windows NT
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_REMOTESESSION">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal Services environment. If the calling process is associated with a Terminal Services client session, the return value is nonzero. If the calling process is associated with the Terminal Server console session, the return value is zero. The console session is not necessarily the physical console - see WTSGetActiveConsoleSessionId for more information.
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_SHUTTINGDOWN">
            <summary>
            Windows XP (v5.1+) Nonzero if the current session is shutting down; zero otherwise
            </summary>
        </member>
        <member name="F:Geosoft.GX.Controls.NativeMethods.SystemMetric.SM_REMOTECONTROL">
            <summary>
            Windows XP (v5.1+) This system metric is used in a Terminal Services environment. Its value is nonzero if the current session is remotely controlled; zero otherwise
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.PanelControl">
            <summary>
            Implements a convenient panel for placement on <see cref="T:Geosoft.GX.Controls.BaseForm"/> derived forms.
            </summary>
            <remarks>
            Normally this control acts as a container for the OK and Cancel <see cref="T:Geosoft.GX.Controls.ButtonControl"/> controls.
            One can also place a <see cref="T:Geosoft.GX.Controls.AdvancedButtonControl"/> this control onto it and position it in the center of the <see cref="T:Geosoft.GX.Controls.BaseForm"/>
            and the button will cause the area below the panel to be collapsed when the form is loaded. The button can then be used to
            automatically expand/collapse the form to reveal more advanced features or hide them.
            </remarks>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.#ctor">
            <summary>
            	<para>Initializes an instance of the <see cref="T:Geosoft.GX.Controls.PanelControl"/> class.</para>
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.Margin">
            <summary>Gets or sets the space between controls.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the space between controls.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.Padding">
            <summary>Gets or sets padding within the control.</summary>
            <returns>A <see cref="T:System.Windows.Forms.Padding"></see> representing the control's internal spacing characteristics.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.BorderStyle">
            <summary>Indicates the border style for the control.</summary>
            <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle"></see> values. The default is BorderStyle.None.</returns>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified value when setting this property is not a valid <see cref="T:System.Windows.Forms.BorderStyle"></see> value.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.ClearMaximumSize">
            <summary>
            Returns the <see cref="P:Geosoft.GX.Controls.PanelControl.MaximumSize"/> to defaults from code
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.ClearMinimumSize">
            <summary>
            Returns the <see cref="P:Geosoft.GX.Controls.PanelControl.MinimumSize"/> to defaults from code
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.RealMaximumSize">
            <summary>
            Changes the <see cref="P:Geosoft.GX.Controls.PanelControl.MaximumSize"/> property. That property is read-only to prevent accidental overrides in designers.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.RealMinimumSize">
            <summary>
            Changes the <see cref="P:Geosoft.GX.Controls.PanelControl.MinimumSize"/> property. That property is read-only to prevent accidental overrides in designers.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.MaximumSize">
            <summary>Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.MinimumSize">
            <summary>Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)"></see> can specify.</summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"></see> representing the width and height of a rectangle.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Geosoft.GX.Controls.PanelControl.BackColor">
            <summary>Gets or sets the background color for the control.</summary>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor"></see> property.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override to add the size grip when on a resizable form
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Catch some windows messages
            </summary>
            <param name="m"></param>
        </member>
        <member name="F:Geosoft.GX.Controls.PanelControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.PanelControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.PatternEditControl">
            <summary>
            Geosoft pattern edit control which remembers previous state using GX parameters
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.PatternEditControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.PatternEditControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.PatternEditControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PatternEditControl.SYSGroupName">
            <summary>
            Patterns uses a single group name because a pattern consists of a number of values
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PatternEditControl.PatternColor">
            <summary>
            Gets or sets the default value for the pattern colour from the design view.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.PatternEditControl.PatternBackgroundColor">
            <summary>
            Gets or sets the default value for the pattern background colour from the design view.
            </summary>
        </member>
        <member name="M:Geosoft.GX.Controls.PatternEditControl.SetPattern(System.Int32,System.Double,System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>
            Set the pattern of the edit window.
            </summary>
            <param name="iPat">The pattern number, >= 0</param>
            <param name="dSize">The pattern tile size in mm</param>
            <param name="iThick">The pattern line thick in percent of the tile size 0-100</param>
            <param name="dDensity">The pattern tile spacing. A value of 1 means tiles are laid with no overlap. A value of 2 means they overlap each other.</param>
            <param name="iColor">The pattern line colour.</param>
            <param name="iBackColor">The pattern background colour.</param>
        </member>
        <member name="M:Geosoft.GX.Controls.PatternEditControl.GetPattern(System.Int32@,System.Double@,System.Int32@,System.Double@,System.Int32@,System.Int32@)">
            <summary>
            Set the pattern of the edit window.
            </summary>
            <param name="iPat">The pattern number, >= 0</param>
            <param name="dSize">The pattern tile size in mm</param>
            <param name="iThick">The pattern line thick in percent of the tile size 0-100</param>
            <param name="dDensity">The pattern tile spacing. A value of 1 means tiles are laid with no overlap. A value of 2 means they overlap each other.</param>
            <param name="iColor">The pattern line colour.</param>
            <param name="iBackColor">The pattern background colour.</param>
        </member>
        <member name="P:Geosoft.GX.Controls.PatternEditControl.SnapControl">
            <summary>
            Internal control to use in designers for snapping guidelines.
            </summary>
        </member>
        <member name="T:Geosoft.GX.Controls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.autohide">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.BrowseFolders">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.BrowserBack">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.BrowserForward">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.BrowserUp">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.BrowserView">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.digitize">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.dock">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.downcenter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.gear">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.geofont">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.info">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.information">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.left">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.max">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.min">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.move_left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.move_right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.moveall_left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.moveall_right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.pencil">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.refresh">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.required">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.required_disabled">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.right">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.shadow_cursor">
            <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.table">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.trackbutton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.trackleft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.trackmiddle">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.trackright">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.truefont">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.upcenter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Geosoft.GX.Controls.Properties.Resources.xytable">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="T:Geosoft.GX.GXLog">
            <summary>
            Use this for GX logging
            </summary>
        </member>
        <member name="P:Geosoft.GX.GXLog.Logger">
            <summary>
            The current logger (can be null)
            </summary>
        </member>
        <member name="M:Geosoft.GX.GXLog.CreateLoggerUI">
            <summary>
            Create a basic logging UI
            </summary>
        </member>
        <member name="M:Geosoft.GX.GXLog.Log(System.String,Geosoft.GX.LogLevel)">
            <summary>
            Log a message
            </summary>
            <param name="message">Message</param>
            <param name="level">Level</param>
        </member>
        <member name="T:Geosoft.GX.LogLevel">
            <summary>
            Used to indicate log level
            </summary>
        </member>
        <member name="F:Geosoft.GX.LogLevel.Critical">
            <summary>
            Critical
            </summary>
        </member>
        <member name="F:Geosoft.GX.LogLevel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Geosoft.GX.LogLevel.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Geosoft.GX.LogLevel.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:Geosoft.GX.LogLevel.Verbose">
            <summary>
            Verbose
            </summary>
        </member>
        <member name="F:Geosoft.GX.LogLevel.Debug">
            <summary>
            Debug
            </summary>
        </member>
        <member name="T:Geosoft.GX.IGXLogger">
            <summary>
            Interface of a logger
            </summary>
        </member>
        <member name="M:Geosoft.GX.IGXLogger.Log(Geosoft.GX.LogLevel,System.String)">
            <summary>
            Log a message
            </summary>
            <param name="level">Level</param>
            <param name="message">Message</param>
        </member>
        <member name="F:Geosoft.GX.InteractiveLogForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Geosoft.GX.InteractiveLogForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Geosoft.GX.InteractiveLogForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ReactiveUI.Validation.Extensions.GeosoftValidatableViewModelExtensions">
            <summary>
            Extensions methods associated to <see cref="T:ReactiveUI.Validation.Abstractions.IValidatableViewModel"/> instances.
            </summary>
        </member>
        <member name="M:ReactiveUI.Validation.Extensions.GeosoftValidatableViewModelExtensions.GetMinMaxValidationState(System.String,System.Double,System.Boolean,System.Double,System.Boolean)">
            <summary>
            TODO These methods needs general re-thinking on how to approach. Probably convertors so that
            we do not need strings representing doubles in View Models
            </summary>
            <param name="strvalue"></param>
            <param name="minValue"></param>
            <param name="minValueInclusive"></param>
            <param name="maxValue"></param>
            <param name="maxValueInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ReactiveUI.Validation.Extensions.GeosoftValidatableViewModelExtensions.GetMinMaxValidationState(System.Double,System.Double,System.Boolean,System.Double,System.Boolean)">
            <summary>
            TODO These methods needs general re-thinking on how to approach. Probably convertors so that
            we do not need strings representing doubles in View Models
            </summary>
            <param name="value"></param>
            <param name="minValue"></param>
            <param name="minValueInclusive"></param>
            <param name="maxValue"></param>
            <param name="maxValueInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ReactiveUI.Validation.Extensions.GeosoftValidatableViewModelExtensions.GetIntegerMinMaxValidationState(System.String,System.Int32,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Validation for integers. See note above.
            </summary>
            <param name="stringValue"></param>
            <param name="minValue"></param>
            <param name="minValueInclusive"></param>
            <param name="maxValue"></param>
            <param name="maxValueInclusive"></param>
            <returns></returns>
        </member>
        <member name="M:ReactiveUI.Validation.Extensions.GeosoftValidatableViewModelExtensions.GetFilenameState(System.String,System.Boolean)">
            <summary>
            Validation for voxel type
            </summary>
            <param name="stringValue"></param>
            <param name="isLithology"></param>
            <returns></returns>
        </member>
        <member name="M:ReactiveUI.Validation.Extensions.GeosoftValidatableViewModelExtensions.GetFilenameState(System.String,System.String,System.Boolean)">
            <summary>
            Validation for voxel type
            </summary>
            <param name="stringValue"></param>
            <param name="stringName"></param>
            <param name="isLithology"></param> 
            <returns></returns>
        </member>
        <member name="T:PopupControl.ComboBox">
            <summary>
            Represents a Windows combo box control which can be used in a popup's content control.
            </summary>
        </member>
        <member name="M:PopupControl.ComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PopupControl.ComboBox" /> class.
            </summary>
        </member>
        <member name="M:PopupControl.ComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDown" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.ComboBox.OnDropDownClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DropDownClosed" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.ComboBox._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="F:PopupControl.ComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PopupControl.ComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:PopupControl.ComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:PopupControl.Popup">
            <summary>
            Represents a pop-up window.
            </summary>
        </member>
        <member name="P:PopupControl.Popup.Content">
            <summary>
            Gets the content of the pop-up.
            </summary>
        </member>
        <member name="P:PopupControl.Popup.ShowingAnimation">
            <summary>
            Determines which animation to use while showing the pop-up window.
            </summary>
        </member>
        <member name="P:PopupControl.Popup.HidingAnimation">
            <summary>
            Determines which animation to use while hiding the pop-up window.
            </summary>
        </member>
        <member name="P:PopupControl.Popup.AnimationDuration">
            <summary>
            Determines the duration of the animation.
            </summary>
        </member>
        <member name="P:PopupControl.Popup.FocusOnOpen">
            <summary>
            Gets or sets a value indicating whether the content should receive the focus after the pop-up has been opened.
            </summary>
            <value><c>true</c> if the content should be focused after the pop-up has been opened; otherwise, <c>false</c>.</value>
            <remarks>If the FocusOnOpen property is set to <c>false</c>, then pop-up cannot use the fade effect.</remarks>
        </member>
        <member name="P:PopupControl.Popup.AcceptAlt">
            <summary>
            Gets or sets a value indicating whether presing the alt key should close the pop-up.
            </summary>
            <value><c>true</c> if presing the alt key does not close the pop-up; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:PopupControl.Popup.Resizable">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:PopupControl.Popup" /> is resizable.
            </summary>
            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:PopupControl.Popup.MinimumSize">
            <summary>
            Gets or sets a minimum size of the pop-up.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
        </member>
        <member name="P:PopupControl.Popup.MaximumSize">
            <summary>
            Gets or sets a maximum size of the pop-up.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</returns>
        </member>
        <member name="P:PopupControl.Popup.CreateParams">
            <summary>
            Gets parameters of a new window.
            </summary>
            <returns>An object of type <see cref="T:System.Windows.Forms.CreateParams" /> used when creating a new window.</returns>
        </member>
        <member name="M:PopupControl.Popup.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:PopupControl.Popup"/> class.
            </summary>
            <param name="content">The content of the pop-up.</param>
            <remarks>
            Pop-up will be disposed immediately after disposion of the content control.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="content" /> is <code>null</code>.</exception>
        </member>
        <member name="M:PopupControl.Popup.OnVisibleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripItem.VisibleChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.Popup.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog box key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</param>
            <returns>
            true if the key was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:PopupControl.Popup.UpdateRegion">
            <summary>
            Updates the pop-up region.
            </summary>
        </member>
        <member name="M:PopupControl.Popup.Show(System.Windows.Forms.Control)">
            <summary>
            Shows the pop-up window below the specified control.
            </summary>
            <param name="control">The control below which the pop-up will be shown.</param>
            <remarks>
            When there is no space below the specified control, the pop-up control is shown above it.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <code>null</code>.</exception>
        </member>
        <member name="M:PopupControl.Popup.Show(System.Windows.Forms.Control,System.Drawing.Rectangle)">
            <summary>
            Shows the pop-up window below the specified area of the specified control.
            </summary>
            <param name="control">The control used to compute screen location of specified area.</param>
            <param name="area">The area of control below which the pop-up will be shown.</param>
            <remarks>
            When there is no space below specified area, the pop-up control is shown above it.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <code>null</code>.</exception>
        </member>
        <member name="M:PopupControl.Popup.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.Popup.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opening" /> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.Popup.OnOpened(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opened" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.Popup.OnClosed(System.Windows.Forms.ToolStripDropDownClosedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Closed"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ToolStripDropDownClosedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:PopupControl.Popup.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="M:PopupControl.Popup.ProcessResizing(System.Windows.Forms.Message@)">
            <summary>
            Processes the resizing messages.
            </summary>
            <param name="m">The message.</param>
            <returns>true, if the WndProc method from the base class shouldn't be invoked.</returns>
        </member>
        <member name="M:PopupControl.Popup.PaintSizeGrip(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the sizing grip.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:PopupControl.Popup._n(System.String)">
            <summary>
            Mark string as unsafe to translate, e.g. INI params etc. (Used for reporting)
            </summary>
        </member>
        <member name="F:PopupControl.Popup.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PopupControl.Popup.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:PopupControl.Popup.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:PopupControl.PopupAnimations">
            <summary>
            Types of animation of the pop-up window.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.None">
            <summary>
            Uses no animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.LeftToRight">
            <summary>
            Animates the window from left to right. This flag can be used with roll or slide animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.RightToLeft">
            <summary>
            Animates the window from right to left. This flag can be used with roll or slide animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.TopToBottom">
            <summary>
            Animates the window from top to bottom. This flag can be used with roll or slide animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.BottomToTop">
            <summary>
            Animates the window from bottom to top. This flag can be used with roll or slide animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.Center">
            <summary>
            Makes the window appear to collapse inward if it is hiding or expand outward if the window is showing.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.Slide">
            <summary>
            Uses a slide animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.Blend">
            <summary>
            Uses a fade effect.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.Roll">
            <summary>
            Uses a roll animation.
            </summary>
        </member>
        <member name="F:PopupControl.PopupAnimations.SystemDefault">
            <summary>
            Uses a default animation.
            </summary>
        </member>
        <member name="T:PopupControl.PopupComboBox">
            <summary>
            Represents a Windows combo box control with a custom popup control attached.
            </summary>
        </member>
        <member name="M:PopupControl.PopupComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PopupControl.PopupComboBox" /> class.
            </summary>
        </member>
        <member name="P:PopupControl.PopupComboBox.DropDownControl">
            <summary>
            Gets or sets the drop down control.
            </summary>
            <value>The drop down control.</value>
        </member>
        <member name="M:PopupControl.PopupComboBox.ShowDropDown">
            <summary>
            Shows the drop down.
            </summary>
        </member>
        <member name="M:PopupControl.PopupComboBox.HideDropDown">
            <summary>
            Hides the drop down.
            </summary>
        </member>
        <member name="M:PopupControl.PopupComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="P:PopupControl.PopupComboBox.DropDownWidth">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:PopupControl.PopupComboBox.DropDownHeight">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:PopupControl.PopupComboBox.IntegralHeight">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:PopupControl.PopupComboBox.Items">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="P:PopupControl.PopupComboBox.ItemHeight">
            <summary>This property is not relevant for this class.</summary>
            <returns>This property is not relevant for this class.</returns>
        </member>
        <member name="F:PopupControl.PopupComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PopupControl.PopupComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:PopupControl.PopupComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:PopupControl.VToolTip">
             <summary>
            
             </summary>
        </member>
        <member name="M:PopupControl.VToolTip.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PopupControl.VToolTip"/> class.
            </summary>
        </member>
        <member name="F:PopupControl.VToolTip.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PopupControl.VToolTip.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:PopupControl.VToolTip.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
