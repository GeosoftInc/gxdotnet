<?xml version="1.0"?>
<doc>
    <assembly>
        "geoengine.core.gxnetx"
    </assembly>
    <members>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_GeneralInfoEvent(System.String,System.String)">
            <summary>Fire the General Information Message delegate event.</summary>
            <param name="Class">Message Class</param>
            <param name="Info">Message Information</param>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_ToolCommandEvent(System.Int32!System.Runtime.CompilerServices.IsLong,System.String)">
            <summary>Fire the Direct command delegate event.</summary>
            <param name="ID">Command ID Number</param>
            <param name="Name">Command Name</param>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_FlushEvent">
            <summary>Fire the Flush tool delegate event.</summary>
            <remarks>Used to serialize settings with META obtained from initialization.</remarks>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_ShowHelpEvent">
            <summary>Fire the Context sensitive help delegate event.</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_ChangeAreaEvent(System.Double,System.Double,System.Double,System.Double)">
            <summary>Fire the Change the visible area event.</summary>
            <param name="XMin">Minimum X</param>
            <param name="YMin">Minimum Y</param>
            <param name="XMax">Maximum X</param>
            <param name="YMax">Maximum Y</param>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_ChangeLocationEvent(System.Double,System.Double,System.Double)">
            <summary>Fire the Change the current location event.</summary>
            <param name="X">X Location</param>
            <param name="Y">Y Location</param>
            <param name="Z">Z Location</param>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Fire_ChangeProjectionEvent(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Fire the Change the current projection event.</summary>
            <param name="IPJ">Projection</param>
        </member>
        <member name="P:GeoEngine.Core.GXNetX.Windows.ToolControl.ipGPOBJ">
            <summary>Geosoft internal use only.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.GeneralInfo">
            <summary>General Information Message event.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.ToolCommand">
            <summary>Direct command event.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.ChangeArea">
            <summary>Visible area changed event.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.ChangeLocation">
            <summary>Location changed event.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.ChangeProjection">
            <summary>Projection changed event.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.ShowHelp">
            <summary>Context sensitive help event.</summary>
        </member>
        <member name="E:GeoEngine.Core.GXNetX.Windows.ToolControl.Flush">
            <summary>Flush tool settings event.</summary>
            <remarks>Any required tool settings may be set to the tool META obtained from initialization and will be serialized on this event.</remarks>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.bInitializeToolControl(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMETA,GeoEngine.Core.GXNetX.Windows.ChangeProjectionDelegate,GeoEngine.Core.GXNetX.Windows.ChangeLocationDelegate,GeoEngine.Core.GXNetX.Windows.ChangeAreaDelegate,System.String@)">
            <summary>Initialize your external Tool.</summary>
            <returns>true if successful</returns>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="META">CMETA containing tool's internal configuration data</param>
            <param name="ChIPJDel">Change Projection Delegate.</param>
            <param name="ChLocDel">Change Location Delegate.</param>
            <param name="ChAreaDel">Change Area Delegate.</param>
            <param name="Name">Return Tool Control Title Here (Required).</param>
            <remarks>Will be called right after construction (Required method).</remarks>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.Windows.ToolControl.Dispose">
            <summary>Destructor.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.ToolControl">
            <summary>
The interface ToolControl defines an interface that needs to be implemented to embed a <see cref="T:System.Windows.Forms.UserControl" /> 
derived class in montaj. By implementing this interface it is possible to load any such managed object into the montaj
framework which will supports persistance through CMETA.
</summary>
            <seealso cref="!:M:Geosoft.Desktop.GXNetX.CGUI.LaunchGeoDOTNETXTool" />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.GeneralInfoDelegate">
            <summary>General Information Message delegate.</summary>
            <param name="Class">Message Class</param>
            <param name="Info">Message Information</param>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.ToolCommandDelegate">
            <summary>Direct command delegate.</summary>
            <param name="ID">Command ID Number</param>
            <param name="Name">Command Name</param>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.FlushDelegate">
            <summary>Flush tool delegate.</summary>
            <remarks>Used to serialize settings with META obtained from initialization.</remarks>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.ShowHelpDelegate">
            <summary>Context sensitive help delegate.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.ChangeAreaDelegate">
            <summary>Change the visible area.</summary>
            <param name="XMin">Minimum X</param>
            <param name="YMin">Minimum Y</param>
            <param name="XMax">Maximum X</param>
            <param name="YMax">Maximum Y</param>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.ChangeLocationDelegate">
            <summary>Change the current location.</summary>
            <param name="X">X Location</param>
            <param name="Y">Y Location</param>
            <param name="Z">Z Location</param>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Windows.ChangeProjectionDelegate">
            <summary>Change the current projection.</summary>
            <param name="IPJ">Projection</param>
        </member>
        <member name="P:GeoEngine.Core.GXNetX.CGXAttribute.GxList">
            <summary>
Get the list of gx's called by this entry point
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXAttribute.#ctor(System.String)">
            <summary>
Default constructor
</summary>
            <param name="pcGxList">list of gx's that this entry point calls</param>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGXAttribute">
            <summary>
Marks this function as callable from Oasis Montaj.
</summary>
            <example>
[CGXAttribute("")]
void SampleEntry(){...}
The parameter that is currently an empty string in the above example can be filled in with
a list of gx's, seperated by semi-colans, that you call from your script inorder that everything can be properly licensed.
This feature is not currently implemented but is planned for future versions.
</example>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CWA.NewLine">
            <summary>Forces a new line in the WA object.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CWA.CreateSBFEx(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CSBF,System.String,System.Int32,System.Int32)">
            <summary>Creates an ASCII file to write to in an SBF.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oSBF1">Storage</param>
            <param name="str2">Name of the File</param>
            <param name="i3">&amp;lt;define&amp;gt;WA_OPEN&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;WA_ENCODE&amp;lt;/define&amp;gt;</param>
            <remarks>
Also see sbf.gxh
Before version 6.2. text in on the GX API level were handled as characters in the current ANSI code page
defining how characters above ASCII 127 would be displayed. 6.2. introduced Unicode in the core
montaj engine that greatly increased the number of symbols that can be used. The &amp;lt;define&amp;gt;WA_ENCODE&amp;lt;/define&amp;gt; constants
were introduce that controls how text are written to files on disk with the WA class.
</remarks>
            <returns>WA Handle</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CWA.CreateSBF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CSBF,System.String,System.Int32)">
            <summary>Creates an ASCII file to write to in an SBF.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oSBF1">Storage</param>
            <param name="str2">Name of the File</param>
            <param name="i3">&amp;lt;define&amp;gt;WA_OPEN&amp;lt;/define&amp;gt;</param>
            <remarks>See sbf.gxh. ANSI Encoding is assumed, See CreateSBFEx_WA to override this.</remarks>
            <returns>WA Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CWA.CreateEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32)">
            <summary>Creates an ASCII file to write to.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the File</param>
            <param name="i2">&amp;lt;define&amp;gt;WA_OPEN&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;WA_ENCODE&amp;lt;/define&amp;gt;</param>
            <remarks>
Before version 6.2. text in on the GX API level were handled as characters in the current ANSI code page
defining how characters above ASCII 127 would be displayed. 6.2. introduced Unicode in the core
montaj engine that greatly increased the number of symbols that can be used. The &amp;lt;define&amp;gt;WA_ENCODE&amp;lt;/define&amp;gt; constants
were introduce that controls how text are written to files on disk with the WA class.
</remarks>
            <returns>WA Handle</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CWA.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Creates an ASCII file to write to.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the File</param>
            <param name="i2">&amp;lt;define&amp;gt;WA_OPEN&amp;lt;/define&amp;gt;</param>
            <remarks>ANSI Encoding is assumed, See CreateEx_WA to override this.</remarks>
            <returns>WA Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CWA.Puts(System.String)">
            <summary>Writes a string to the file.</summary>
            <param name="str1">String to write</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CWA">
            <summary>

       The WA class enables you to access and write data to ASCII files.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.WriteXML(System.String,System.Int32,System.Int32)">
            <summary>Write the VV data as an XML object with bytes and formating.</summary>
            <param name="str1">XML file to create</param>
            <param name="i2">Format</param>
            <param name="i3">Significant digits/decimals</param>
            <available_version>8.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Window(System.Double,System.Double,System.Int32)">
            <summary>Limit the elements of a vv to a range.</summary>
            <param name="d1">Min Val</param>
            <param name="d2">Max Val</param>
            <param name="i3">&amp;lt;define&amp;gt;VV_WINDOW&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Swap">
            <summary>
Swaps the bytes of the SHORT, USHORT, LONG, FLOAT and DOUBLE vv's.
Other vv's are not affected by this method. This is used
primarily with changing the order of bytes for other machine
created data.
</summary>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Subtract(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Subtract one VV from another: VV_A - VV_B = VV_C</summary>
            <param name="oVV1">VV B</param>
            <param name="oVV2">VV C (returned), C = A - B</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Statistics(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CVV)">
            <summary>Add a VV to a ST.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oST1">ST Handle</param>
            <param name="oVV2">VV to add to ST</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SortIndex4(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Sort index VV based on 4 data VVs - set orders.</summary>
            <param name="oVV1">Secondary Data VV</param>
            <param name="oVV2">Ternary Data VV</param>
            <param name="oVV3">Quaternary Data VV</param>
            <param name="oVV4">Index VV of type INT</param>
            <param name="i5">Primary Ssort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <param name="i6">Secondary Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <param name="i7">Third Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <param name="i8">Fourth Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <remarks>
Create an Index VV (of type &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;) based on a data VV.
This index vv can then be used by the IndexOrder method
to order a group of VV's. The individual VVs may be ordered
in ascending or descending order.
If the primary VV values of two indices are the same, then
the secondary VV values are compared. If the secondary values
are the same, the third values are compared, etc
</remarks>
            <available_version>5.0.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SortIndex3(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32,System.Int32)">
            <summary>Sort index VV based on 3 data VVs - set orders.</summary>
            <param name="oVV1">Secondary Data VV</param>
            <param name="oVV2">Ternary Data VV</param>
            <param name="oVV3">Index VV of type INT</param>
            <param name="i4">Primary Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <param name="i5">Secondary sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <param name="i6">Third Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <remarks>
Create an Index VV (of type &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;) based on a data VV.
This index vv can then be used by the IndexOrder method
to order a group of VV's. The individual VVs may be ordered
in ascending or descending order.
If the primary VV values of two indices are the same, then
the secondary VV values are compared. If the secondary values
are the same, the third values are compared, etc
</remarks>
            <available_version>5.0.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SortIndex2(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Sort index VV based on 2 data VVs - set orders.</summary>
            <param name="oVV1">Secondary Data VV</param>
            <param name="oVV2">Index VV of type INT</param>
            <param name="i3">Primary Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <param name="i4">Secondary Sort order &amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <remarks>
Create an Index VV (of type &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;) based on a data VV.
This index vv can then be used by the IndexOrder method
to order a group of VV's. The individual VVs may be ordered
in ascending or descending order.
If the primary VV values of two indices are the same, then
the secondary VV values are compared. If the secondary values
are the same, the ternary values are compared, etc
</remarks>
            <available_version>5.0.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SortIndex1(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Sort index VV based on 1 data VV - set orders.</summary>
            <param name="oVV1">Index VV of type INT</param>
            <param name="i2">&amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <remarks>
Create an Index VV (of type &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;) based on a data VV.
This index vv can then be used by the IndexOrder method
to order a group of VV's. The individual VVs may be ordered
in ascending or descending order.
If the primary VV values of two indices are the same, then
the secondary VV values are compared. If the secondary values
are the same, the ternary values are compared, etc.
</remarks>
            <available_version>5.0.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SortIndex(GeoEngine.Core.GXNetX.CVV)">
            <summary>Sort index VV based on a data VV.</summary>
            <param name="oVV1">Index VV of type INT</param>
            <remarks>
Create an Index VV (of type &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;) based on a data VV.
This index vv can then be used by the IndexOrder method
to order a group of VV's.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Sort(System.Int32)">
            <summary>Sort a VV.</summary>
            <param name="i1">&amp;lt;define&amp;gt;VV_SORT&amp;lt;/define&amp;gt;</param>
            <available_version>5.1.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>Set VV data from a VM. (OBSOLETE)</summary>
            <param name="oVM1">VM from which to read the data</param>
            <param name="i2">Start VV location of data to set, 0 is first.</param>
            <remarks>
See CopyVMtoVV_VV, which is a prefered method to move VM data
into a VV.  This method is mainly provided for old compatibility.

The VM will be lengthened if required to hold the entire VV.

If the VM is longer than required, extra data past the end
of the VV will be set to dummy.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetupIndex(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Double)">
            <summary>Setup an index VV from VV1 to VV2.</summary>
            <param name="oVV1">Query VV (same type as Data VV)</param>
            <param name="oVV2">VV index VV of type REAL</param>
            <param name="i3">&amp;lt;define&amp;gt;VV_LOOKUP&amp;lt;/define&amp;gt;</param>
            <param name="d4">Spacing for some modes</param>
            <remarks>
The input reference VV must be in ascending numerical order.
If your reference data is NOT ordered, then use the SortIndex1_VV 
function to create an order index, then sort both the reference and data VVs 
using this index VV before you call SetupIndex_VV.

Example: You have a reference data set taken at specific times, hVVt, hVVy
and you want to calculate/estimate/interpolate the values hVVy2 at a second set
of times hVVt2

Step 1: Create an index, hVVi, type &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;, and call SetupIndex_VV.

with: hVVt2, hVVi, VV_LOOKUP_XXX, rSpacing

Internally, this assigns index values of 0.0, 1.0, 2.0 etc. to the individual
values in hVVt, then, depending on the lookup method chosen, assigns
fractional index values to the input values in hVVt2.

Step 2: To determine what the lookup values hVVy2 should be at times hVVt2,
call the LookupIndex_VV function for hVVy with hVVi, hVVy2

Internally, this assigns index values of 0.0, 1.0, 2.0 etc. to the individual
values in hVVy, and uses linear interpolation to calculate the values of
hVVy2 at the input indices contained in hVVi.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetStringN(System.Int32,System.Int32,System.String)">
            <summary>Set N string elements in a VV.</summary>
            <param name="i1">Start element (&gt;= 0)</param>
            <param name="i2"># elements to set (-1 sets all elements to end)</param>
            <param name="str3">String to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VV length, the VV length is
increased.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetString(System.Int32,System.String)">
            <summary>Set a string element in a VV.</summary>
            <param name="i1">Element to set</param>
            <param name="str2">String to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VV length, the VV length is
increased.
It is good practice to set the length ahead of time to the
expected maximum value, as some VV processes rely on the
current maximum length of the VV when you pass it in as an
argument, and unexpected results may occur if the length is
not what you expect it to be because of dynamic allocation at
an earlier time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetRealN(System.Int32,System.Int32,System.Double)">
            <summary>Set N real elements in a VV.</summary>
            <param name="i1">Start element (&gt;= 0)</param>
            <param name="i2"># elements to set (-1 sets all elements to end)</param>
            <param name="d3">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VV length, the VV length is
increased.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetReal(System.Int32,System.Double)">
            <summary>Set a real element in a VV.</summary>
            <param name="i1">Element to set</param>
            <param name="d2">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VV length, the VV length is
increased.
It is good practice to set the length ahead of time to the
expected maximum value, as some VV processes rely on the
current maximum length of the VV when you pass it in as an
argument, and unexpected results may occur if the length is
not what you expect it to be because of dynamic allocation at
an earlier time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetLen(System.Int32)">
            <summary>Set the length of a VV.</summary>
            <param name="i1">New length (number of elements)</param>
            <remarks>
If increasing the VV size, new elements are set to dummies.

It is good practice to set the length ahead of time to the
expected maximum value, as some VV processes rely on the
current maximum length of the VV when you pass it in as an
argument, and unexpected results may occur if the length is
not what you expect it to be because of dynamic allocation at
an earlier time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetIntN(System.Int32,System.Int32,System.Int32)">
            <summary>Set N integer elements in a VV.</summary>
            <param name="i1">Start element (&gt;= 0)</param>
            <param name="i2"># elements to set (-1 sets all elements to end)</param>
            <param name="i3">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VV length, the VV length is
increased.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetInt(System.Int32,System.Int32)">
            <summary>Set an integer element in a VV.</summary>
            <param name="i1">Element to set</param>
            <param name="i2">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VV length, the VV length is
increased.
It is good practice to set the length ahead of time to the
expected maximum value, as some VV processes rely on the
current maximum length of the VV when you pass it in as an
argument, and unexpected results may occur if the length is
not what you expect it to be because of dynamic allocation at
an earlier time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetFidStart(System.Double)">
            <summary>Sets the Fiducial start of a VV</summary>
            <param name="d1">New start</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetFidIncr(System.Double)">
            <summary>Sets the Fiducial increment of a VV</summary>
            <param name="d1">New increment</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.SetFidExpansion(System.Int32)">
            <summary>Sets the Fiducial expansion from a VV</summary>
            <param name="i1">Expansion setting (1 or greater)</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.rWeightedMean(GeoEngine.Core.GXNetX.CVV)">
            <summary>Calculate the weighted average of the values.</summary>
            <param name="oVV1">VV of weights</param>
            <remarks>Dummy values are ignored.</remarks>
            <returns>The weighted average of the values.</returns>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.rSum">
            <summary>Calculate the sum of the values in a VV.</summary>
            <remarks>Dummy value is treated as Zero(0)</remarks>
            <returns>The sum of the elements.</returns>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.rGetReal(System.Int32)">
            <summary>Get a real element from a VV.</summary>
            <param name="i1">Element wanted</param>
            <remarks>
Type conversions are performed if necessary.  Dummy values
are converted to "*" string.
</remarks>
            <returns>
Element wanted, or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;
if the value is dummy or outside of the range of data.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.rGetFidStart">
            <summary>Gets the Fiducial start from a VV</summary>
            <returns>Fiducial start of the VV.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.rGetFidIncr">
            <summary>Gets the Fiducial increment from a VV</summary>
            <returns>Fiducial increment of the VV.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.ReSample(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Resamples a VV from one fid/incr to another fid/incr.</summary>
            <param name="d1">Current start fid</param>
            <param name="d2">Current increment</param>
            <param name="d3">New fid start</param>
            <param name="d4">New fid increment</param>
            <param name="i5">New length</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.ReFidVV(GeoEngine.Core.GXNetX.CVV)">
            <summary>Re-sample a VV to match another VV.</summary>
            <param name="oVV1">VV model (fid increment and start)</param>
            <remarks>
This method will honor the VV FID Expansion and will expand/contract
VV's based on this flag if it is used.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.ReFid(System.Double,System.Double,System.Int32)">
            <summary>Re-sample a VV to a new fid start/icrement</summary>
            <param name="d1">New fid start</param>
            <param name="d2">New fid increment</param>
            <param name="i3">New length</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.RangeDouble(System.Double@,System.Double@)">
            <summary>Get the min. and max. values of a VV while ignoring dummies.</summary>
            <param name="d1">Minimum value - returned</param>
            <param name="d2">Maximum value - returned</param>
            <remarks>Minimum and maximum become &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; if entire VV is dummy.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Project3D(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CPJ,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>This method projects an X,Y,Z VV.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oPJ1" />
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="oVV4">Z</param>
            <remarks>This function is equivalent to ConvertVV3_PJ.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Project(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CPJ,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>This method projects an X and Y VV.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oPJ1" />
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <remarks>This function is equivalent to ConvertVV_PJ.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.PolygonMask(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CPLY,System.Int32)">
            <summary>Mask a VV using XY data and a polygon</summary>
            <param name="oVV1">Y VV</param>
            <param name="oVV2">VV to be masked</param>
            <param name="oPLY3">Polygon Object</param>
            <param name="i4">&amp;lt;define&amp;gt;VV_MASK&amp;lt;/define&amp;gt;</param>
            <remarks>The VVs has to be the same length</remarks>
            <available_version>5.1.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Amplitude3D(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Calculate the 3D length for XYZ component VVs</summary>
            <param name="oVV1">X component VV</param>
            <param name="oVV2">Y component VV</param>
            <param name="oVV3">Z component VV</param>
            <available_version>8.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Multiply(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Multiply two VVs: VV_A * VV_B = VV_C</summary>
            <param name="oVV1">VV B</param>
            <param name="oVV2">VV C (returned), C = A * B</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.MaskStr(GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Mask one VV against another using a string.</summary>
            <param name="oVV1">Mask VV</param>
            <param name="str2">String to compare</param>
            <remarks>
All elements in the mask VV that are same as string will replace
the original VV with a 1.

The modified VV will always be expanded to the MaskVV size but
not shortened after this call.  If the mask is longer than the target,
the target will be lengthenned with dummies before applying the mask.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.MaskOR(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Create mask from logical OR of two VVs.</summary>
            <param name="oVV1">VV B</param>
            <param name="oVV2">VV C (returned)</param>
            <remarks>If either values is non-dummy, then result is 1, else dummy.</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.MaskAND(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Create mask from logical AND of two VVs.</summary>
            <param name="oVV1">VV B</param>
            <param name="oVV2">VV C (returned)</param>
            <remarks>If both values are non-dummies, then result is 1, else dummy.</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.MakeMemBased">
            <summary>Make this VV use regular instead of virtual memory.</summary>
            <remarks>
This function should be called immediately aftter
Create_VV.

Normal VVs are optimised to prevent thrashing, and to
efficiently support many extremely large VVs, although
there is a small performance penalty.
This function is intended for VV's that you know can be
handled by the operating system virtual memory manager,
and will be used heavily.  By using a memory based VV, you
can achieve some performance improvements provided your
application does not cause the memory manager to "thrash".

External programs that use the GX API may prefer to use
memory-based VV's because you can get direct access to
the VV through the GetPtrVV_GEO function (see gx_extern.h).
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.LookupIndex(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Lookup a VV from another VV using an index VV.</summary>
            <param name="oVV1">Index VV of REAL</param>
            <param name="oVV2">Result VV (same type as Data VV)</param>
            <remarks>
This method assigns index values of 0.0, 1.0, 2.0 etc. to the individual
values in the input Data VV, and uses linear interpolation to calculate the values of
Result VV at the input indices contained in the Index VV.

If the input Data VV is string type, then only values at the integral index values
are returned.

See also SetupIndex_VV for an example of how this can be implemented.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.LinesToXY(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Convert a 2D Line segment VV into X and Y VVs.</summary>
            <param name="oVV1">Output VV with X locations (&amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;)</param>
            <param name="oVV2">Output VV with Y locations (&amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;)</param>
            <remarks>
Some GX functions (such as GetVoronoiEdges_TIN) return
a special VV where each element contains the start and end
points of lines, (X_1, Y_1) and (X_2, Y_2).
This GX dumps the individual X and Y values into individual
X and Y VVs of type &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt; (REAL). N lines produces 2*N
X and Y values.
</remarks>
            <available_version>8.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iOrder(System.Int32@)">
            <summary>Identifies the data size order of the elements.</summary>
            <param name="i1">Returned: Do any values repeat (0: No, 1: Yes)?</param>
            <returns>&amp;lt;define&amp;gt;VV_ORDER&amp;lt;/define&amp;gt;</returns>
            <available_version>6.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.InvLog(System.Int32,System.Int32,System.Double)">
            <summary>Inverse of the _Log_VV function.</summary>
            <param name="i1">&amp;lt;define&amp;gt;VV_LOG_BASE&amp;lt;/define&amp;gt;</param>
            <param name="i2">&amp;lt;define&amp;gt;VV_LOGMODE&amp;lt;/define&amp;gt;</param>
            <param name="d3">Minimum value for &amp;lt;define&amp;gt;VV_LOG_NEGATIVE&amp;lt;/define&amp;gt;</param>
            <remarks>This is the inverse function for _Log_VV, with the same inputs.</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.InitIndex(System.Int32)">
            <summary>Initialize an index VV to values 0, 1, 2, etc...</summary>
            <param name="i1">Final length of VV (-1 to use current length).</param>
            <remarks>
Populates a VV with the values 0, 1, 2, 3, 4 etc., to be
used for various indexing functions, such as IndexInsert_VV or
IndexOrder_VV.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.IndexOrder(GeoEngine.Core.GXNetX.CVV)">
            <summary>Reorder a VV.</summary>
            <param name="oVV1">VV to order</param>
            <remarks>
Given an index VV (of type INT), this method reorders a
VV. Please make sure that the index holds valid information.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.IndexInsert(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Insert items into a VV using an index VV.</summary>
            <param name="oVV1">Data items to insert (must be same type as output data VV)</param>
            <param name="oVV2">Index VV (must be type INT)</param>
            <remarks>
The items in the input data VV are inserted into
the output VV using the indices in the index VV.
Values not referenced are not altered, so the output
VV should be pre-initialized. The output VV length
will NOT be changed, and index values referencing
beyond the end of the output VV data will return an
error.

This function is useful when working with channel data that include
dummies, but where the dummies must be removed before processing.
Create and initialize an index (0, 1, 2...) VV, using the InitIndex_VV
function, and when you remove
the dummies, remove the corresponding index values as well.
After processing, init a VV to dummies, then use IndexInsert_VV to
put the processed values at the correct locations in the data VV
before you write it back to the channel.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iLength">
            <summary>Returns current VV length.</summary>
            <returns># of elements in the VV.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iIndexMax(System.Double@)">
            <summary>Get the index where the maximum value occurs.</summary>
            <param name="d1">Maximum value (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if all dummies or no data)</param>
            <remarks>
If more than one value has the same maximum value, the index of the
first is returned.
</remarks>
            <returns>Index of the maximum value, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; if no valid data.</returns>
            <available_version>6.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.IGetString(System.Int32,System.String@)">
            <summary>Get a string element from a VV.</summary>
            <param name="i1">Element wanted</param>
            <param name="str2">String in which to place element</param>
            <remarks>
Returns Element wanted, or blank string
if the value is dummy or outside of the range of data.

Type conversions are performed if necessary.  Dummy values
are converted to "*" string.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iGetInt(System.Int32)">
            <summary>Get an integer element from a VV.</summary>
            <param name="i1">Element wanted</param>
            <returns>
Element wanted, or &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt;
if the value is dummy or outside of the range of data.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iGetFidExpansion">
            <summary>Gets the Fiducial expansion from a VV</summary>
            <returns>Number of expanions for this VV (see ReFidVV_VV)</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iFindDum(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Finds the first dummy or non-dummy value in a VV</summary>
            <param name="i1">Lowest element in VV element to search</param>
            <param name="i2">Highest element in VV to search</param>
            <param name="i3">0 = find first dummy / 1 = find first non-dummy</param>
            <param name="i4">0 = use increasing order / 1 = use decreasing order</param>
            <remarks>
If a decreasing order search is performed, it will start
at the highest element specified. (Conversely, an increasing
order starts at the lowest element specified.)
</remarks>
            <returns>
The index of the first dummy or non-dummy value.
-1 if not found, 0 if the length of the VV is 0.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iCountDummies(System.Int32,System.Int32)">
            <summary>Count the number of dummies in a VV</summary>
            <param name="i1">Starting point in VV (0 for all)</param>
            <param name="i2">Number of elements to process (-1 for all)</param>
            <returns>The count</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.GetVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>Get VV data and place it in a VM. (OBSOLETE)</summary>
            <param name="oVM1">VM in which to place the data</param>
            <param name="i2">Start VV location of data to get, 0 is first.</param>
            <remarks>
See CopyVVtoVM_VV, which is a prefered method to move VV data
into a VM.  This method is mainly provided for old compatibility.

The VM will be lengthened if required.

If the VM is longer than required, extra data past the end
of the VV will be set to dummy in the VM.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.FillString(System.String)">
            <summary>Fill a VV with a string value.</summary>
            <param name="str1">String</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.FillReal(System.Double)">
            <summary>Fill a VV with a real value.</summary>
            <param name="d1">Value to fill with</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.FillInt(System.Int32)">
            <summary>Fill a VV with an int value.</summary>
            <param name="i1">Value to fill with</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.FidNorm(GeoEngine.Core.GXNetX.CVV)">
            <summary>Re-sample a pair of VV's to match each other.</summary>
            <param name="oVV1">VV to resample</param>
            <remarks>
Both VV's will return with the same start
fid and fid increment.  The smaller start fid
and fid increment will be used.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Divide(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Divide one VV by another: VV_A / VV_B = VV_C</summary>
            <param name="oVV1">VV B</param>
            <param name="oVV2">VV C (returned), C = A / B</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Diff(System.Int32)">
            <summary>Calculate differences.</summary>
            <param name="i1">Number of differences</param>
            <remarks>
Differences with dummies result in dummies.
An even number of differences locates data accurately.
An odd number of differences locates result 1/2 element lower
in the VV.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create a VV  from serialized source.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1" />
            <returns>VV Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.CreateExt(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>Create a VV, using one of the &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; special data types.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="i2">Maximum number of elements in the VV, &gt;= 0</param>
            <remarks>
See Create_VV

Do not use data type flags: &amp;lt;define&amp;gt;GS_INT&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;,
this will result in a respective data type of unsigned byte or
short for the VV.
</remarks>
            <returns>VV Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>Create a VV.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GEO_VAR&amp;lt;/define&amp;gt;</param>
            <param name="i2">Maximum number of elements in the VV, &gt;= 0</param>
            <remarks>
To set the fiducial start and increment for the data in the VV
you need to call SetFidStart_VV and SetFidIncr_VV.

If you are basing the VV data on fiducial information from a
different VV, call GetFidStart_VV and GetFidIncr_VV to obtain
that VV's fiducial information. Do this prior to setting the
new VV's fiducial start and increment.

If you do not know the required length for a VV, use 0
and the VV length will be adjusted as needed.  This is
a bit less efficient than setting the length when you
know it.
</remarks>
            <returns>VV Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.CRCInexact(System.Int32,System.Int32,System.Int32)">
            <summary>
Compute the CRC value of a VV and allows you to specify
number of bits of floats/doubles to drop so that the CRC
will be same even of this are changed.
</summary>
            <param name="i1">Previous CRC &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt;</param>
            <param name="i2">&amp;lt;define&amp;gt;VV_FLOAT_CRC_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;VV_DOUBLE_CRC_BITS&amp;lt;/define&amp;gt;</param>
            <remarks>
Very useful for testing where the last bits of accuracy
are not as important.
</remarks>
            <returns>CRC Value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.CRC(System.Int32)">
            <summary>Compute the CRC value of a VV.</summary>
            <param name="i1">Previous CRC &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt;</param>
            <returns>CRC Value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.CopyVVtoVM(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVM,GeoEngine.Core.GXNetX.CVV)">
            <summary>Copy VV data to a VM.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVM1">Destination VM, will be resized to length of the VV</param>
            <param name="oVV2">Source VV</param>
            <remarks>
The VM will be resized to the length of the VV.
The pointer to data in the VM may move.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.CopyVMtoVV(GeoEngine.Core.GXNetX.CVM)">
            <summary>Copy VM data to a VV.</summary>
            <param name="oVM1">Source VM</param>
            <remarks>The VV will be resized to the length of the VM.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Append(GeoEngine.Core.GXNetX.CVV)">
            <summary>Appends VV's</summary>
            <param name="oVV1">VV to append</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Add2(System.Double,GeoEngine.Core.GXNetX.CVV,System.Double,GeoEngine.Core.GXNetX.CVV)">
            <summary>Add two VVs with linear factors: VV_A*f1 + VV_B*f2 = VV_C</summary>
            <param name="d1">Multiplier f1 for A</param>
            <param name="oVV2">VV B</param>
            <param name="d3">Multiplier f2 for B</param>
            <param name="oVV4">VV C (returned), C = A*f1 + B*f2</param>
            <remarks>The multipliers must be defined and within the &amp;lt;define&amp;gt;GS_R8MN&amp;lt;/define&amp;gt; &amp;lt;define&amp;gt;GS_R8MX&amp;lt;/define&amp;gt; range.</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Add(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Add two VVs: VV_A + VV_B = VV_C</summary>
            <param name="oVV1">VV B</param>
            <param name="oVV2">VV C (returned), C = A + B</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Abs">
            <summary>Take the absolute value of values in a VV.</summary>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Trans(System.Double,System.Double)">
            <summary>Translate (VV + base ) * mult</summary>
            <param name="d1">Base value</param>
            <param name="d2">Mult value</param>
            <remarks>All VV types now supported.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize</summary>
            <param name="oBF1" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Reverse">
            <summary>Reverses the order of the data in a VV.</summary>
            <available_version>5.1.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Mask(GeoEngine.Core.GXNetX.CVV)">
            <summary>Mask one VV against another.</summary>
            <param name="oVV1">Mask VV</param>
            <remarks>
All elements in the mask VV that are dummies will replace
the value in the original VV with a dummy.

The modified VV will always be the same length as the mask
VV after this call.  If the mask is longer than the target,
the target will be lengthenned with dummies.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.LogLinear(System.Double)">
            <summary>Take the log10 or original value of a VV.</summary>
            <param name="d1">Minimum value</param>
            <remarks>
If the data is in the range +/- minimum value,
it is left alone. Otherwise, the result is calculated as

::

    d = dMin * (log10(fabs(d)/dMin)+1.0)

Sign is reapplied to d.

Minimum value will be defaulted to 1.0 if it is negative
or 0.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Log(System.Int32,System.Int32,System.Double)">
            <summary>Apply log to the vv.</summary>
            <param name="i1">&amp;lt;define&amp;gt;VV_LOG_BASE&amp;lt;/define&amp;gt;</param>
            <param name="i2">&amp;lt;define&amp;gt;VV_LOGMODE&amp;lt;/define&amp;gt;</param>
            <param name="d3">Minimum value for &amp;lt;define&amp;gt;VV_LOG_NEGATIVE&amp;lt;/define&amp;gt;</param>
            <remarks>
Minimum value will be defaulted to 1.0 if it is 0.0 or
less than 0.0
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Copy2(System.Int32,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Copy part of a vector into part of another vector.</summary>
            <param name="i1">Destination start element</param>
            <param name="oVV2">Source VV (can be the same as Destination)</param>
            <param name="i3">Source start element</param>
            <param name="i4">Number of points</param>
            <remarks>
1. Unlike Copy_VV destination VV is not reallocated, nor is
the length changed. The caller must make any desired changes.

2. All VV types are supported and will be converted using
Convert_GS if necessary.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.Copy(GeoEngine.Core.GXNetX.CVV)">
            <summary>Copy one VV to another.</summary>
            <param name="oVV1">Source</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iSetData(System.Int32,System.Int32,System.Byte*,System.Int32)">
            <summary>Copy data from user memory to a VV</summary>
            <param name="i1">Start Location</param>
            <param name="i2">Number of Elements</param>
            <param name="b3">Data buffer to copy into into VV</param>
            <param name="i4">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVV.iGetData(System.Int32,System.Int32,System.Byte*,System.Int32)">
            <summary>Copy data from user memory to a VV</summary>
            <param name="i1">Start Location</param>
            <param name="i2">Number of Elements</param>
            <param name="b3">Data buffer copy data into from VV</param>
            <param name="i4">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVV">
            <summary>

       The VV class stores very long vector (array) data (such
       as channel data from an OASIS database) in memory and
       performs specific actions on the data. This set of
       functions is similar to the VM functions except that
       you cannot access data directly and therefore you cannot
       use a VV to pass data to an external (non-Geosoft)
       Dynamic Link Library (DLL) object function.

       If you want to pass data to a DLL, you must move a subset
       of the data stored in memory to a small vector object and
       then use the GetPtrVM_GEO function to pass a pointer to the
       data on to the external function.

       See VVU for more utility methods.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVULCAN.BlockModelToVoxel(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ,System.String,System.String,System.Int32,System.String)">
            <summary>Create a Geosoft voxel file from a Vulcan block model file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Block model file</param>
            <param name="oIPJ2">Block model projection</param>
            <param name="str3">Variable to import</param>
            <param name="str4">Ouput voxel filename</param>
            <param name="i5">Remove default values from input?</param>
            <param name="str6">Rock code file for string variable imports. Optional, unused for numeric variable imports.</param>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVULCAN.GetBlockModelStringVariableValues(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Query a block model for the values a string variable can assume.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Block model file</param>
            <param name="str2">Variable name</param>
            <param name="oLST3">List used to return variable names</param>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVULCAN.GetBlockModelVariableInfo(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,GeoEngine.Core.GXNetX.CLST)">
            <summary>Query a block model for the variable names and descriptions.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Block model file</param>
            <param name="i2">&amp;lt;define&amp;gt;BLOCK_MODEL_VARIABLE_TYPE&amp;lt;/define&amp;gt; Which variables to return.</param>
            <param name="oLST3">List used to return variable names/descriptions.</param>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVULCAN.TriangulationToView(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMVIEW,System.String)">
            <summary>Draw triangle edges in a Vulcan triangulation file to a 3D view in a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Triangulation file</param>
            <param name="oIPJ2">Triangulation projection</param>
            <param name="oMVIEW3">Destination MVIEW</param>
            <param name="str4">New group name</param>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVULCAN.IsValidBlockModelFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Check if the given file can be opened as a Vulcan block model file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Block model file</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVULCAN.IsValidTriangulationFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Check if the given file can be opened as a Vulcan triangulation file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Triangulation file</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVULCAN">
            <summary>

       The VULCAN class is used for importing MaptekÂ® Vulcan block and triangulation files.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXE.Vector(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Extract a profile of data along a vector</summary>
            <param name="d1">X Origin</param>
            <param name="d2">Y Origin</param>
            <param name="d3">Z Origin</param>
            <param name="d4">X Delta</param>
            <param name="d5">Y Delta</param>
            <param name="d6">Z Delta</param>
            <param name="oVV7">Data VV (must be double)</param>
            <param name="i8">&amp;lt;define&amp;gt;VOXE_EVAL&amp;lt;/define&amp;gt;</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXE.rValue(System.Double,System.Double,System.Double,System.Int32)">
            <summary>Get a value at a specific point</summary>
            <param name="d1">X Location</param>
            <param name="d2">Y Location</param>
            <param name="d3">Z Location</param>
            <param name="i4">&amp;lt;define&amp;gt;VOXE_EVAL&amp;lt;/define&amp;gt;</param>
            <returns>Value at the point or DUMMY if not valid</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXE.Profile(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Extract a profile of data along points provided.</summary>
            <param name="oVV1">X VV (must be double)</param>
            <param name="oVV2">Y VV (must be double)</param>
            <param name="oVV3">Z VV (must be double)</param>
            <param name="oVV4">D VV (must be double)</param>
            <param name="i5">&amp;lt;define&amp;gt;VOXE_EVAL&amp;lt;/define&amp;gt;</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXE.Create(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVOX)">
            <summary>Create a handle to an VOXE object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVOX1">VOX Object</param>
            <returns>VOXE handle, terminates if creation fails</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVOXE">
            <summary>

       VOX evaluator class. Used to sample values from
       the voxel.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.SetRenderMode(System.Int32)">
            <summary>Get voxel render mode.</summary>
            <param name="i1">&amp;lt;define&amp;gt;VOXELRENDER_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.GetRenderMode(System.Int32@)">
            <summary>Get voxel render mode.</summary>
            <param name="i1">&amp;lt;define&amp;gt;VOXELRENDER_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.SetShellControls(System.Double,System.Double)">
            <summary>Set the shell controls</summary>
            <param name="d1">Min Value (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no limit)</param>
            <param name="d2">Max Value (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no limit)</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.SetITR(GeoEngine.Core.GXNetX.CITR)">
            <summary>Set the ITR of the VOXD</summary>
            <param name="oITR1">ITR object</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.SetDrawControls(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the draw controls</summary>
            <param name="i1">Draw Bounding Box</param>
            <param name="d2">Transparency</param>
            <param name="d3">Min X</param>
            <param name="d4">Min Y</param>
            <param name="d5">Min Z</param>
            <param name="d6">Max X</param>
            <param name="d7">Max Y</param>
            <param name="d8">Max Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.GetShellControls(System.Double@,System.Double@)">
            <summary>Get the shell controls</summary>
            <param name="d1">Min Value (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no limit)</param>
            <param name="d2">Max Value (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no limit)</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.GetITR(GeoEngine.Core.GXNetX.CITR)">
            <summary>Get the ITR of the VOXD</summary>
            <param name="oITR1">ITR object</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.IGetName(System.String@)">
            <summary>Gets the file name of the voxel.</summary>
            <param name="str1">File name returned</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.GetDrawControls(System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the draw controls</summary>
            <param name="i1">Draw Bounding Box</param>
            <param name="d2">Transparency</param>
            <param name="d3">Min X</param>
            <param name="d4">Min Y</param>
            <param name="d5">Min Z</param>
            <param name="d6">Max X</param>
            <param name="d7">Max Y</param>
            <param name="d8">Max Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.SetThematicSelection(GeoEngine.Core.GXNetX.CVV)">
            <summary>Get a copy of a thematic voxel's TPAT object and a VV containing the current display selections.</summary>
            <param name="oVV1">VV (int) object to set the current selections to</param>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.GetThematicInfo(GeoEngine.Core.GXNetX.CTPAT,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get a copy of a thematic voxel's TPAT object and a VV containing the current display selections.</summary>
            <param name="oTPAT1">TPAT object to get</param>
            <param name="oVV2">VV (int) object to fill with current selections</param>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.iIsThematic">
            <summary>Is this a thematic voxel?</summary>
            <remarks>
A thematic voxel is one where the stored integer values
represent indices into an internally stored TPAT object.
Thematic voxels contain their own color definitions, and
normal numerical operations, such as applying ITRs for display,
are not valid.
</remarks>
            <returns>1 if VOX is thematic</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.CreateThematic(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVOX)">
            <summary>Create a new VOXD for a thematic VOX object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVOX1">VOX Object</param>
            <remarks>
A thematic voxel is one where the stored integer values
represent indices into an internally stored TPAT object.
Thematic voxels contain their own color definitions, and
normal numerical operations, such as applying ITRs for display,
are not valid.

To determine if a VOX object is thematic, use the
iIsThematic_VOXD function.

Fails if the VOX object is NOT thematic.
</remarks>
            <returns>VOXD handle, terminates if creation fails</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.CreateITR(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVOX,GeoEngine.Core.GXNetX.CITR)">
            <summary>Create a new VOXD with our own ITR</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVOX1">VOX Object</param>
            <param name="oITR2">ITR Object</param>
            <remarks>
Fails if the VOX object is thematic.
(See the CreateThematic_VOXD function.)
</remarks>
            <returns>VOXD handle, terminates if creation fails</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOXD.Create(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVOX,System.String,System.Int32,System.Double)">
            <summary>Create a new VOXD</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVOX1">VOX Object</param>
            <param name="str2">Color table name, "" for default</param>
            <param name="i3">&amp;lt;define&amp;gt;ITR_ZONE&amp;lt;/define&amp;gt;</param>
            <param name="d4">Color contour interval or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;</param>
            <remarks>
Fails if the VOX object is NOT thematic.
(See the CreateThematic_VOXD function.)
</remarks>
            <returns>VOXD handle, terminates if creation fails</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVOXD">
            <summary>

       VOX Display object.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportDB(GeoEngine.Core.GXNetX.CDB,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export a Voxel to a database</summary>
            <param name="oDB1">Database</param>
            <param name="str2">Channel Name</param>
            <param name="i3">&amp;lt;define&amp;gt;VOX_DIRECTION&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X ? (0/1)</param>
            <param name="i5">Reverse Y ? (0/1)</param>
            <param name="i6">Reverse Z ? (0/1)</param>
            <param name="i7">Write Dummies? (0/1)</param>
            <remarks>The database lines contain a slice of the voxel at a time.</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ListGOCADProperties(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>List all the properties available in this GOCAD file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of GOCAD Voxel file</param>
            <param name="oLST2">List object to populate</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateXYZ(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CRA,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a VOX from an XYZ File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel Name</param>
            <param name="oRA2">RA To import from</param>
            <param name="i3">Data Type &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oIPJ4">Projection</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateUBC(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.Double,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a VOX from a UBC File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of UBC Mesh File</param>
            <param name="str3">Name of UBC Mod File</param>
            <param name="d4">Dummy Value</param>
            <param name="oIPJ5">Projection</param>
            <returns>VOX Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateOrientedGOCAD(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Int32)">
            <summary>Generate a VOX from a GOCAD File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of GOCAD Voxel file</param>
            <param name="str3">Propert name to import</param>
            <param name="oIPJ4" />
            <param name="i5">&amp;lt;define&amp;gt;VOX_GOCAD_ORIENTATION&amp;lt;/define&amp;gt;</param>
            <remarks>Allows the Orientation flag to be specified.</remarks>
            <returns>VOX Object</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateGOCAD(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a VOX from a GOCAD File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of GOCAD Voxel file</param>
            <param name="str3">Propert name to import</param>
            <param name="oIPJ4" />
            <returns>VOX Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.IGetMultiVoxsetGUID(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Get the UUID</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Voxel file</param>
            <param name="str2">UUID string returned</param>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.TINGridDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CREG)">
            <summary>TINGridDB_VOX   TIN-Gridding, DB version, 3D.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output voxel name</param>
            <param name="oDB2">Database</param>
            <param name="i3">X Channel [READONLY]</param>
            <param name="i4">Y Channel [READONLY]</param>
            <param name="i5">Z Channel [READONLY]</param>
            <param name="i6">Data Channel [READONLY]</param>
            <param name="i7">Gridding method (0: Linear, 1: Natural Neighbour, 2: Nearest Neightbour</param>
            <param name="oVV8">Z Cell sizes (bottom to top)</param>
            <param name="oREG9">Parameters (see above)</param>
            <remarks>
Designed for data in array channels position vertically at single XY locations.
Creates a TIN using the XY locations and uses the coefficients for the top layer on
each layer below to make it efficient.

REG Parameters:

X0, Y0, Z0, DX, DY, DZ: Voxel origin, and cell sizes (required)
NX, NY, NZ: Voxel dimensions.
DZ and NZ are used only if the input cell sizes VV is of zero length.
</remarks>
            <available_version>8.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.IDWGridDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CREG)">
            <summary>IDWGridDB_VOX     Inverse-distance weighting gridding method, DB version, 3D.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output voxel name</param>
            <param name="oDB2">Database</param>
            <param name="i3">X Channel [READONLY]</param>
            <param name="i4">Y Channel [READONLY]</param>
            <param name="i5">Z Channel [READONLY]</param>
            <param name="i6">Data Channel [READONLY]</param>
            <param name="oREG7">Parameters (see above)</param>
            <remarks>
3D cells take on the averaged values within a search radius, weighted inversely by distance.

Weighting can be controlled using the power and slope properties;

weighting = 1 / (distance^wtpower + 1/slope) where distance is in
units of grid cells (X dimenstion). Default is 0.0,

If the blanking distance is set, all cells whose center point is not within the blanking distance of
at least one data point are set to dummy.

REG Parameters:

X0, Y0, Z0, DX, DY, DZ: Voxel origin, and cell sizes (required)
WT_POWER (default=2), WT_SLOPE (default=1) Weighting function parameters
SEARCH_RADIUS: Distance weighting limit (default = 4 * CUBE_ROOT(DX*DY*DZ))
BLANKING_DISTANCE: Dummy values farther from data than this distance. (default = 4 * CUBE_ROOT(DX*DY*DZ))
LOG: Apply log transform to input data before gridding (0:No (default), 1:Yes)?
LOG_BASE: One of &amp;lt;define&amp;gt;VV_LOG_BASE_10&amp;lt;/define&amp;gt; (default) or &amp;lt;define&amp;gt;VV_LOG_BASE_E&amp;lt;/define&amp;gt;
LOG_NEGATIVE: One of &amp;lt;define&amp;gt;VV_LOG_NEGATIVE_NO&amp;lt;/define&amp;gt; (default) or &amp;lt;define&amp;gt;VV_LOG_NEGATIVE_YES&amp;lt;/define&amp;gt;
</remarks>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.InvertZ(System.String)">
            <summary>Convert an inverted voxel to normal orientation</summary>
            <param name="str1">Output voxel file name.</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ConvertDensityToVelocity(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Produces a velocity voxel using the density values in this voxel.</summary>
            <param name="d1">1.0, if this voxel is in g/cm^3. Otherwise, a value by which each input cell is multiplied to convert it into g/cm^3.</param>
            <param name="d2">Lower bound on velocity values, in g/vm^3. If the input value (after being pre-multiplied by dInputScalingFactor) is less than this value, the output cell value will be DUMMY.</param>
            <param name="d3">Upper bound on velocity values, in g/cm^3. If the input value (after being pre-multiplied by dInputScalingFactor) is greater than this value, the output cell value will be DUMMY.</param>
            <param name="d4">Coefficient of fifth-order polynomial term.</param>
            <param name="d5">Coefficient of fourth-order polynomial term.</param>
            <param name="d6">Coefficient of third-order polynomial term.</param>
            <param name="d7">Coefficient of second-order polynomial term.</param>
            <param name="d8">Coefficient of first-order polynomial term.</param>
            <param name="d9">Constant offset of output.</param>
            <param name="d10">1.0, to produce an output voxel that has units of meters per second. If different units are desired, pass in a different value, which will be multiplied into each output voxel cell.</param>
            <param name="str11">Filename of the output voxel.</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ConvertVelocityInRangeToDensity(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Produces a density voxel using the velocity values in this voxel, as long as the velocity values are in range.</summary>
            <param name="d1">1.0, if this voxel is in meters per second. Otherwise, a value by which each input cell is multiplied to convert it into meters per second.</param>
            <param name="d2">Lower bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is less than this value, the output cell value will be DUMMY.</param>
            <param name="d3">Upper bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is greater than this value, the output cell value will be DUMMY.</param>
            <param name="d4">Coefficient of fifth-order polynomial term.</param>
            <param name="d5">Coefficient of fourth-order polynomial term.</param>
            <param name="d6">Coefficient of third-order polynomial term.</param>
            <param name="d7">Coefficient of second-order polynomial term.</param>
            <param name="d8">Coefficient of first-order polynomial term.</param>
            <param name="d9">Constant offset of output.</param>
            <param name="d10">1.0, to produce an output voxel that has units of g/cm^3. If different units are desired, pass in a different value, which will be multiplied into each output voxel cell.</param>
            <param name="str11">Filename of the output voxel.</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ConvertVelocityToDensity(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Produces a density voxel using the velocity values in this voxel.</summary>
            <param name="d1">1.0, if this voxel is in meters per second. Otherwise, a value by which each input cell is multiplied to convert it into meters per second.</param>
            <param name="d2">Coefficient of fifth-order polynomial term.</param>
            <param name="d3">Coefficient of fourth-order polynomial term.</param>
            <param name="d4">Coefficient of third-order polynomial term.</param>
            <param name="d5">Coefficient of second-order polynomial term.</param>
            <param name="d6">Coefficient of first-order polynomial term.</param>
            <param name="d7">Constant offset of output.</param>
            <param name="d8">1.0, to produce an output voxel that has units of g/cm^3. If different units are desired, pass in a different value, which will be multiplied into each output voxel cell.</param>
            <param name="str9">Filename of the output voxel.</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ConvertThematicToNumeric(GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Convert thematic (lithology) voxel to numeric voxel</summary>
            <param name="oVV1">Translation VV handle.</param>
            <param name="str2">Output voxel file name.</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ConvertNumericToThematic(GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Convert numeric voxel to thematic (lithology) voxel</summary>
            <param name="oVV1">Translation VV handle.</param>
            <param name="str2">Output voxel file name.</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.WriteXML(System.String)">
            <summary>Export the VOX to XML</summary>
            <param name="str1">XML file to create</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.WindowXYZ(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String,System.Int32)">
            <summary>Window a VOX to ranges in X, Y and Z.</summary>
            <param name="d1">Minimum X (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no minimum)</param>
            <param name="d2">Minimum Y (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no minimum)</param>
            <param name="d3">Minimum Z (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no minimum)</param>
            <param name="d4">Maximum X (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no maximun)</param>
            <param name="d5">Maximum Y (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no maximun)</param>
            <param name="d6">Maximum Z (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no maximun)</param>
            <param name="str7">Output voxel file name.</param>
            <param name="i8">Clip extents to remove dummies (0: no (same size), 1: yes (smaller))</param>
            <remarks>
The six minima and maxima are optional.
The output can be clipped to the non-dummied cells.
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.WindowPLY(GeoEngine.Core.GXNetX.CPLY,System.Int32,System.Double,System.Double,System.String,System.Int32)">
            <summary>Window a VOX to a PLY file and Z.</summary>
            <param name="oPLY1">PLY object</param>
            <param name="i2">Mask (0: inside PLY, 1: outside PLY)</param>
            <param name="d3">Minimum Z (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no minimum)</param>
            <param name="d4">Maximum Z (optional, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for no maximun)</param>
            <param name="str5">Output voxel file name.</param>
            <param name="i6">Clip extents to remove dummies (0: no (same size), 1: yes (smaller))</param>
            <remarks>
The voxel is windowed horizontally to the input PLY file.
Optionally, it will be windowed to the input Z range as well.
The output can be clipped to the non-dummied cells.
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Sync(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Syncronize the Metadata for this Voxel</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SubsetToRealExtents(System.String)">
            <summary>Subset a VOX to real extents.</summary>
            <param name="str1">Output voxel file name.</param>
            <available_version>7.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SliceMultiLayerIPJ(System.String,GeoEngine.Core.GXNetX.CIPJ,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Extract multiple slices of a voxel based on an IPJ</summary>
            <param name="str1">Grid Name</param>
            <param name="oIPJ2">Grid IPJ (includes orientation, etc)</param>
            <param name="i3">&amp;lt;define&amp;gt;VOX_SLICE_MODE&amp;lt;/define&amp;gt;</param>
            <param name="d4">Grid Origin X</param>
            <param name="d5">Grid Origin Y</param>
            <param name="d6">Grid Cell Size in X</param>
            <param name="d7">Grid Cell Size in Y</param>
            <param name="i8">Grid cells in X</param>
            <param name="i9">Grid cells in Y</param>
            <param name="i10">Number of layers to extract</param>
            <param name="d11">Start elevation</param>
            <param name="d12">Elevation increment</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SliceIPJ(System.String,GeoEngine.Core.GXNetX.CIPJ,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Extract a slice of a voxel based on an IPJ</summary>
            <param name="str1">Grid Name</param>
            <param name="oIPJ2">Grid IPJ (includes orientation, etc)</param>
            <param name="i3">&amp;lt;define&amp;gt;VOX_SLICE_MODE&amp;lt;/define&amp;gt;</param>
            <param name="d4">Grid Origin X</param>
            <param name="d5">Grid Origin Y</param>
            <param name="d6">Grid Cell Size in X</param>
            <param name="d7">Grid Cell Size in Y</param>
            <param name="i8">Grid cells in X</param>
            <param name="i9">Grid cells in Y</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SetTPAT(GeoEngine.Core.GXNetX.CTPAT)">
            <summary>Set a thematic voxel's TPAT object.</summary>
            <param name="oTPAT1">TPAT object to store</param>
            <remarks>
Each row in the TPAT object corresponds to a stored index
value in the thematic voxel. The TPAT should NOT be modified
by the addition or deletion of items, if it is to be
restored into the VOX object, but the CODE, LABEL, DESCRIPTION
or COLOR info can be changed.
The TPAT object is stored inside the VOX META object.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SetSimpleLocation(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set Simple Location information</summary>
            <param name="d1">Origin X</param>
            <param name="d2">Origin Y</param>
            <param name="d3">Origin Z</param>
            <param name="d4">Cell Sizes in X (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not changed)</param>
            <param name="d5">Cell Sizes in Y (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not changed)</param>
            <param name="d6">Cell Sizes in Z (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not changed)</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SetOrigin(System.Int32,System.Double,System.Double,System.Double)">
            <summary>Set the Voxel Origin</summary>
            <param name="i1">Type of origin being set &amp;lt;define&amp;gt;VOX_ORIGIN&amp;lt;/define&amp;gt;</param>
            <param name="d2">Origin X</param>
            <param name="d3">Origin Y</param>
            <param name="d4">Origin Z</param>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Set the metadata of a voxel.</summary>
            <param name="oMETA1">META object to add to VOX's meta</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SetLocation(System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Set Location information</summary>
            <param name="d1">Origin X</param>
            <param name="d2">Origin Y</param>
            <param name="d3">Origin Z</param>
            <param name="oVV4">Cell sizes in X</param>
            <param name="oVV5">Cell sizes in Y</param>
            <param name="oVV6">Cell sizes in Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the projection of the voxel.</summary>
            <param name="oIPJ1">IPJ object to save VOX's meta to</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SampleVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Sample a voxel at multiple locations.</summary>
            <param name="oVV1">X locations (input)</param>
            <param name="oVV2">Y locations (input)</param>
            <param name="oVV3">Z locations (input)</param>
            <param name="i4">Interpolation mode: 0 - linear, 1 - nearest</param>
            <param name="oVV5">Returned values</param>
            <remarks>Sample at voxel at XYZ locations input in VVs. Values returned in a VV.</remarks>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SampleCDIToTopography(GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV,System.Int32,System.String,System.String)">
            <summary>
Sample a voxel at fixed elevations along a path in a CDI database, and output them to an array channel, deleting leading dummy values, and
writing the elevation of the first non-dummy item to a topography channel.
</summary>
            <param name="oDB1">CDI Database handle</param>
            <param name="i2">Line handle</param>
            <param name="i3">X channel handle</param>
            <param name="i4">Y channel handle</param>
            <param name="oVV5">Z values to sample at each X, Y</param>
            <param name="i6">Interpolation mode: 0 - linear, 1 - nearest</param>
            <param name="str7">Output data array channel name</param>
            <param name="str8">Output topography channel name</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.SampleCDI(GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Sample a voxel at locations/elevations in a CDI database.</summary>
            <param name="oDB1">CDI Database handle</param>
            <param name="i2">Line handle</param>
            <param name="i3">X channel handle</param>
            <param name="i4">Y channel handle</param>
            <param name="i5">Depth array channel handle</param>
            <param name="i6">Depths sign: 0 - positive down, 1 - negative down</param>
            <param name="i7">Elevation channel handle (can be &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt;)</param>
            <param name="i8">Interpolation mode: 0 - linear, 1 - nearest</param>
            <param name="str9">Output channel name</param>
            <remarks>
A "CDI" database does not need to be conductivity/depth.
It normally contains an array channel of depth values for
each (X, Y) location, with corresponding data array channels of
values taken at those (X, Y, Z) locations.
If the optional elevation channel is used, its value is used as an
offset to the depth channel values. Depths are positive down by
default; use the "Negative depths down" parameter if the depths
become more negative as you go deeper.
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.RescaleCellSizes(System.Double)">
            <summary>Multiply all cell sizes by a fixed factor.</summary>
            <param name="d1">Scaling factor (&gt;0)</param>
            <remarks>
This is useful, for instance for converting sizes in one
unit to sizes in another unit if changing the projection
and the projection's unit changes, since the voxel inherits
its projection's units.
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ResamplePG(GeoEngine.Core.GXNetX.CIPJ,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>Resample a voxel over an input volume to a PG.</summary>
            <param name="oIPJ1">Projection to use for Origin, Spacing values</param>
            <param name="d2">Origin X</param>
            <param name="d3">Origin Y</param>
            <param name="d4">Origin Z</param>
            <param name="d5">Spacing in X</param>
            <param name="d6">Spacing in Y</param>
            <param name="d7">Spacing in Z</param>
            <param name="i8">Samples in X</param>
            <param name="i9">Samples in Y</param>
            <param name="i10">Samples in Z</param>
            <param name="d11">Minimum Z to resample (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d12">Maximum Z to resample (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="i13">&amp;lt;define&amp;gt;VOX_SLICE_MODE&amp;lt;/define&amp;gt;</param>
            <remarks>
Creates and dummies a PG object based on the input
dimensions, then resamples the voxel to the pager
at the locations determined by input projection, origin and spacings.
</remarks>
            <returns>PG object, terminates on error</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ReGrid(GeoEngine.Core.GXNetX.CVOX,GeoEngine.Core.GXNetX.CREG,System.String)">
            <summary>Regrid a Voxel.</summary>
            <param name="oVOX1">VOX object to regrid</param>
            <param name="oREG2">Parameters (not implemented)</param>
            <param name="str3">Output voxel file name.</param>
            <available_version>7.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.rComputeCellSize(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Compute the Cell size based on specific Area</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">MinX</param>
            <param name="d2">MinY</param>
            <param name="d3">MinZ</param>
            <param name="d4">MaxX</param>
            <param name="d5">MaxY</param>
            <param name="d6">MaxZ</param>
            <returns>Cell Size</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.NearestNeighbourGrid(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a VOX from point VV's using the Nearest Neighbours method.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="d2">Cell size (DUMMY for default)</param>
            <param name="d3">Maximum radius (DUMMY for none)</param>
            <param name="i4">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oVV5">X VV</param>
            <param name="oVV6">Y VV</param>
            <param name="oVV7">Z VV</param>
            <param name="oVV8">Data VV</param>
            <param name="oIPJ9" />
            <returns>VOX Object</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Merge(GeoEngine.Core.GXNetX.CVOX,GeoEngine.Core.GXNetX.CREG,System.String)">
            <summary>Merge two Voxels.</summary>
            <param name="oVOX1">VOX object</param>
            <param name="oREG2">Parameters (see above)</param>
            <param name="str3">Output voxel file name.</param>
            <available_version>7.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Math(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Produces a new voxes using a formula on existing voxels/Grids</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Master VOX Name</param>
            <param name="str2">Master VOX Variable Name</param>
            <param name="str3">Output VOX Name</param>
            <param name="str4">Output VOX Variable Name</param>
            <param name="str5">Formula</param>
            <param name="oLST6">List of Voxels/Grids to use as inputs</param>
            <remarks>The input voxels must all be of the same type.</remarks>
            <returns>VOXEL handle</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Krig(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CREG)">
            <summary>A more compact and extensible form of LogGridPointsZEx_VOX.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="d2">Cell size (DUMMY for default)</param>
            <param name="i3">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oVV4">X VV</param>
            <param name="oVV5">Y VV</param>
            <param name="oVV6">Z VV</param>
            <param name="oVV7">Data VV</param>
            <param name="oIPJ8" />
            <param name="oREG9" />
            <remarks>
Optional Parameters.

If these values are not set in the REG, then default parameters will be used.

ERROR_VOXEL:		Name of error VOX ("" for none)
CELLSIZEZ:      Z Cell size string (space delimited, "" for default)
RADIUS_MIN:		Minimum Search Radius (REAL) (Default = 4) (Blanking Distance)
RADIUS_MAX:		Maximum Search Radius (REAL) (Default = 16)
SEARCH_MIN:		Minimum Search Points (INT) (Default = 16)
SEARCH_MAX:		Maximum Search Points (INT) (Default = 32)
VARIOGRAM_ONLY: Set to 1 to calculate the variogram only (INT) (Default = 0)
MODEL:				Variogram Model number 1-power, 2-sperical, 3-gaussian, 4-exponential  (INT) (Default = 2)
POWER:          Power (Default = DUMMY)
SLOPE:          Slope (REAL) (if input is DUMMY, value calculated and set on return)
RANGE:          Range (REAL) (if input is DUMMY, value calculated and set on return)
SILL :          Sill (REAL) (if input is DUMMY, value calculated and set on return)
STRIKE:				Strike (REAL) (Default = 0)
DIP:					Dip (REAL)	(Default = 90)
PLUNGE:				Plunge (REAL) (Default = 0)
STRIKE WEIGHT:	Along-Strike Weight (REAL) (Default = 1)
DIP_WEIGHT:      Down-Dip Weight (REAL) (Default = 1)
LOG_OPT:			One of &amp;lt;define&amp;gt;VOX_GRID_LOGOPT&amp;lt;/define&amp;gt; (Default = 0)
MIN_LOG:			Log Minimum (REAL)	(Default = 1)
MIN_X:				Minimum X (REAL) (default = DUMMY to determine from the data. If input, nearest lt. or eq. multiple of cell size chosen)
MAX_X:				Maximum X (REAL) (default = DUMMY to determine from the data. If input, nearest gt. or eq. multiple of cell size chosen)
MIN_Y:				Minimum Y (REAL) (default = DUMMY to determine from the data. If input, nearest lt. or eq. external multiple of cell size chosen)
MAX_Y:				Maximum Y (REAL) (default = DUMMY to determine from the data. If input, nearest gt. or eq. multiple of cell size chosen)
MIN_Z:				Minimum Z (REAL) (default = DUMMY to determine from the data. If input, nearest lt. or eq. multiple of cell size chosen)
MAX_Z:				Maximum Z (REAL) (default = DUMMY to determine from the data. If input, nearest gt. or eq. multiple of cell size chosen)A more compact and extensible form of LogGridPointsZEx_VOX. Only the most
basic parameters are entered directly. Optional parameters are passed via a REG object.
</remarks>
            <returns>VOX Object</returns>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.LogGridPointsZEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.String,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double@,System.Double@,System.Double,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Log grid a VOX from point VV's (using variable Z's)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of error VOX ("" for none)</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="str4">Cell size in Z ("" for default)</param>
            <param name="i5">Variogram Only</param>
            <param name="d6">Minimum Search Radius (DUMMY for none)</param>
            <param name="d7">Maximum Search Radius (DUMMY for none)</param>
            <param name="i8">Minimum Search Points</param>
            <param name="i9">Maximum Search Points</param>
            <param name="i10">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d11">Power</param>
            <param name="d12">Slope</param>
            <param name="d13">Range</param>
            <param name="d14">Nugget</param>
            <param name="d15">Sill</param>
            <param name="d16">Strike</param>
            <param name="d17">Dip</param>
            <param name="d18">Plunge</param>
            <param name="d19">Strike Weight</param>
            <param name="d20">Dip Plane Weight</param>
            <param name="i21">&amp;lt;define&amp;gt;VOX_GRID_LOGOPT&amp;lt;/define&amp;gt; Log Option</param>
            <param name="d22">Minimum log</param>
            <param name="i23">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oVV24">X VV</param>
            <param name="oVV25">Y VV</param>
            <param name="oVV26">Z VV</param>
            <param name="oVV27">Data VV</param>
            <param name="oIPJ28" />
            <returns>VOX Object</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.iSetCellSizeStrings(System.String,System.String,System.String)">
            <summary>Set the Location Strings</summary>
            <param name="str1">X String</param>
            <param name="str2">Y String</param>
            <param name="str3">Z String</param>
            <returns>
0 - Ok
1 - Invalid data
</returns>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.iIsVectorVoxel">
            <summary>Is this a vector voxel?</summary>
            <remarks>
A vector voxel is one where each data element consists of 3 4-byte float values.
Vector voxels normally have the file type "geosoft_vectorvoxel".
</remarks>
            <returns>1 if VOX is a vector voxel</returns>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.iIsThematic">
            <summary>Is this a thematic voxel?</summary>
            <remarks>
A thematic voxel is one where the stored integer values
represent indices into an internally stored TPAT object.
Thematic voxels contain their own color definitions, and
normal numerical operations, such as applying ITRs for display,
are not valid.
</remarks>
            <returns>1 if VOX is thematic</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.IGetCellSizeStrings(System.String@,System.String@,System.String@,System.Double,System.Double,System.Double)">
            <summary>Get the Location Strings</summary>
            <param name="str1">X String</param>
            <param name="str2">Y String</param>
            <param name="str3">Z String</param>
            <param name="d4">Scale to multiply X</param>
            <param name="d5">Scale to multiply Y</param>
            <param name="d6">Scale to multiply Z</param>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.iCanAppendTo(System.String)">
            <summary>Check if this voxel can append to a surface file.</summary>
            <param name="str1">Surface file</param>
            <returns>1 if can append</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GridPointsZEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.String,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double@,System.Double@,System.Double,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a VOX from point VV's (using variable Z's)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of error VOX ("" for none)</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="str4">Cell size in Z ("" for default)</param>
            <param name="i5">Variogram Only</param>
            <param name="d6">Minimum Search Radius (DUMMY for none)</param>
            <param name="d7">Maximum Search Radius (DUMMY for none)</param>
            <param name="i8">Minimum Search Points</param>
            <param name="i9">Maximum Search Points</param>
            <param name="i10">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d11">Power</param>
            <param name="d12">Slope</param>
            <param name="d13">Range</param>
            <param name="d14">Nugget</param>
            <param name="d15">Sill</param>
            <param name="d16">Strike</param>
            <param name="d17">Dip</param>
            <param name="d18">Plunge</param>
            <param name="d19">Strike Weight</param>
            <param name="d20">Dip Plane Weight</param>
            <param name="i21">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oVV22">X VV</param>
            <param name="oVV23">Y VV</param>
            <param name="oVV24">Z VV</param>
            <param name="oVV25">Data VV</param>
            <param name="oIPJ26" />
            <returns>VOX Object</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GridPointsZ(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.String,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a VOX from point VV's (using variable Z's)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of error VOX ("" for none)</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="str4">Cell size in Z ("" for default)</param>
            <param name="i5">Variogram Only</param>
            <param name="d6">Minimum Search Radius (DUMMY for none)</param>
            <param name="d7">Maximum Search Radius (DUMMY for none)</param>
            <param name="i8">Minimum Search Points</param>
            <param name="i9">Maximum Search Points</param>
            <param name="i10">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d11">Power</param>
            <param name="d12">Slope</param>
            <param name="d13">Range</param>
            <param name="d14">Nugget</param>
            <param name="d15">Sill</param>
            <param name="i16">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oVV17">X VV</param>
            <param name="oVV18">Y VV</param>
            <param name="oVV19">Z VV</param>
            <param name="oVV20">Data VV</param>
            <param name="oIPJ21" />
            <returns>VOX Object</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GridPoints(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a VOX from point VV's.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of error VOX ("" for none)</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="i4">Variogram Only</param>
            <param name="d5">Minimum Search Radius (DUMMY for none)</param>
            <param name="d6">Maximum Search Radius (DUMMY for none)</param>
            <param name="i7">Minimum Search Points</param>
            <param name="i8">Maximum Search Points</param>
            <param name="i9">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d10">Power</param>
            <param name="d11">Slope</param>
            <param name="d12">Range</param>
            <param name="d13">Nugget</param>
            <param name="d14">Sill</param>
            <param name="i15">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oVV16">X VV</param>
            <param name="oVV17">Y VV</param>
            <param name="oVV18">Z VV</param>
            <param name="oVV19">Data VV</param>
            <param name="oIPJ20" />
            <returns>VOX Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetTPAT(GeoEngine.Core.GXNetX.CTPAT)">
            <summary>Get a copy of a thematic voxel's TPAT object.</summary>
            <param name="oTPAT1">TPAT object to get</param>
            <remarks>
Each row in the TPAT object corresponds to a stored index
value in the thematic voxel. The TPAT should NOT be modified
by the addition or deletion of items, if it is to be
restored into the VOX object, but the CODE, LABEL, DESCRIPTION
or COLOR info can be changed.
The TPAT object is stored inside the VOX META object.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetStats">
            <summary>Get precomputed statistics on this object.</summary>
            <returns>ST object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetSimpleLocation(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get Simple Location information</summary>
            <param name="d1">Origin X</param>
            <param name="d2">Origin Y</param>
            <param name="d3">Origin Z</param>
            <param name="d4">Cell Sizes in X (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not uniform)</param>
            <param name="d5">Cell Sizes in Y (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not uniform)</param>
            <param name="d6">Cell Sizes in Z (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not uniform)</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetRealLocation(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the location of a voxel with origin and scaled xyz vectors</summary>
            <param name="d1">Origin X</param>
            <param name="d2">Origin Y</param>
            <param name="d3">Origin Z</param>
            <param name="d4">VectX X</param>
            <param name="d5">VectX Y</param>
            <param name="d6">VectX Z</param>
            <param name="d7">VectY X</param>
            <param name="d8">VectY Y</param>
            <param name="d9">VectY Z</param>
            <param name="d10">VectZ X</param>
            <param name="d11">VectZ Y</param>
            <param name="d12">VectZ Z</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the metadata of a voxel.</summary>
            <param name="oMETA1">META object to save VOX's meta to</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetLocationPoints(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get the computed location points.</summary>
            <param name="oVV1">Locations in X</param>
            <param name="oVV2">Locations in Y</param>
            <param name="oVV3">Locations in Z</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetLocation(System.Double@,System.Double@,System.Double@,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get Location information</summary>
            <param name="d1">Origin X</param>
            <param name="d2">Origin Y</param>
            <param name="d3">Origin Z</param>
            <param name="oVV4">Cell sizes in X</param>
            <param name="oVV5">Cell sizes in Y</param>
            <param name="oVV6">Cell sizes in Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetLimitsXYZ(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the range in true XYZ of non-dummy data.</summary>
            <param name="d1">Minimum valid data in X.</param>
            <param name="d2">Minimum valid data in Y.</param>
            <param name="d3">Minimum valid data in Z.</param>
            <param name="d4">Maximum valid data in X.</param>
            <param name="d5">Maximum valid data in Y.</param>
            <param name="d6">Maximum valid data in Z.</param>
            <remarks>
Find the non-dummy volume of a VOX in true (X, Y, Z). This method
works for voxels which are rotated or oriented in 3D, and returns
the true min and max X, Y and Z limits in the data.
The bounds are the bounds for the voxel
center points. If the voxel is all dummies,
returns &amp;lt;define&amp;gt;rMAX&amp;lt;/define&amp;gt; for the minima, and &amp;lt;define&amp;gt;rMIN&amp;lt;/define&amp;gt; for the maxima.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetLimits(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Get the range of indices with non-dummy data.</summary>
            <param name="i1">Index of minimum valid data in X.</param>
            <param name="i2">Index of minimum valid data in Y.</param>
            <param name="i3">Index of minimum valid data in Z.</param>
            <param name="i4">Index of maximum valid data in X.</param>
            <param name="i5">Index of maximum valid data in Y.</param>
            <param name="i6">Index of maximum valid data in Z.</param>
            <remarks>
Find the non-dummy volume of a VOX object. If the voxel is all dummies,
returns &amp;lt;define&amp;gt;iMAX&amp;lt;/define&amp;gt; for the minima, and &amp;lt;define&amp;gt;iMIN&amp;lt;/define&amp;gt; for the maxima.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the projection of the voxel.</summary>
            <param name="oIPJ1">IPJ object to save VOX's meta to</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetInfo(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Get information about a voxel.</summary>
            <param name="i1">Data Type</param>
            <param name="i2">Array Size</param>
            <param name="i3">Elements in X</param>
            <param name="i4">Elements in Y</param>
            <param name="i5">Elements in Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetGridSectionCellSizes(System.Double,System.Double@,System.Double@)">
            <summary>Get default cell sizes in X and Y for a section grid.</summary>
            <param name="d1">Input section azimuth (degrees CCW from North)</param>
            <param name="d2">Returned X cell size (horizontal) in m</param>
            <param name="d3">Returned Y cell size (vertical) in m</param>
            <remarks>
This function determines default cell sizes for a vertical grid
slicing a voxel. It tries to match the "X" and "Y" sizes (in the grid
coordinates) with the projection of the voxel's cells onto the grid
plane. It uses a few simple rules:

If the voxel is rotated about a horizontal axis (i.e. if its own "Z" axis
is not vertical, then both cell sizes are set to the smallest voxel dimension
(a single volume pixel) in X, Y and Z.

If the voxel is "horizontal", then the angle between the
section azimuth and the voxel's own X and Y axes is used to
calculate a value which varies between the minimum X size and the
minimum Y size, and this is used for the grid's "X" cell size.
(in other words, if the section is parallel to the voxel "X" axis,
then the returned "X" cells size is equal to the voxel's minimum "Y" cell size.
The grid's "Y" cell size is set to the voxel's minimum "Z" cell size.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetGOCADLocation(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the location of a voxel with origin and scaled xyz vectors for use with GOCAD.</summary>
            <param name="d1">Origin X</param>
            <param name="d2">Origin Y</param>
            <param name="d3">Origin Z</param>
            <param name="d4">VectX X</param>
            <param name="d5">VectX Y</param>
            <param name="d6">VectX Z</param>
            <param name="d7">VectY X</param>
            <param name="d8">VectY Y</param>
            <param name="d9">VectY Z</param>
            <param name="d10">VectZ X</param>
            <param name="d11">VectZ Y</param>
            <param name="d12">VectZ Z</param>
            <remarks>
This is used for GOCAD voxel calculations, and begins with the
origin at (0,0,0), not the actual location of the corner point.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GetArea(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the area of the voxel.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Min Z</param>
            <param name="d4">Max X</param>
            <param name="d5">Max Y</param>
            <param name="d6">Max Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.EndGenerateBySubsetPG(System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Output the voxel, after adding all the subset PGs.</summary>
            <param name="str1">Name of output VOX</param>
            <param name="d2">Origin X</param>
            <param name="d3">Origin Y</param>
            <param name="d4">Origin Z</param>
            <param name="d5">Cell Size X</param>
            <param name="d6">Cell Size Y</param>
            <param name="d7">Cell Size Z</param>
            <param name="oIPJ8">Projection</param>
            <param name="oMETA9">Metadata</param>
            <remarks>You must begin by calling InitGenerateBySubsetPG_VOX and add data using AddGenerateBySubsetPG_VOX.</remarks>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.AddGenerateBySubsetPG(GeoEngine.Core.GXNetX.CPG,System.Int32,System.Int32)">
            <summary>
Add a subset 3D  pagers. These should be "slabs", 16 wide in the input direction, and the size of the
full voxel in the other two directions.
</summary>
            <param name="oPG1">Subset pager with the Voxel Data</param>
            <param name="i2">Subset orientation - the "16" (thin) dimension is in the other axis.&amp;lt;define&amp;gt;VOX_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">Offset of the subset PG corner, along the "thin" dimension.</param>
            <remarks>See InitGenerateBySubsetPG_VOX and EndGenerateBySubsetPG_VOX.</remarks>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.InitGenerateBySubsetPG(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initialize the generate of a VOX from a series of 3D subset pagers</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="i2">Points in X</param>
            <param name="i3">Points in Y</param>
            <param name="i4">Points in Z</param>
            <remarks>
Call InitGenerateBySubsetPG_VOX first, then add a series of subset PGs using AddGenerateBySubsetPG_VOX, and finally
serialize using EndGenerateBySubsetPG_VOX
</remarks>
            <returns>VOX Object</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateConstantValueVV(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Int32,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Generate a VOX with a constant value, cells sizes passed in VVs.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="d2">The Value to use</param>
            <param name="i3">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="d4">Origin X</param>
            <param name="d5">Origin Y</param>
            <param name="d6">Origin Z</param>
            <param name="oVV7">Cell Sizes X</param>
            <param name="oVV8">Cell Sizes Y</param>
            <param name="oVV9">Cell Sizes Z</param>
            <param name="oIPJ10">Projection</param>
            <param name="oMETA11">Metadata</param>
            <returns>VOX Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GeneratePGVV(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CPG,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Generate a VOX from a 3D Pager, cells sizes passed in VVs.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="oPG2">Pager with the Voxel Data</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Origin Z</param>
            <param name="oVV6">Cell Sizes X</param>
            <param name="oVV7">Cell Sizes Y</param>
            <param name="oVV8">Cell Sizes Z</param>
            <param name="oIPJ9">Projection</param>
            <param name="oMETA10">Metadata</param>
            <remarks>The input cell size VVs' lengths must match the input PG dimensions.</remarks>
            <returns>VOX Object</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateConstantValue(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Generate a VOX with a constant value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="d2">Value to use</param>
            <param name="i3">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="d4">Origin X</param>
            <param name="d5">Origin Y</param>
            <param name="d6">Origin Z</param>
            <param name="d7">Cell Size X</param>
            <param name="d8">Cell Size Y</param>
            <param name="d9">Cell Size Z</param>
            <param name="i10">Cell Count X</param>
            <param name="i11">Cell Count Y</param>
            <param name="i12">Cell Count Z</param>
            <param name="oIPJ13">Projection</param>
            <param name="oMETA14">Metadata</param>
            <returns>VOX Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GeneratePG(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CPG,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Generate a VOX from a 3D Pager</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="oPG2">Pager with the Voxel Data</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Origin Z</param>
            <param name="d6">Cell Size X</param>
            <param name="d7">Cell Size Y</param>
            <param name="d8">Cell Size Z</param>
            <param name="oIPJ9">Projection</param>
            <param name="oMETA10">Metadata</param>
            <returns>VOX Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateVectorVoxelFromDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Generate a vector voxel VOX from a Database</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel Name</param>
            <param name="oDB2">DB To import from</param>
            <param name="i3">VOX_VECTORVOX_IMPORTImport XYZ, UVW or Amplitude/Inclination/Declination channels</param>
            <param name="i4">Symbol to import X, U or Amplitude data from</param>
            <param name="i5">Symbol to import Y, V or Inclination data from</param>
            <param name="i6">Symbol to import Z, W or Declination data from</param>
            <param name="d7">Inclination value for &amp;lt;define&amp;gt;VOX_VECTORVOX_UVW&amp;lt;/define&amp;gt; (-90Â° to 90Â°)</param>
            <param name="d8">Declination value for &amp;lt;define&amp;gt;VOX_VECTORVOX_UVW&amp;lt;/define&amp;gt; (-180Â° to 180Â°)</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.GenerateDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32)">
            <summary>Generate a VOX from a Database</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel Name</param>
            <param name="oDB2">DB To import from</param>
            <param name="i3">Symbol to import data from</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Filter(System.Int32,System.String,System.Int32,System.Int32,System.String)">
            <summary>Apply a 3D filter to a voxel.</summary>
            <param name="i1">&amp;lt;define&amp;gt;VOX_FILTER3D&amp;lt;/define&amp;gt;</param>
            <param name="str2">Filter file, if filter is &amp;lt;define&amp;gt;VOX_FILTER3D_FILE&amp;lt;/define&amp;gt;</param>
            <param name="i3">Number of filter passes</param>
            <param name="i4">(1: interpolate dummies)</param>
            <param name="str5">Output voxel file name.</param>
            <available_version>7.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportXYZ(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export a Voxel to an XYZ File</summary>
            <param name="str1">File Name</param>
            <param name="i2">&amp;lt;define&amp;gt;VOX_DIRECTION&amp;lt;/define&amp;gt;</param>
            <param name="i3">Reverse X ? (0/1)</param>
            <param name="i4">Reverse Y ? (0/1)</param>
            <param name="i5">Reverse Z ? (0/1)</param>
            <param name="i6">Write Dummies? (0/1)</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportJIGsXML(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Export a VOX to a compressed XML file. Verbose version.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel file name</param>
            <param name="str2">Output XML file</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportSegY(System.String,System.Double)">
            <summary>Export a voxel to a depth SEG-Y file</summary>
            <param name="str1">SEG-Y filename to create</param>
            <param name="d2">Sampling interval (can be &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; if input voxel has constant Z cell size)</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportXML(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.String)">
            <summary>Export a VOX to a compressed XML file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel file name</param>
            <param name="i2">CRC returned - not implemented - always returns 0.</param>
            <param name="str3">Output XML file</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportToGrids(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>Export all layers of this VOX into grid files, with optional cell size.</summary>
            <param name="str1">Name of grids (each layers adds _Number to the name)</param>
            <param name="i2">&amp;lt;define&amp;gt;VOX_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">Starting index</param>
            <param name="i4">Increment in index</param>
            <param name="i5">Total number of grids (-1 or &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; for all)</param>
            <param name="d6">Cell size (can be &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;)</param>
            <param name="i7">&amp;lt;define&amp;gt;VOX_SLICE_MODE&amp;lt;/define&amp;gt;</param>
            <remarks>
If the cell size is not specified, then:
1. If the cell sizes are uniform in a given direction, that size is used
2. If the cell sizes are variable in a given direction, then the smallest size is used
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.ExportIMG(System.String,System.Int32)">
            <summary>Export all layers of this VOX into grid files.</summary>
            <param name="str1">Name of grids (each layers adds _Number to the name)</param>
            <param name="i2">&amp;lt;define&amp;gt;VOX_DIR&amp;lt;/define&amp;gt;</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Dump(System.String)">
            <summary>Export all layers of this VOX in all directions.</summary>
            <param name="str1">Name of grids (each layers adds _Dir_Z to the name)</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.CreateTypePG(System.Int32)">
            <summary>Create a 3D PG from a VOX object with a specific Type</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <returns>PG Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.CreatePG">
            <summary>Create a 3D PG from a VOX object</summary>
            <returns>PG Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create a handle to an VOX object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>VOX handle, terminates if creation fails</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVOX.CalcStats(GeoEngine.Core.GXNetX.CST)">
            <summary>Calculate Statistics</summary>
            <param name="oST1">ST Object</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVOX">
            <summary>

       High Performance 3D Grid. Designed for accessing
       3D grids quickly using slices. It designed arround
       non-uniform multi-resolution  compressed storage.
       To sample a voxel at specific locations, use VOXE.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.SetString(System.Int32,System.String)">
            <summary>Set a string element in a VM.</summary>
            <param name="i1">Element to set</param>
            <param name="str2">String to set</param>
            <remarks>
Element being set cannot be &lt; 0.

If the element is &gt; current VM length, the VM length is
increased.  Reallocating VM lengths can lead to fragmented
memory and should be avoided if possible.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.SetReal(System.Int32,System.Double)">
            <summary>Set a real element in a VM.</summary>
            <param name="i1">Element to set</param>
            <param name="d2">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.

If the element is &gt; current VM length, the VM length is
increased.  Reallocating VM lengths can lead to fragmented
memory and should be avoided if possible.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.SetInt(System.Int32,System.Int32)">
            <summary>Set an integer element in a VM.</summary>
            <param name="i1">Element to set</param>
            <param name="i2">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.

If the element is &gt; current VM length, the VM length is
increased.  Reallocating VM lengths can lead to fragmented
memory and should be avoided if possible.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.rGetReal(System.Int32)">
            <summary>Get a real element from a VM.</summary>
            <param name="i1">Element wanted</param>
            <returns>
Element wanted, or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;
if the value is dummy or outside of the range of data.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.ReSize(System.Int32)">
            <summary>Re-set the size of a VM.</summary>
            <param name="i1">New size (number of elements)</param>
            <remarks>If increasing the VM size, new elements are set to dummies.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.iLength">
            <summary>Returns current VM length.</summary>
            <returns># of elements in the VM.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.IGetString(System.Int32,System.String@)">
            <summary>Get a string element from a VM.</summary>
            <param name="i1">Element wanted</param>
            <param name="str2">String in which to place element</param>
            <remarks>
Returns element wanted, or blank string
if the value is dummy or outside of the range of data.

Type conversions are performed if necessary.  Dummy values
are converted to "*" string.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.iGetInt(System.Int32)">
            <summary>Get an integer element from a VM.</summary>
            <param name="i1">Element wanted</param>
            <returns>
Element wanted, or &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt;
if the value is dummy or outside of the range of data.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.CreateExt(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>Create a VM, using one of the &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; special data types.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="i2">VM length (less than 16777215)</param>
            <remarks>The VM elements are initialized to dummies.</remarks>
            <returns>VM Object</returns>
            <available_version>6.4.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVM.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>Create a VM.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GEO_VAR&amp;lt;/define&amp;gt;</param>
            <param name="i2">VM length (less than 16777215)</param>
            <remarks>The VM elements are initialized to dummies.</remarks>
            <returns>VM Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVM">
            <summary>

       In-memory vector data methods
       The VM class will store vector (array) data in a memory buffer which
       can be accessed using the VM methods.
       The main use for the VM class is to store data in a single physical
       memory location.  This memory can then be accessed by a user DLL using
       the GetPtrVM_GEO function defined in gx_extern.h.
       VM memory can be any size, but a VM is intended for handling relatively
       small sets of data compared to a VV, which can work efficiently with
       very large volumes of data.  The acceptable maximum VM size depends on
       the operating system and the performance requirements of an application.
       The best performance is achieved when all VM memory can be stored
       comfortably within the the available system RAM.  If all VM memory
       will not fit in the system RAM, the operating system virtual memory
       manager will be used to swap memory to the operations systems virtual
       memory paging file.  Note that the operating system virtual memory
       manager is much slower than the manager used by Geosoft when working with
       very large arrays in a VV.

       See VV for methods to move data between a VM and a VV.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVECTOR3D.SetITR(GeoEngine.Core.GXNetX.CITR)">
            <summary>Set the ITR of the VECTOR3D</summary>
            <param name="oITR1">ITR object</param>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVECTOR3D.GetITR(GeoEngine.Core.GXNetX.CITR)">
            <summary>Get the ITR of the VECTOR3D</summary>
            <param name="oITR1">ITR object</param>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVECTOR3D">
            <summary>

       VECTOR3D Display object.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iCheckForRepeating2(GeoEngine.Core.GXNetX.CVV,System.Int32,GeoEngine.Core.GXNetX.CVV,System.Double,System.Int32@,System.Int32@)">
            <summary>Window a VA to a VV based on fractional frame</summary>
            <param name="oVV1">Items to test for repeats (length equal to the number of columns in the VA)</param>
            <param name="i2">If set to 1, subtract single values in the following VV from every array row item before testing (e.g. an elevation value)</param>
            <param name="oVV3">Values to subtract from each row before doing the comparison test (length equal to the length of the VA). Can be VV_NULL (-1) if above subtraction parameter is zero</param>
            <param name="d4">Comparison tolerance - set to zero or dummy for exact match</param>
            <param name="i5">Row index of first mismatch</param>
            <param name="i6">Column index of first mismatch</param>
            <remarks>
Returns 1 if all rows contain values which match the input values.
Optionally, row values can be offset by amounts specified with a secondary VV.
This function was designed to detect "depth" array channels, including those which might
have been offset with topography on each row.
An absolute tolerance can be specified to ignore numerical noise.
This version returns the row and column index of first mismatch.
</remarks>
            <returns>1 if rows repeat, 0 if not.</returns>
            <available_version>8.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iCheckForRepeating(GeoEngine.Core.GXNetX.CVV,System.Int32,GeoEngine.Core.GXNetX.CVV,System.Double)">
            <summary>Window a VA to a VV based on fractional frame</summary>
            <param name="oVV1">Items to test for repeats (length equal to the number of columns in the VA)</param>
            <param name="i2">If set to 1, subtract single values in the following VV from every array row item before testing (e.g. an elevation value)</param>
            <param name="oVV3">Values to subtract from each row before doing the comparison test (length equal to the length of the VA). Can be VV_NULL (-1) if above subtraction parameter is zero</param>
            <param name="d4">Comparison tolerance - set to zero or dummy for exact match</param>
            <remarks>
Returns 1 if all rows contain values which match the input values.
Optionally, row values can be offset by amounts specified with a secondary VV.
This function was designed to detect "depth" array channels, including those which might
have been offset with topography on each row.
An absolute tolerance can be specified to ignore numerical noise.
</remarks>
            <returns>1 if rows repeat, 0 if not.</returns>
            <available_version>8.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Window2(System.Double,System.Double,GeoEngine.Core.GXNetX.CVV)">
            <summary>Window a VA to a VV based on fractional frame</summary>
            <param name="d1">Start point (from 0.0)</param>
            <param name="d2">End point (&lt; VA elements - 1.0)</param>
            <param name="oVV3">VV in which to place results</param>
            <remarks>
The defined window must be within the VA element dimensions.
The windowed result will be the simple sum of all
values in the window.
If any values are dummy, the result will be dummy.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Window(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Window a VA to a VV based in intergral frame</summary>
            <param name="i1">First element in the window</param>
            <param name="i2">Number of elements in the window</param>
            <param name="oVV3">VV in which to place results</param>
            <remarks>
The defined window must be within the VA element dimensions.
The windowed result will be the simple sum of all
values in the window.
If any values are dummy, the result will be dummy.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Trans(System.Double,System.Double)">
            <summary>Translate (VA + base ) * mult</summary>
            <param name="d1">Base value</param>
            <param name="d2">Mult value</param>
            <remarks>Supports all VA types using an internal double VV.</remarks>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetVV(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Set a row or column of data in an array from a VV.</summary>
            <param name="i1">Row or Column # (0 is first)</param>
            <param name="i2">&amp;lt;define&amp;gt;VA_OBJECT&amp;lt;/define&amp;gt;</param>
            <param name="oVV3">VV from which to get data</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetString(System.Int32,System.Int32,System.String)">
            <summary>Set a string element in a VA.</summary>
            <param name="i1">Row</param>
            <param name="i2">Column</param>
            <param name="str3">String to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VA length, the VA length is
increased.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetReal(System.Int32,System.Int32,System.Double)">
            <summary>Set a real element in a VA.</summary>
            <param name="i1">Row</param>
            <param name="i2">Column</param>
            <param name="d3">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VA length, the VA length is
increased.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetLn(System.Int32)">
            <summary>Set the length (number of rows) of the VA</summary>
            <param name="i1">Length</param>
            <remarks>
The number of columns in a VA is fixed, and cannot be
altered once the VA is created.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetInt(System.Int32,System.Int32,System.Int32)">
            <summary>Set an integer element in a VA.</summary>
            <param name="i1">Row</param>
            <param name="i2">Column</param>
            <param name="i3">Value to set</param>
            <remarks>
Element being set cannot be &lt; 0.
If the element is &gt; current VA length, the VA length is
increased.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetFidStart(System.Double)">
            <summary>Sets the Fiducial start of a VA</summary>
            <param name="d1">New start</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.SetFidIncr(System.Double)">
            <summary>Sets the Fiducial increment of a VA</summary>
            <param name="d1">New increment</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.rGetReal(System.Int32,System.Int32)">
            <summary>Get a real element from a VA.</summary>
            <param name="i1">Row</param>
            <param name="i2">Column</param>
            <remarks>
Type conversions are performed if necessary.  Dummy values
are converted to "*" string.
</remarks>
            <returns>
Element wanted, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; or blank string
if the value is dummy or outside of the range of data.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.rGetFidStart">
            <summary>Gets the Fiducial start from a VA</summary>
            <returns>Fiducial start of the VA.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.rGetFidIncr">
            <summary>Gets the Fiducial increment from a VA</summary>
            <returns>Fiducial increment of the VA.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Reverse">
            <summary>Reverses the order of the rows in a VA.</summary>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.ReFid(System.Double,System.Double,System.Int32)">
            <summary>Re-sample a VA to a new fid start/icrement</summary>
            <param name="d1">New fid start</param>
            <param name="d2">New fid increment</param>
            <param name="i3">New length</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.RangeDouble(System.Double@,System.Double@)">
            <summary>
Computes the minimum and maximum range of the data, in doubles,
in a vector while ignoring dummies.
</summary>
            <param name="d1">Minimum value - returned</param>
            <param name="d2">Maximum value - returned</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.LookupIndex(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVA)">
            <summary>Lookup a VA from another VA using an index VV.</summary>
            <param name="oVV1">Index VV of REAL</param>
            <param name="oVA2">VA to output results (same type as Data VA)</param>
            <remarks>
Fractional values in the VV will interpolate between the value
at the whole integer value and the next whole integer, dummy
if outside the VA.
</remarks>
            <available_version>6.4.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.IndexOrder(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVA)">
            <summary>Reorder a VA based on an index VV</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVV1">Index VV of type INT</param>
            <param name="oVA2">VA to order</param>
            <remarks>
Given a row index VV (of type INT), this method reorders a
VA. Please make sure that the index holds valid information.
</remarks>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iLen">
            <summary>Return length (number of rows) in a VA.</summary>
            <remarks>iCol_VA returns the number of columns.</remarks>
            <returns>Length of VA</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.IGetString(System.Int32,System.Int32,System.String@)">
            <summary>Get a string element from a VA.</summary>
            <param name="i1">Row</param>
            <param name="i2">Column</param>
            <param name="str3">String in which to place element</param>
            <remarks>
Returns element wanted, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; or blank string
if the value is dummy or outside of the range of data.

Type conversions are performed if necessary.  Dummy values
are converted to "*" string.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iGetInt(System.Int32,System.Int32)">
            <summary>Get an integer element from a VA.</summary>
            <param name="i1">Row</param>
            <param name="i2">Column</param>
            <remarks>
Type conversions are performed if necessary.  Dummy values
are converted to "*" string.
</remarks>
            <returns>
Element wanted, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; or blank string
if the value is dummy or outside of the range of data.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iCol">
            <summary>Return number of columns in VA</summary>
            <remarks>iLen_VA returns the number of rows.</remarks>
            <returns>Columns in VA</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.GetVV(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get a row or column of data as a VV from an array.</summary>
            <param name="i1">Row or Column # (0 is first)</param>
            <param name="i2">&amp;lt;define&amp;gt;VA_OBJECT&amp;lt;/define&amp;gt;</param>
            <param name="oVV3">VV in which to place data</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.GetFullVV">
            <summary>Get the full VV from the VA.</summary>
            <remarks>
No data is copied, this is the handle to the data VV in the VA.
The fid start/increment of the VA is passed to the VV at the time
of the call.  If a new VA is read, you must call GetFull_VV_VA
to get the new fid in the VV.
</remarks>
            <returns>VV Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.CreateVV(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Create a VA using the data in a VV.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVV1">VV with the data</param>
            <param name="i2"># of rows</param>
            <param name="i3"># of columns</param>
            <remarks>See Create_VV</remarks>
            <returns>VA, aborts if creation fails</returns>
            <available_version>7.2.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.CreateExt(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Create a VA, using one of the &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; special data types.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="i2">Maximum number of rows in the VA, &gt;= 0</param>
            <param name="i3">Number of columns in the VA, &gt; 0</param>
            <remarks>See Create_VV</remarks>
            <returns>VA, aborts if creation fails</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Create a VA.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;GEO_VAR&amp;lt;/define&amp;gt;</param>
            <param name="i2">Maximum number of rows in the VA, &gt;= 0</param>
            <param name="i3">Number of columns in the VA, &gt; 0</param>
            <returns>VA Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Copy2(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVA,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Copy part of a vector into part of another vector.</summary>
            <param name="i1">Destination start row</param>
            <param name="i2">Destination start column</param>
            <param name="oVA3">Source VA (can be the same as Destination)</param>
            <param name="i4">Source start row</param>
            <param name="i5">Source start column</param>
            <param name="i6">Number of rows</param>
            <param name="i7">Number of columns</param>
            <remarks>
1. Unlike Copy_VA destination VA is not reallocated, nor are
the dimensions changed. The caller must make any desired changes.

2. All VA types are supported and will be converted using
Convert_GS if necessary.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Copy(GeoEngine.Core.GXNetX.CVA)">
            <summary>Copy one VA to another.</summary>
            <param name="oVA1">source</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Average(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Average elements in a VA by row or column</summary>
            <param name="oVV1">VV in which to place average results</param>
            <param name="i2">&amp;lt;define&amp;gt;VA_AVERAGE&amp;lt;/define&amp;gt;</param>
            <remarks>
The output VV will be dimensioned by the number of
rows or columns in the input VV depending on the
&amp;lt;define&amp;gt;VA_AVERAGE&amp;lt;/define&amp;gt; setting.

Dummies are not included in the average.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.Append(GeoEngine.Core.GXNetX.CVA)">
            <summary>Appends VAs</summary>
            <param name="oVA1">VA to append</param>
            <remarks>
If the VAs have different numbers of columns, the smaller number
is used in the copy operation.
</remarks>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.AddElevationsVVToDepths(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Add one VV value to each row of the VA, output true elevation.</summary>
            <param name="oVV1">Elevations to add</param>
            <param name="i2">Use negative VA depths (0:No, 1:Yes)?</param>
            <remarks>
Adds each value in an input elevation VV to all the values at
the same fid in a depths VA. Includes an option for negative depths down
(e.g. a relative level).
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iSetArray(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte*,System.Int32)">
            <summary>Set a range of data in an array</summary>
            <param name="i1">Starting Row</param>
            <param name="i2">Starting Column</param>
            <param name="i3"># rows</param>
            <param name="i4"># cols</param>
            <param name="b5">Data buffer to copy into VA</param>
            <param name="i6">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CVA.iGetArray(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte*,System.Int32)">
            <summary>Get an array of data from a VA.</summary>
            <param name="i1">Starting Row</param>
            <param name="i2">Starting Column</param>
            <param name="i3"># rows</param>
            <param name="i4"># cols</param>
            <param name="b5">Data buffer to copy VA data into</param>
            <param name="i6">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CVA">
            <summary>

       The VA class is the 2-Dimensional analogue to the VV class.
       When displayed in a database, VA objects are displayed graphically
       as profiles, one to a cell, and can also be displayed one column of
       data at a time by specifying an index; e.g. CH[0]. A VA object is
       declared with a fixed number of columns, which cannot be altered.
       The number of rows, however can be changed, in the same way that
       the length of a VV can be changed. Data can be added or extracted
       using VVs, either by row or column.

       A VA is used to store an array of data in which each element may have
       multiple elements.  For example, 256-channel radiometric data can
       be stored in a VA that is 256 elements wide.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SaveFileLineage(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Add lineage to XML</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Filename of existing metadata to update</param>
            <param name="i2">Output Geosoft Metadata?</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.UpdateFileType(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>
Edit an existing XML metadata file by
changing the file type
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Filename of existing metadata to update</param>
            <param name="str2">New file type</param>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.UpdateExtents2D(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Double,System.Double,System.Double,System.Double)">
            <summary>
Edit an existing XML metadata file by
changing the extents and projection data
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Filename of existing metadata to update</param>
            <param name="oIPJ2">New projection</param>
            <param name="d3">New MinX value</param>
            <param name="d4">New MinY value</param>
            <param name="d5">New MaxX value</param>
            <param name="d6">New MaxY value</param>
            <available_version>7.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetTitle(System.String)">
            <summary>Set the Title</summary>
            <param name="str1">Title</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetProject(System.String)">
            <summary>Set the File Project</summary>
            <param name="str1">Project</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetMetaCreator(System.String)">
            <summary>Set the Meta Creator</summary>
            <param name="str1">MetaCreator</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetMetaCreationDate(System.Double)">
            <summary>Set the Meta Creation Date</summary>
            <param name="d1">Date</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the IPJ</summary>
            <param name="oIPJ1">Date</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetFormat(System.String)">
            <summary>Set the File Format</summary>
            <param name="str1">Format</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetExtents3d(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the 3d Extents</summary>
            <param name="d1">MinX</param>
            <param name="d2">MinY</param>
            <param name="d3">MinZ</param>
            <param name="d4">MaxX</param>
            <param name="d5">MaxY</param>
            <param name="d6">MaxZ</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetExtents2d(System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the 2d Extents</summary>
            <param name="d1">MinX</param>
            <param name="d2">MinY</param>
            <param name="d3">MaxX</param>
            <param name="d4">MaxY</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetDataCreator(System.String)">
            <summary>Set the Data Creator</summary>
            <param name="str1">DataCreator</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.SetDataCreationDate(System.Double)">
            <summary>Set the Data Creation Date</summary>
            <param name="d1">Date</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.Serial(System.Int32,System.String)">
            <summary>Serialize USERMETA to a BF.</summary>
            <param name="i1">Output Geosoft Metadata?</param>
            <param name="str2">File name to save to</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.IGetTitle(System.String@)">
            <summary>Get the Title</summary>
            <param name="str1">Title returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.IGetProject(System.String@)">
            <summary>Get the File Project</summary>
            <param name="str1">Title returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.IGetMetaCreator(System.String@)">
            <summary>Get the Meta Creator</summary>
            <param name="str1">MetaCreator returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.IGetFormat(System.String@)">
            <summary>Get the File Format</summary>
            <param name="str1">Title returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.IGetDataCreator(System.String@)">
            <summary>Get the Data Creator</summary>
            <param name="str1">DataCreator returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.iCompare(GeoEngine.Core.GXNetX.CUSERMETA)">
            <summary>Compare 2 USERMETA's</summary>
            <param name="oUSERMETA1">Second UERMETA</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.GetXMLFormat(System.Int32@)">
            <summary>Get the XML Format</summary>
            <param name="i1">&amp;lt;define&amp;gt;USERMETA_FORMAT&amp;lt;/define&amp;gt;</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.GetMetaCreationDate(System.Double@)">
            <summary>Get the Meta Creation Date</summary>
            <param name="d1">Date</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the IPJ</summary>
            <param name="oIPJ1">Date</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.GetExtents3d(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the 3d Extents</summary>
            <param name="d1">MinX</param>
            <param name="d2">MinY</param>
            <param name="d3">MinZ</param>
            <param name="d4">MaxX</param>
            <param name="d5">MaxY</param>
            <param name="d6">MaxZ</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.GetExtents2d(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the 2d Extents</summary>
            <param name="d1">MinX</param>
            <param name="d2">MinY</param>
            <param name="d3">MaxX</param>
            <param name="d4">MaxY</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.GetDataCreationDate(System.Double@)">
            <summary>Get the Data Creation Date</summary>
            <param name="d1">Date</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create a USERMETA from a file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>USERMETA Object</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CUSERMETA.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Creates an empty USERMETA object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;USERMETA_FORMAT&amp;lt;/define&amp;gt; Type of Meta to create</param>
            <returns>USERMETA Object</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CUSERMETA">
            <summary>

       The USERMETA class handles user style metadata tied to real
       data.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTR.Copy(GeoEngine.Core.GXNetX.CTR)">
            <summary>This method copies a table resource to another trend table resource.</summary>
            <param name="oTR1">Source Trend Object to Copy</param>
            <available_version>8.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTR.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Creates a Trend object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Trend order (must &gt;=0 and &lt;=3)</param>
            <returns>TR Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CTR">
            <summary>

       The TR object contains trend information about a grid or
       grid pager. Currently, it is used only in conjunction with
       the GetTR_IMG, SetTR_IMG, and Trend_PGU functions.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.SetupTranslationVV(GeoEngine.Core.GXNetX.CLTB,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Initializes a VV used to map TPAT indices to output values</summary>
            <param name="oLTB1">Table containing TPAT codes as the key</param>
            <param name="i2">Field in LTB with the output values (numeric or string)</param>
            <param name="oVV3">Returned values for each TPAT index</param>
            <remarks>
The input LTB object should have key values matching the TPAT codes.
Whether the matches are case sensitive or not is dependent on how the
LTB oject was created (see ltb.h).
The LTB field values are converted to the output VV type.
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.LoadCSV(System.String)">
            <summary>Load thematic patterns from a CSV file</summary>
            <param name="str1">Thematic Pattern file name</param>
            <remarks>
The type of thematic patterns file is recognized from the types
of fields found inside it.

The following fields are identified. Only the "CODE" field is
required, as the "default" thematic pattern is a solid black color.

CODE   The pattern code (required by all types - CASE SENSITIVE)
LABEL  Longer text identifier to use in legends etc. (up to 31 characters)
DESCRIPTION Much longer text string (up to 127 characters).

COLOR  Line color used in patterns, and for solid colors, the color.
If only this field is found (and none below), the pattern file
is assumed to be type TPAT_TYPE_COLOR.

PATTERN         Geosoft pattern ID.
PAT_SIZE        Pattern tile size, or symbol size (default 2mm)
PAT_DENSITY     Pattern tile density (default 1.0)
PAT_THICKNESS   Pattern line thickness as % of size (default 5)
BACK_COLOR      Background color for the pattern. Also used for symbols
(Default background is transparent).

SYMBFONT        Symbol font (e.g. "symbols.gfn")
SYMBNUM         Symbol number of the current font
SYMBROT         Symbol rotation
SYMBSCL         Additional scaling factor applied to the current size
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.iSize">
            <summary>Returns the number of rows (items) in the TPAT object.</summary>
            <returns>Number of TPAT items.</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.IGetSolidPattern(System.Int32,System.String@,System.String@,System.String@,System.Int32@)">
            <summary>Get solid pattern info from the TPAT.</summary>
            <param name="i1">Index</param>
            <param name="str2">Returned Code</param>
            <param name="str3">Returned Label</param>
            <param name="str4">Returned Description</param>
            <param name="i5">Color.</param>
            <remarks>
Returns the solid color, pattern foreground color, or symbol
color, along with the code, label and description.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.iCode(System.String)">
            <summary>Find the index of a given thematic pattern</summary>
            <param name="str1">Pattern code (case sensitive)</param>
            <returns>The code index, -1 if not found</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates an empty thematic pattern object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>TPAT object</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTPAT.AddColor(System.String,System.String,System.String,System.Int32)">
            <summary>Add a new color to the list</summary>
            <param name="str1">Code (required - CASE SENSITIVE)</param>
            <param name="str2">Label (optional, can be "")</param>
            <param name="str3">Description (optional, can be "")</param>
            <param name="i4">Color (use iColor_MVIEW to convert to int).</param>
            <remarks>The new code must be unique; not in the existing list.</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CTPAT">
            <summary>

       The full name of the pattern.
       ex: "felsic volcanics"
       Code:          Short-form of the pattern description. This is the value
       which typically appears (for instance) in the "Rock code"
       channel in a Wholeplot From-To data group.
       ex: "FVOL"
       The code is CASE-SENSITIVE.

       Label:         Text to use as a short-form in labels, graphs etc.
       By default, this is the same as the code.
       ex: "FVol."
       Pattern Attributes:  (See DEFAULT.PAT in \src\etc for more inforation)
       Pattern:       The Pattern Index; defined in DEFAULT.PAT, or in the user's
       USER.PAT file. If not specified, defaults to 0 (solid fill).
       Size:          The pattern tile size. If not specified, defaults to 2.0mm.
       Density:       The tiling density. If not specified, defaults to 1.0.
       Thickness:     The line thickness in the tile, expressed as a integer
       percentage (0-100) of the tile size.
       Color:        The pattern line work color. If not specified, defaults to black.

       Background color: The pattern background color. If not specified, defaults to
       transparent (C_ANY_NONE)


       Symbols:

       Symbol Font     The name of the symbol font to use for a given symbol index

       Symbol Number   Index into the font.

       Symbol Rotation: Rotation in degrees CCW.

       Symbol Scaling  Additional scale factor to apply to symbol size (Default 1.0)
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.Sort(System.Int32)">
            <summary>Sorts a table by a specified column.</summary>
            <param name="i1">Index of data Column to sort table by</param>
            <remarks>
If the column to sort by contains duplicated values, the
sorted table is NOT guaranteed to retain the ordering of
the duplicated values/
E.g. Given 2 rows of values:   xx   yy   1
bb   aa   1
If the table is sorted on column 3, the second row
may or may not come after the first row in the sorted
table.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SetString(System.Int32,System.Int32,System.String)">
            <summary>Sets a string value into a table element.</summary>
            <param name="i1">Row of element to set</param>
            <param name="i2">Column of element to set</param>
            <param name="str3">Value to set</param>
            <remarks>
The table field containing the element to be set MUST be
of 'string'.

If the row of the new element exceeds the number of rows in
the table, then the table will AUTOMATICALLY be EXPANDED to
exactly as many rows needed to hold the new element. The new
element is placed in the proper field of the last row, and
all other field elements have invalid data. All fields of
the new rows up to the new element's row will also contain
invalid data.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SetReal(System.Int32,System.Int32,System.Double)">
            <summary>Sets an real value into a table element.</summary>
            <param name="i1">Row of element to set</param>
            <param name="i2">Column of element to set</param>
            <param name="d3">Value to set</param>
            <remarks>
The table field containing the element to be set MUST be
of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;.
If the field is &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt; the new data value will cause an
overflow if the value is out of range of the data type.
The new element value will then be invalid.

If the row of the new element exceeds the number of rows in
the table, then the table will AUTOMATICALLY be EXPANDED to
exactly as many rows needed to hold the new element. The new
element is placed in the proper field of the last row, and
all other field elements have invalid data. All fields of
the new rows up to the new element's row will also contain
invalid data.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SetInt(System.Int32,System.Int32,System.Int32)">
            <summary>Sets an integer value into a table element.</summary>
            <param name="i1">Row of element to set</param>
            <param name="i2">Column of element to set</param>
            <param name="i3">Value to set</param>
            <remarks>
The table field containing the element to be set MUST be
of type &amp;lt;define&amp;gt;GS_BYTE&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;GS_USHORT&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;GS_SHORT&amp;lt;/define&amp;gt;, or &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;.
If the field is &amp;lt;define&amp;gt;GS_BYTE&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;GS_USHORT&amp;lt;/define&amp;gt;, or &amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt;, the new data
value will cause an overflow if the value is out of range of
the data type. The new element value will then be invalid.

If the row of the new element exceeds the number of rows in
the table, then the table will AUTOMATICALLY be EXPANDED to
exactly as many rows needed to hold the new element. The new
element is placed in the proper field of the last row, and
all other field elements have invalid data. All fields of
the new rows up to the new element's row will also contain
invalid data.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SaveToAscii(System.String)">
            <summary>
Saves the data in a table to a file. The table header will be
in ASCII and the data will be in ASCII format.
</summary>
            <param name="str1">Name of File to save table into</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SaveDB(GeoEngine.Core.GXNetX.CDB,System.Int32)">
            <summary>Save a TB in a database line</summary>
            <param name="oDB1">Database</param>
            <param name="i2">Line</param>
            <remarks>
Missing channels are created.
Data in existing channels on the line will be replaced.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.Save(System.String)">
            <summary>
Saves the data in a table to a file. The table header will be
in ASCII and the data will be in BINARY format.
</summary>
            <param name="str1">Name of File to save table into</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.rGetReal(System.Int32,System.Int32)">
            <summary>Gets an real value from a table element.</summary>
            <param name="i1">Row of element to Get</param>
            <param name="i2">Column of element to Get</param>
            <returns>Value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.LoadDB(GeoEngine.Core.GXNetX.CDB,System.Int32)">
            <summary>Load a database into a TB</summary>
            <param name="oDB1">Database</param>
            <param name="i2">Line</param>
            <remarks>The line is appended to the data already in the table.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.iNumRows">
            <summary>Gets the number of data rows in a table.</summary>
            <returns>Number of rows</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.iNumColumns">
            <summary>Gets the number of data fields (columns) in a table.</summary>
            <returns>Number of columns</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.iGetInt(System.Int32,System.Int32)">
            <summary>Gets an integer value from a table element.</summary>
            <param name="i1">Row of element to Get</param>
            <param name="i2">Column of element to Get</param>
            <returns>Value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.iFormat(System.Int32)">
            <summary>Returns the channel format for the specified column.</summary>
            <param name="i1">Column of element to Get</param>
            <returns>&amp;lt;define&amp;gt;DB_CHAN_FORMAT&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.iFindColByName(System.String)">
            <summary>Finds a column's index by its name.</summary>
            <param name="str1">Name of column to find</param>
            <returns>
Index of column.
-1 if not found.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.IFindColByIndex(System.Int32,System.String@)">
            <summary>Finds a column's name by its index.</summary>
            <param name="i1">Index of column to find</param>
            <param name="str2">Buffer for column name</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.iDataType(System.Int32)">
            <summary>Returns the data type for the specified column.</summary>
            <param name="i1">Column of element to Get</param>
            <returns>&amp;lt;define&amp;gt;DB_CATEGORY_CHAN&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.GetString(System.Int32,System.Int32,System.String@)">
            <summary>Gets a string value from a table element.</summary>
            <param name="i1">Row of element to Get</param>
            <param name="i2">Column of element to Get</param>
            <param name="str3">Returned string</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.Field(System.String)">
            <summary>Get a field handle.</summary>
            <param name="str1">Field name</param>
            <returns>The handle to the field (must be present)</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.CreateLTB(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLTB)">
            <summary>Create a table from an LTB database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLTB1">LTB object</param>
            <returns>TB Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.CreateDB(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB)">
            <summary>Create a table from a database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database</param>
            <remarks>
The table will contain fields for all channels in
the database.

The database is not loaded with data.  Use the LoadDB_TB
function to load data into the table.
</remarks>
            <returns>TB Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Loads a table into memory and return a table handle.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the table file to load</param>
            <remarks>
If the table contains fewer data columns than are defined by the
the table header, the TB object will read in the table and dummy
the elements of the missing data columns.
</remarks>
            <returns>TB Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SetSortMode(System.Int32)">
            <summary>Set the sort mode of a table.</summary>
            <param name="i1">&amp;lt;define&amp;gt;TB_SORT&amp;lt;/define&amp;gt;</param>
            <available_version>9.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CTB.SetSearchMode(System.Int32)">
            <summary>Set the search mode of a table.</summary>
            <param name="i1">&amp;lt;define&amp;gt;TB_SEARCH&amp;lt;/define&amp;gt;</param>
            <remarks>
If performance is an issue, you may want to test which search
mode provides the best performance with typical data.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CTB">
            <summary>

       The TB class is a high-performance table class used to
       perform table-based processing, such as leveling data in
       an OASIS database. The LTB class is recommended for use
       with small tables produced from short lists such as the
       different geographic projections and their defining parameters.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.EnableGXDebugger(GeoEngine.Core.GXNetX.CGXNETCore,System.Windows.Forms.IWin32Window,System.String,System.String)">
            <summary>Enable GX Debugger GUI</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="owner">The <see cref="T:System.Windows.Forms.IWin32Window" /> the message box will display in front of.</param>
            <param name="str1">Path that will be scanned recursively for GXC source files</param>
            <param name="str2">Name of gx where first breakpoint should be set</param>
            <remarks>
Takes as input two strings one a path that will be scanned
recursively for GXC source files and a second string without
a path of the GX where the first breakpoint should be set in (i.e. "gxname.gx").
The source of the GX should be found in the path (e.g. &lt;path&gt;\somewhere\gxname.gxc)
and a breakpoint will be set on the first executing line of this GX. Make sure the
GX binary is newer than the source file, otherwise unexpected results may occur. As
soon as the GX is run the GUI will become visible and it will be possible to set more
breakpoints in any of the GXC files found in the path.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>GX Debugger</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.EnableGXDebugger(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Enable GX Debugger GUI</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Path that will be scanned recursively for GXC source files</param>
            <param name="str2">Name of gx where first breakpoint should be set</param>
            <remarks>
Takes as input two strings one a path that will be scanned
recursively for GXC source files and a second string without
a path of the GX where the first breakpoint should be set in (i.e. "gxname.gx").
The source of the GX should be found in the path (e.g. &lt;path&gt;\somewhere\gxname.gxc)
and a breakpoint will be set on the first executing line of this GX. Make sure the
GX binary is newer than the source file, otherwise unexpected results may occur. As
soon as the GX is run the GUI will become visible and it will be possible to set more
breakpoints in any of the GXC files found in the path.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>GX Debugger</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DisableGXDebugger(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Disable GX Debugger GUI if active</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>All breakpoints will be cleared by this call.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>GX Debugger</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IsEncryptedString(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Checks whether the specified string was encrypted by EncryptString_SYS.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input string to inspect.</param>
            <returns>0 (false) or non-zero (true)</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>String Encryption</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DecryptString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,System.Int32)">
            <summary>Decrypts a string that has been previously encrypted by EncryptString_SYS.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input string for decryption.</param>
            <param name="str2">Output buffer for decrypted result.</param>
            <param name="i3">&amp;lt;define&amp;gt;SYS_ENCRYPTION_KEY&amp;lt;/define&amp;gt;</param>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>String Encryption</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.EncryptString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,System.Int32)">
            <summary>
Encrypts a string for secure storage in configuration files
or in the workspace parameters.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input string for encryption.</param>
            <param name="str2">Output buffer for encrypted result.</param>
            <param name="i3">&amp;lt;define&amp;gt;SYS_ENCRYPTION_KEY&amp;lt;/define&amp;gt;</param>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>String Encryption</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetWorkspaceREG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CREG)">
            <summary>Set the workspace REG;</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oREG1">REG object</param>
            <remarks>
The workspace REG is separate from the reg used
to store SYS parameters.

Because GetWorkspaceREG_SYS returns a copy of the
workspace REG, and not the workspace REG itself,
you must call SetWorkspaceREG_SYS if you make changes
to your own REG object and you wish them to take
effect in the workspace REG
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Workspace</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetWorkspaceREG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CREG)">
            <summary>Get a copy of the workspace REG;</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oREG1">REG object</param>
            <remarks>
The workspace REG is separate from the reg used
to store SYS parameters.

Because GetWorkspaceREG_SYS returns a copy of the
workspace REG, and not the workspace REG itself,
you must call SetWorkspaceREG_SYS if you make changes
to your own REG object and you wish them to take
effect in the workspace REG.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Workspace</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetInteractive(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Sets the interactive mode.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">0 - interactive off 1 - interative on</param>
            <remarks>
Call to iInteractive_SYS will return the value
set here.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetInfoLine(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>
Display a message on the information line at the left
bottom corner of the OAISIS montaj application.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Message String</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetCursor(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Set the cursor on the display.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Cursor Names</param>
            <remarks>
Possible Cursors:
Normal, Horiz, Vert, Moving, Cross, Hand, NoEdit, Sun,
View, Group, ViewSel, GroupSel, BoxSelect, Shadow, Link,
Line, PolyLine, Polygon, Ellipse, Rectangle, Text, Symbol,
Zoom, Pan, Rotate, InteractiveZoom, PolyFill, GetFill,
SnapPoint, SnapLine, SnapOnPoint, SnapOnLine, NPolygon,
ExcludeRect, ExcludePoly, ExcludeNPoly, AddVertex, DelVertex, GeneralAdd and GeneralDelete
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iScriptRecord(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Checks to see if we are in scripting recording mode</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>
0 - Normal mode
1 - Recording mode
</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iScript(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Checks to see if we are running inside OMS (script mode)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>
0 - Normal mode
1 - Scripting mode

A number of functions can only be run from inside Oasis montaj
(such as GetDisplayAreaRaw_EMAP), because they require an actual
window object, such as an editable database or map. Use this
function to prevent calls
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IiPrompt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Asks the User to enter a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title of the window</param>
            <param name="str2">Buffer to place the user's string</param>
            <remarks>
The User string is displayed as the default value in the prompt.
Empty the user string if no default is needed.
</remarks>
            <returns>
0 - User hit OK
1 - user hit CANCEL
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iInteractive(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Checks to see if you should run interactively.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>
0 - Run in batch mode only
1 - Run Interactively only
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDisplayTaskDialogUI(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.Int32,GeoEngine.Core.GXNetX.CLST,System.Int32,System.String,System.Int32,System.String,System.Int32@,System.String,System.String,System.String)">
            <summary>Show a Windows TaskDialog UI (see https://msdn.microsoft.com/en-us/library/windows/desktop/bb760441(v=vs.85).aspx).</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title</param>
            <param name="str2">Main instruction (empty string for none)</param>
            <param name="str3">Content (empty string for none)</param>
            <param name="i4">Common Buttons, one of &amp;lt;define&amp;gt;TD_BUTTON&amp;lt;/define&amp;gt;</param>
            <param name="oLST5">Optional LST of custom buttons. Name in LST will be used for button text, while value should be an int to return. Pass (LST)0 to only use standard button flags.</param>
            <param name="i6">Icon &amp;lt;define&amp;gt;TD_ICON&amp;lt;/define&amp;gt;</param>
            <param name="str7">Footer (empty string for none)</param>
            <param name="i8">Footer Icon &amp;lt;define&amp;gt;TD_ICON&amp;lt;/define&amp;gt;</param>
            <param name="str9">Verification checkbox text (empty string for none)</param>
            <param name="i10">Verification checkbox checked (in/out)</param>
            <param name="str11">Expanded information (empty string for none)</param>
            <param name="str12">Collapsed control text for expanded information (empty string for default; 'More')</param>
            <param name="str13">Expanded control text for expanded information (empty string for default; 'Less')</param>
            <returns>Button ID. One of &amp;lt;define&amp;gt;TD_ID&amp;lt;/define&amp;gt; or the int value from LST of custom buttons.</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDisplayQuestionWithCancel(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>
Display a YES/NO/CANCEL type question. This method waits
for the user to hit YES or NO or CANCEL.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title of the window</param>
            <param name="str2">Message String</param>
            <returns>
0 - user selected No
1 - user selected YES
2 - user selected CANCEL
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDisplayQuestion(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>
Display a YES/NO type question. This method waits
for the user to hit YES or NO.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title of the window</param>
            <param name="str2">Message String</param>
            <returns>
0 - user selected No
1 - user selected YES
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DisplayReal(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double)">
            <summary>Display a real number.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title of the Window</param>
            <param name="d2">Number</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DisplayMessage(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Display a user message.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title of the Window</param>
            <param name="str2">Message String</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DisplayInt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Display an integer.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Title of the Window</param>
            <param name="i2">Number</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DisplayHelpTopic(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Display the help dialog without topic lookup in INI files</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Help File (blank for default)</param>
            <param name="str2">Help Topic</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DisplayHelp(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Display the help dialog with the specified topic highlighted</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group string to lookup in gxhelp.ini</param>
            <param name="str2">Index string to lookup in gxhelp.ini</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>User Interaction</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iGetTimer(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Double@,System.Double@)">
            <summary>Return the elapsed time since the established time.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">1 - set start time, 0 - return elapsed time</param>
            <param name="d2">Start time in seconds</param>
            <param name="d3">Elapsed time in seconds</param>
            <remarks>
1st time through call the method with a flag of 1 to identify
the count start time, subsequent times the time will be the time
elapsed since the queried start time.  Do so by settign the flag to 0.
</remarks>
            <returns>Success if the delay has elapsed.</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Timing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDelay(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Idle delay method.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Decimal Seconds to delay</param>
            <returns>Success if the delay has elapsed.</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Timing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Cancel(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
This method indicates that the GX program terminated without
doing anything of interest and should be ignored.  In
particular, the GX will not be logged in a recorded GS.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Termination</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Exit(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
This method terminates the execution of a script in  a regular
fashion with no error messages displayed.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Termination</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Assert(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Abort with GX line number if not true.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Expression to evaluate (0 aborts)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Termination</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Abort(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>
This method terminates the execution of a script. A message
giving the reason for the abort will be displayed along with
the line number where we stopped in the script.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Message to display</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Termination</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SavePTMP(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Save a temporary copy of the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name to save, "" for everything.</param>
            <remarks>All PTMP instances will be destroyed on exit.</remarks>
            <returns>PTMP handle.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Temporary File</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetPTMP(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Get temporary saves copy of parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Saved with Save_PTMP_SYS</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Temporary File</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DestroyPTMP(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Destroy PTMP.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">PTMP object to destroy</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Temporary File</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.RegistrySetVal(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,System.String,System.String)">
            <summary>Set/create a registry value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;REG_DOMAIN&amp;lt;/define&amp;gt;</param>
            <param name="str2">Key to set</param>
            <param name="str3">Name of Subkey within key</param>
            <param name="str4">Value for Subkey</param>
            <remarks>
This function will create the subkey and key if either do not
already exist.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Registry</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRegistryDeleteVal(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,System.String)">
            <summary>Delete a registry value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;REG_DOMAIN&amp;lt;/define&amp;gt;</param>
            <param name="str2">Key</param>
            <param name="str3">Name of value to delete</param>
            <returns>
0 - Ok
1 - Error
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Registry</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRegistryDeleteKey(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String)">
            <summary>Delete a registry value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;REG_DOMAIN&amp;lt;/define&amp;gt;</param>
            <param name="str2">Key to delete</param>
            <remarks>All sub-keys and values will be deleted if they exist.</remarks>
            <returns>
0 - Ok
1 - Error
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Registry</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IiRegistryGetVal(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,System.String,System.String@)">
            <summary>Get a registry value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;REG_DOMAIN&amp;lt;/define&amp;gt;</param>
            <param name="str2">Key to set</param>
            <param name="str3">Value name within key</param>
            <param name="str4">String for value data</param>
            <returns>
0 if value exists
1 if value does not exist
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Registry</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetSysInfo(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@)">
            <summary>Get system information</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;SYS_INFO&amp;lt;/define&amp;gt;</param>
            <param name="str2">Returned setting</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Registry</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ProgUpdateL(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>Updates progress bar based on count and maxcount.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Count</param>
            <param name="i2">Max count &gt;= count</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Progress Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ProgUpdate(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>
This method drives the Progress Bar. It is passed
a percentage and will update the bar to reflect that
percentage.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Percentage Completed (0-100).</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Progress Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Progress(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>
This method allows you to turn on the Progress BAR ON/OFF.
Once the progress bar is on, use the UpdateProg method
to drive it.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">0 - Turn Progress Bar OFF 1 - Turn Progress Bar ON</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Progress Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ProgName(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>
This method allows you to name the current process being
displayed by the progress bar. This method has no affect
if no progress bar exists.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">New Process Name</param>
            <param name="i2">0 - Change the Name but do not change the percentage 1 - Change the Name and Reset Percent to 0 2 - Change the Name but no Percent Bar</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Progress Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iProgState(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Return current progress state (On/Off)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
This is useful, for instance, when calling one GX from another,
especially if it is called multiple times in a loop.
The called GX may turn the progress ON/OFF on its own, which
means any progress tracking in the calling GX is disrupted.
The called GX should use this function to determine the original
progress state, and not turn off progress if it was already on.

Returns				 0 - Progress is on
- Progress is off
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Progress Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iCheckStop(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
This method is called at convenient points in the
GX code to check if the user has asked the script
to stop running. This method should be called by
any GX program that may take a while to complete.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>
0 - No
1 - Yes, Terminate processing.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Progress Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>This method sets a string in the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="str3">String to Set it To</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetREG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CREG)">
            <summary>Copy contents of a REG to current parameters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oREG1">REG object</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetReal(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double)">
            <summary>This method Sets a real in the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="d3">Real</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetPattern(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Double,System.Int32,System.Double,System.Int32,System.Int32)">
            <summary>Sets pattern parameters in the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="i2">Pattern</param>
            <param name="d3">Size. Input &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; to use default</param>
            <param name="i4">Thickness (0-100).  Input &amp;lt;define&amp;gt;GS_S4DM&amp;lt;/define&amp;gt; to use default</param>
            <param name="d5">Density. Input &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; to use default</param>
            <param name="i6">Pattern Color</param>
            <param name="i7">Background Color. Can be &amp;lt;define&amp;gt;C_TRANSPARENT&amp;lt;/define&amp;gt;</param>
            <remarks>
Sets all the user-definable pattern parameters to
a specified group. Parameters are:
"PAT_NUMBER"    0 is solid fill
"PAT_SIZE"      pattern tile size in mm.
"PAT_THICKNESS" pattern line thickness in percent of the tile size.
valid range is 0-100.
"PAT_DENSITY"   Tile spacing. A value of 1 means tiles are laid with no overlap.
A value of 2 means they overlap each other.
"PAT_COLOR"     The color value.
"PAT_BACKCOLOR" Background color value.

Input values may be DUMMY.

Designed for use along with the sPatternForm_GUI function.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetInt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>This method sets an int in the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="i3">Int Value to Set</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.FilterParmGroup(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Controls filtering of specific group during logging.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="i2">0 - Clear filter, 1 - Add filter</param>
            <remarks>This is useful to prevent certain utility GX parameters from being recorded during GS script runs where the parameters does not influence the actual script execution.</remarks>
            <available_version>9.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SaveParm(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.String)">
            <summary>Writes out one group (or all groups) to a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the File</param>
            <param name="i2">0 - New file, 1 - Append</param>
            <param name="str3">Group Name to write out ("" for all groups)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rGetReal(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>This method returns a real from the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <returns>Real Value, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if parameter not set.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.LoadParm(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Reads parameters from a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the File to read from</param>
            <param name="str2">Group Name to write read ("" for all groups)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IReplaceString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,System.String)">
            <summary>Replace "% %" tokens in a string with parameter values</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to filter replace</param>
            <param name="str2">Output string</param>
            <param name="str3">Default group name</param>
            <remarks>
If parameter does not exist, the token is removed.  Full parameter names,
such as "%group.name%", are used as-is.  Partial parameter names, such as
"%name%" will have the default group attached.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iGetYesNo(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Check a YES/NO Setting</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <returns>
1 - if first char in setting is a "Y" or"y"
0 - Otherwise
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iGetInt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>This method returns an int from the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <returns>Int Value, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; if the parameter is not set.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iExistString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>This method checks to see if a string parameter exists.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <returns>
1 - Yes
0 - No
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iExistReal(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>This method checks to see if a real parameter exists.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <returns>
1 - Yes
0 - No
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iExistInt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>This method checks to see if a int parameter exists.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <returns>
1 - Yes
0 - No
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GtString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String@)">
            <summary>This method returns a string in the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="str3">Buffer to place the string into</param>
            <remarks>
If the setting exits it is placed in the buffer, otherwise
the buffer will have zero length
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetREG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CREG,System.String)">
            <summary>Get REG parameters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oREG1">REG to add parameters to</param>
            <param name="str2">Group name wanted</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetPattern(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.Double@,System.Int32@,System.Double@,System.Int32@,System.Int32@)">
            <summary>Gets pattern parameters from the parameter block.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input group name</param>
            <param name="i2">Pattern</param>
            <param name="d3">Size,</param>
            <param name="i4">Thick (0-100)</param>
            <param name="d5">Density,</param>
            <param name="i6">Pattern Color</param>
            <param name="i7">Background Color</param>
            <remarks>
Gets all the user-definable pattern parameters from
a specified group. Parameters are:
"PAT_NUMBER"    0 is solid fill (default)
"PAT_SIZE"      pattern tile size in mm. (can return &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt;)
"PAT_THICKNESS" pattern line thickness in percent of the tile size.
valid range is 0-100.
"PAT_DENSITY"   Tile spacing. A value of 1 means tiles are laid with no overlap.
A value of 2 means they overlap each other.
"PAT_COLOR"     The color value.
"PAT_BACKCOLOR" Background color value.

Returned values may be DUMMY, but will be acceptable for use with
the iColorForm_GUI function, to set defaults.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DefaultString(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>Allows a default string to be set.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="str3">String to Set it To</param>
            <remarks>
The value will only be set if there is no existing
setting.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DefaultReal(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double)">
            <summary>Allows a default real to be set.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="d3">Real Value to Set</param>
            <remarks>
The value will only be set if there is no existing
setting.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DefaultInt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Allows a default int to be set.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group Name</param>
            <param name="str2">Parameter Name</param>
            <param name="i3">Int Value to Set</param>
            <remarks>
The value will only be set if there is no existing
setting.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClearParm(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Clears all paramters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClearGroupParm(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Clears all paramters in a specified group.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClearGroup(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Clear current contents of a group</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group to clear</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.RunMultiUserScript(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Execute a script using multithreaded users</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Script to run</param>
            <param name="i2">Number of users to run</param>
            <param name="i3">Number of iterations to run (for each user)</param>
            <param name="i4">Minimum wait time between iterations (0 for none)</param>
            <param name="i5">Maximum wait time between iterations (0 for none)</param>
            <param name="i6">Ramp up time for users (0 for all users start immediatly)</param>
            <remarks>
No access is provided in the script to EMAPS
or EDBS. Users must ensure that the resources
that are shared are protected.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Multithreading</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iGetThreadID(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Get the ID the current thread.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>In a single threaded application this will always be 0.</remarks>
            <returns>x - ID</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Multithreading</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.LogScriptRun(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>This method logs that a script was run</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Location that launched the script</param>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.WriteDebugLog(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>
This method writes out information to the output
debugging log file (in temp folder) or output window.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to Write out</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SendGeneralMessage(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Send a general information message to all listners</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Message Class</param>
            <param name="str2">Message Info</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IiGetDotNetGXEntries(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>
Get the list of entry points that this assembly has
exposed to Oasis montaj.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of .NET GX assembly</param>
            <param name="str2">Buffer to place list of entries in</param>
            <remarks>
The list of entry points are passed back as one
string with each entry point separated by a semi-colon.
For example: NewGDB|Run;NewGDB|RunEx
</remarks>
            <returns>
0  success
1  error.
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.FontLST(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>List all Windows and geosoft fonts.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLST1">List Object</param>
            <param name="i2">&amp;lt;define&amp;gt;SYS_FONT&amp;lt;/define&amp;gt;</param>
            <remarks>
To get TT and GFN fonts, call twice with the same list
and &amp;lt;define&amp;gt;SYS_FONT_TT&amp;lt;/define&amp;gt;, then &amp;lt;define&amp;gt;SYS_FONT_GFN&amp;lt;/define&amp;gt;, or vice-versa to
change order of listing.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.FileToClipboard(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Copy a text file onto the clipboard as text.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File place into clipboard</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.EMFObjectSize(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double@,System.Double@)">
            <summary>Get the size of an EMF object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">EMF File holding data</param>
            <param name="d2">Size X</param>
            <param name="d3">Size Y</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Destr(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Destroy ANY object made with a Create_? method</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Handle to object to delete</param>
            <remarks>
You can use this method instead of the Destroy_? methods
which are specific to each object.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.CreateClipboardWA(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create a WA to write text on the clipboard.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
Destroy the WA as soon as possible. As long as it
open the clipboard is not accessible from any
application.
</remarks>
            <returns>WA to use for reading.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.CreateClipboardRA(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create a RA to read text from the clipboard.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
Destroy the RA as soon as possible. As long as it
open the clipboard is not accessible from any
application.
</remarks>
            <returns>RA to use for reading.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClipboardToFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Copy text from the clipboard to a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name to place it into</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GenerateGUID(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Genrates a GUID string (e.g. {4FEDE8BF-CDAB-430A-8026-1CCC0EC0A2EB})</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">GUID</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetEntitlementRights(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the Entitlement Rights</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLST1">Rights</param>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Menus and Toolbar</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetLoadedMenus(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a list of menus</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLST1">Default menus (typically a single entry based on product, do not change the name returned by GetLoadedMenus_SYS)</param>
            <param name="oLST2">Loaded menus</param>
            <param name="oLST3">Loaded user menus</param>
            <remarks>
The names of the LSTs contain the menus and the values contain any exclusions. Exclusions 
are semicolon separated top level menu names and/or toolbar.geobar file names.
</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Menus and Toolbar</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetLoadedMenus(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the loaded menus.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLST1">Default menus (typically a single entry based on product)</param>
            <param name="oLST2">Loaded menus</param>
            <param name="oLST3">Loaded user menus</param>
            <remarks>
The names of the LSTs contain the menus and the values contain any exclusions. Exclusions 
are semicolon separated top level menu names and/or toolbar.geobar file names.
</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Menus and Toolbar</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClearMenus(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Clear all menus</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;SYS_MENU_CLEAR&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Menus and Toolbar</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetLineageName(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Set the name for the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetLineageDisplayName(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Set the display name for the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">DisplayName</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetLineageDescription(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Set the description for the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Description</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.RestoreGeoFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Backup a Geosoft data file and all associated files to original location</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Backup File Name</param>
            <param name="str2">Original file name</param>
            <remarks>
Grids are copied and the GI's are maintained - note that support
for non-geosoft grids is limited since this method does not
guarantee all grid files besides the main one are copied.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.RemoveLineageSource(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Remove a source from the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Source Name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.RemoveLineageParameter(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Remove a parameter in the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Paramter Name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.RemoveLineageOutput(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Remove an output from the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Source Name</param>
            <available_version>7.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IBackupGeoFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Backup a Geosoft data file and all associated files to a temporary folder.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <param name="str2">Buffer to place the target name into</param>
            <remarks>
Grids are copied and the GI's are maintained - note that support
for non-geosoft grids is limited since this method does not
guarantee all grid files besides the main one are copied.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.CopyGeoFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Copy a Geosoft data file and all associated files to a new folder</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <param name="str2">Target directory</param>
            <remarks>
Grids are copied and the GI's are maintained - note that support
for non-geosoft grids is limited since this method does not
guarantee all grid files besides the main one are copied.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClearLineageSources(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Clear all the lineage sources</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ClearLineageParameters(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Clear all the lineage parameters</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.AddLineageSource(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String)">
            <summary>Add a source to the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;SYS_LINEAGE_SOURCE&amp;lt;/define&amp;gt;</param>
            <param name="str2">Source Name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.AddLineageParameter(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Add a parameter to the current lineage object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Paramter Name</param>
            <param name="str2">Parameter Value</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Lineage</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetProfileURL(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Get link to my.geosoft.com profile URL</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Returned URL</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetProfileName(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Get the profile name as defined in My Geosoft (or email if not defined)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Returned name</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetGeosoftID(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Get the Geosoft ID (email) if signed in</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Returned ID</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GeosoftConnectAuthenticateAndNavigate(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Automatically authenticate and navigate to my.geosoft.com URL</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">URL</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SignIn(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Sign in via Geosoft Connect</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iIsSignedIn(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Check if signed in via Geosoft Connect</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetLicensedUser(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String@)">
            <summary>Get the licensed user name and Company</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">User Name</param>
            <param name="str2">Company Name</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetLicenseClass(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Get the current application license class.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Class String</param>
            <remarks>
String may be one of :  "ArcGIS"
"OasisMontaj"
"DapServer"
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iGetGeodist(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
Gets a global flag that indicates whether we are
running within the geodist library
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>0 - Geodist not loaded, 1 - Geodist loaded</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iCheckIntrinsic(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String)">
            <summary>Check to see if an intrinsic object is licensed</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Intrinsic Class Number</param>
            <param name="str2">Intrinsic Name (must be exact)</param>
            <returns>
1 - Licenced
0 - Not licenced
</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iCheckArcLicenseEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Check to see if a ESRI ArcEngine or ArcView license is available, returns type and version of available engine.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Version String</param>
            <returns>&amp;lt;define&amp;gt;ARC_LICENSE&amp;lt;/define&amp;gt;</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iCheckArcLicense(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Check to see if a ESRI ArcEngine or ArcView license is available</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>
1 - Licenced
0 - Not licenced
</returns>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Licensing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetSettingsMETA(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Set the settings metadata object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMETA1">META object</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ResetSettings(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
Resets the GX_HELP settings in the geosoft.ini file
after changes have been made.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IiGlobal(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Get a global parameter setting.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Parameter</param>
            <param name="str2">Setting returned</param>
            <remarks>
The returned string will be empty if the parameter is
not found.

Parameters are derived from GEOSOFT.INI.
This is a standard Windows style INI
file that contains [GROUPS], PARAMETERS and SETTINGS
as follows

[GROUP1]
PARAM1=setting1
PARAM2 setting2
PARAM3 "setting3 is text"

To retrieve an entry, specify the group.parameter.  For
example, iGlobal_SYS("GROUP1.PARAM3",sSetting) will
retrieve the string "setting is text".  The double
quotes will not appear in the setting.
</remarks>
            <returns>
0 if parameter found.
1 if parameter not found or not set.
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GlobalWrite(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Modify the global parameters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Global INI file, if "" use default.</param>
            <remarks>
If the global parameters have been changed, use
this function to make the changes permanent,
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GlobalSet(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Set a global parameter setting.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Parameter</param>
            <param name="str2">Setting</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GlobalReset(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Reset the global parameters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">New INI file name, if "", use default.</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.GetSettingsMETA(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the settings metadata object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMETA1">META object to store the settings metadata in</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Global Parameter</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rUTCFileTime(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>File creation UTC time in decimal hours.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name</param>
            <remarks>
The FormatTime_STR function can be used to convert a time
to a string.
</remarks>
            <returns>Date in decimal hours, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if the file does not exist.</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rUTCFileDate(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>File creation UTC date in decimal years.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name</param>
            <remarks>
The FormatDate_STR function can be used to convert a date
to a string.
</remarks>
            <returns>Date in decimal years, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if the file does not exist.</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rFileTime(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>File creation time in decimal hours.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name</param>
            <remarks>
The FormatTime_STR function can be used to convert a time
to a string.
</remarks>
            <returns>Date in decimal hours, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if the file does not exist.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rFileDate(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>File creation date in decimal years.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name</param>
            <remarks>
The FormatDate_STR function can be used to convert a date
to a string.
</remarks>
            <returns>Date in decimal years, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if the file does not exist.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iWriteInDir(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Can I create files in this directory ?</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of directory to check</param>
            <returns>
0 - Directory doesn't allow write of does not exist
1 - Directory allows writes
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iValidFileName(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Check to see if a file name valid</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of file to check</param>
            <remarks>
Use the FULL path for the file name. If the full
path is not specified, then the current working
directory is used for the path.
</remarks>
            <returns>
0 - File name is not valid
1 - File name is valid
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ITransferPath(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Transfers file path to new file name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input file path/name</param>
            <param name="str2">Output file name with path transfered</param>
            <remarks>
The path and volume of from the input string is added to
file name from the output string.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ITempFileName(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Generate a file name for this file in the temp directory.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input file name to resolve (path is removed)</param>
            <param name="str2">Output name, can be the same as input</param>
            <remarks>
This is useful for created a unique tempory name for a file in the Geosoft temporary directory.

From version 7.0 The file extension will match the input file, but the
filename itself will be a process and thread unique value to ensure that
clashes does not happen.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ITempFileExt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Generate a unique file name for this extension in the temp directory.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input extension (without .)</param>
            <param name="str2">Output name</param>
            <remarks>This is useful for created a unique tempory name for a file in the Geosoft temporary directory.</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IShortPathFileName(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Obtains the short path form of a specified input path.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input file name to resolve</param>
            <param name="str2">Output name, can be the same as input</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IRelativeFileName(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Convert a file name to a relative abbreviated path name</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input file name to resolve</param>
            <param name="str2">Output name, can be the same as input</param>
            <remarks>
This will produce relative paths based on the workspace
directory into ".\name".
</remarks>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iMakeFileWritable(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Removes a file's read-only attribute.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of file</param>
            <returns>
0 if read-only attribute successfully removed,
1 if attribute change fails.
</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iMakeFileReadonly(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Set a file's read-only attribute.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of file</param>
            <returns>
0 if read-only attribute successfully set,
1 if attribute change fails.
</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iMakeDir(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create a directory.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of directory</param>
            <returns>
0 - Directory made
1 - Directory cannot be made
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetWindowsDir(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Get the Windows directory path</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Buff for directory path string</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetPath(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@)">
            <summary>Get a Geosoft path</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;SYS_PATH&amp;lt;/define&amp;gt;</param>
            <param name="str2">String in which to place path</param>
            <remarks>The path name will have a directory separator at the end.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetDirectory(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@)">
            <summary>Get a directory path</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;SYS_DIR&amp;lt;/define&amp;gt;</param>
            <param name="str2">Returned directory path string</param>
            <remarks>The path will always end with the file separator character</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iFindPathEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.String@)">
            <summary>Get full path for a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File to get path name for</param>
            <param name="i2">&amp;lt;define&amp;gt;SYS_SEARCH_PATH&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;GEO_DIRECTORY&amp;lt;/define&amp;gt;</param>
            <param name="str4">Buffer to place path name into</param>
            <remarks>
Directories can be resolved from the Environment section of the
Geosoft registry, or from system environment variables that are
not defined in the Geosoft Environment registry.  The following
file prefixes will be replaced by the environment settings:

&lt;geosoft&gt;      the main Geosoft installation directory
&lt;geosoft2&gt;     the secondary Geosoft installation directory
&lt;geotemp&gt;      the Geosoft temporary file directory
&lt;windows&gt;      the operating system Windows directory
&lt;system&gt;       the operating system system directory
&lt;other&gt;        other environment variable
</remarks>
            <returns>
0 if file found.
1 if file not found.
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iFindPath(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.String@)">
            <summary>Get full path for a file with Geosoft subdirectory parameter.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File to get path name for</param>
            <param name="i2">&amp;lt;define&amp;gt;SYS_SEARCH_PATH&amp;lt;/define&amp;gt;</param>
            <param name="str3">Buffer to place path name into</param>
            <remarks>
Directories can be resolved from the Environment section of the
Geosoft registry, or from system environment variables that are
not defined in the Geosoft Environment registry.  The following
file prefixes will be replaced by the environment settings:

&lt;geosoft&gt;      the main Geosoft installation directory
&lt;geosoft2&gt;     the secondary Geosoft installation directory
&lt;geotemp&gt;      the Geosoft temporary file directory
&lt;windows&gt;      the operating system Windows directory
&lt;system&gt;       the operating system system directory
&lt;other&gt;        other environment variables
</remarks>
            <returns>
0 if file found.
1 if file not found.
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iFileWritable(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>
Check if a file can be created or opened in read-write mode
at a specific location
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File path name to check</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iFileSize(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns size of a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of file</param>
            <returns>
0 none/error
x Size
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iFileExist(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Check to see if a file exists</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of file to check</param>
            <remarks>
Use the FULL path for the file name. If the full
path is not specified, then the current working
directory is used for the path.
</remarks>
            <returns>
0 - File doesn't exist
1 - File exists
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDirExist(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Check to see if a directory exists</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of directory to check</param>
            <returns>
0 - Directory doesn't exist
1 - Directory exists
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDeleteGridFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Delete a grid file and its associated GI and XML files.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of grid file to delete</param>
            <remarks>
Deletes the grid file first, and, if they exist, the associated GI
and XML files.
No error is registered if a file is not found or cannot be deleted.
</remarks>
            <returns>
0 if grid file deleted.
1 if grid file not found or if one or more files is found but could not be deleted.
</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDeleteGIFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Delete the GI file associated with a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of grid file to delete</param>
            <returns>
0 if file deleted.
1 if file is not found, or found but could not be deleted.

This is a "one-line" function to take a grid file name,
remove the qualifiers, add the ".gi" and delete the file.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDeleteFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Delete a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of file to delete</param>
            <returns>
0 if file deleted.
1 if unable to find file or delete file.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iCopyFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Copy a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Source file</param>
            <param name="str2">Destination file</param>
            <returns>
0 if file copied ok.
1 if unable to copy file or source file not found.
</returns>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IAbsoluteFileName(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Convert an abbreviated path name to a full path name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input file name to resolve</param>
            <param name="str2">Output name, can be the same as input</param>
            <remarks>
This is mainly intended to convert ".\name" to a full
name at run-time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.FindFilesVV(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Fill a VV with files matching an input file mask.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oVV1">VV object</param>
            <param name="str2">File mask to match</param>
            <remarks>
Fill a VV with files matching the input file mask.
The VV should be of string type.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.FileRen(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Rename a file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Old file name</param>
            <param name="str2">New file name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.CRCFileOffset(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Compute the CRC of a file with an Offset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <param name="i2">Offset in the file (0 for start)</param>
            <returns>CRC Value</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.CRCFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Compute the CRC of a file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>CRC Value</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File System</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Terminate(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>DLL error termination</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Module name</param>
            <remarks>
Call this function immediately before returning to
the caller after an error has occurred inside the
DLL.  If an error has occurred, you should clean-up
(free memory, close files), call Error_SYS to register
your own error messages, call ErrorTag_SYS to set any
error message tags, call Terminate_SYS and return.

Geosoft functions that detect an error will have
already registered their own errors and called
Terminate_SYS.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ShowError(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Display any errors to the user.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
If you call a GX from another GX using iRunGX_SYS, and
the called GX registers errors, they will not be displayed
until after the "top" GX exits.
If you wish to continue without exiting, call this function
so that errors are displayed immediately to the user. For
instance, when creating a new map from inside another GX:

--- Run NEWMAP wizard. Keep trying if something is wrong (like a
too-small map scale), but exit if the user cancels (iRet==-1) ---

do {
iRet = iRunGX_SYS("newmap.gx");
if(iRet==1) ShowError_SYS();     // Dump errors.
} while(iRet==1);

This wrapper is not intended for use outside a GX, because it
uses the GX run-time machinery to display the error messages.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SaveLog(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Saves the main log file to another file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output file name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iOLEAutomation(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Call OLE Automation designed to be called from Montaj.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Object Name</param>
            <param name="str2">Info String</param>
            <param name="i3">Info Int</param>
            <returns>Return from automation engine.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iAssertGX(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,System.String)">
            <summary>DLL function argument error assertion</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Boolean expression (ie. (dB != 0.0) )</param>
            <param name="str2">Module name</param>
            <param name="str3">Argument name</param>
            <remarks>
Use this function to evaluate errors in passed
function arguments.  Functions called by GX programs
should be tolerant of all errors in the passed argument
list.  The iAssertGX_SYS can be used to test each
argument before doing any work in the function.  If
an assertion fails, an error will be registered with
the name of the function and the parameter name and
a 1 will be returned.  The caller should immediatley
cleaning up (if necessary) and return.

You could also test the validity of arguments and call
the Error_SYS, ErrorTag_SYS and Terminate_SYS
functions if you would like to provide a more specific
error message.
</remarks>
            <returns>
0 assertion passed
1 assertion failed
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.ErrorTag(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Set an error message tag string</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Tag string, ie "%1".</param>
            <param name="str2">String to replace the tag.</param>
            <remarks>
Use this method to replace tag strings in your error
message text with run-time information.  For example,
Geosoft error messages often use the tag strings "%1",
"%2", etc. as place holders to be replaced by a string
which is only known at run-time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.Error(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Register an error message</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Your error file name, "" if none.</param>
            <param name="str2">Module name in which error occurred.</param>
            <param name="i3">Error number</param>
            <remarks>
Use this function to register your own error
messages when an error occurs in your code.  Your
errors can be provided in your own GER file.  See
GEOSOFT.GER for an example of the GER file format.

If the error # is not found in your error file, the
OE32.GER file, then the GEOSOFT.GER file will be
searched.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.DoCommand(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Execute an Oasis montaj command.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Command</param>
            <remarks>
Commands syntax:  "[type] command"

=======  ============================================================================================
type     command
=======  ============================================================================================
ID       Internal Menu Command (as found in omn and geobar files e.g. *ID_EDIT_SELECT)
-------  --------------------------------------------------------------------------------------------
GX       gx file name
-------  --------------------------------------------------------------------------------------------
GS       gs file name
-------  --------------------------------------------------------------------------------------------
DOTNET   dll file name 
        Use qualifiers to specify class and method e.g.:
        "[DOTNET] geogxnet.dll(Geosoft.GX.NewGDB.NewGDB;Run)"
-------  --------------------------------------------------------------------------------------------
PDF      Geosoft pdf file name (Not Adobe PDF document, a legacy Geosoft Sushi script)
-------  --------------------------------------------------------------------------------------------
DOS      DOS style command
-------  --------------------------------------------------------------------------------------------
HLP      help file name
=======  ============================================================================================

The must be ONE space between the "]" and the command.  For example:

"[ID] ID_EDIT_SELECT"  // bring up the line edit tool
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>External DLL</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetReturn(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Set the return value of a GX.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Return Value</param>
            <remarks>This value is returned in the iRunGXEx_SYS call only.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iShellExecute(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Call Microsoft ShellExecute function (See `MSDN &lt;https://msdn.microsoft.com/en-us/library/windows/desktop/bb762153(v=vs.85).aspx&gt;`_)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Verb</param>
            <param name="str2">File</param>
            <param name="str3">Parameters</param>
            <param name="str4">Directory</param>
            <param name="i5">&amp;lt;define&amp;gt;SHELL_EXECUTE&amp;lt;/define&amp;gt;</param>
            <returns>return value of ShellExecute as documented on MSDN</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRunPDF(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Run a PDF.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Group name, can be "".</param>
            <param name="str2">PDF name    (.pdf assumed)</param>
            <remarks>
The group name of the PDF variables will be "group_pdf",
where "group" is the name given in the first argument,
and "pdf" is the root PDF file name.
</remarks>
            <returns>Exit status of the task, 0 usually means success.</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>yes</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRunGXEx(GeoEngine.Core.GXNetX.CGXNETCore,System.Windows.Forms.IWin32Window,System.String,System.Int32@)">
            <summary>Run a GX.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="owner">The <see cref="T:System.Windows.Forms.IWin32Window" /> the message box will display in front of.</param>
            <param name="str1">Name of GX to run.</param>
            <param name="i2">Return value set in the child GX (0 by default)</param>
            <returns>
Exit status of the GX:
-1 cancelled
0 success
1 ended with an error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRunGXEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@)">
            <summary>Run a GX.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of GX to run.</param>
            <param name="i2">Return value set in the child GX (0 by default)</param>
            <returns>
Exit status of the GX:
-1 cancelled
0 success
1 ended with an error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRunGX(GeoEngine.Core.GXNetX.CGXNETCore,System.Windows.Forms.IWin32Window,System.String)">
            <summary>Run a GX.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="owner">The <see cref="T:System.Windows.Forms.IWin32Window" /> the message box will display in front of.</param>
            <param name="str1">Name of GX to run.</param>
            <remarks>
If the called GX returns an error, they will not be
displayed until the "top" calling GX terminates, unless you
call ShowError_SYS.
</remarks>
            <returns>
Exit status of the GX:
-1 cancelled
0 success
1 ended with an error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRunGX(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Run a GX.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of GX to run.</param>
            <remarks>
If the called GX returns an error, they will not be
displayed until the "top" calling GX terminates, unless you
call ShowError_SYS.
</remarks>
            <returns>
Exit status of the GX:
-1 cancelled
0 success
1 ended with an error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRunGS(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Run a GS.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of GS to run.</param>
            <returns>
Exit status of the GS
-1 cancelled
0 success
1 ended with an error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iRun(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Run a command line process.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Command name</param>
            <param name="str2">Command line arguments</param>
            <param name="i3">Flags &amp;lt;define&amp;gt;SYS_RUN_TYPE&amp;lt;/define&amp;gt; &amp;lt;define&amp;gt;SYS_RUN_DISPLAY&amp;lt;/define&amp;gt; &amp;lt;define&amp;gt;SYS_RUN_HOLD&amp;lt;/define&amp;gt; &amp;lt;define&amp;gt;SYS_RUN_WIN&amp;lt;/define&amp;gt;</param>
            <remarks>
The Default option for each define below is the first one
and is set to 0.

We look for the command object in the following order:

1. the local working directory
2. the &lt;geosoft&gt;\bin directory
3. the system path
</remarks>
            <returns>
-1 if failed to execute task
Exit status of the task
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Execution</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetServerMessagesAP(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Control the server message handling.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">1 - Display messages, 0 - messages reported as errors</param>
            <remarks>
Should be set to false when dialogs should not
appear. This setting is thread specific.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Error Handling</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iNumErrorsAP(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Returns the number of registered errors.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
This wrapper is mostly for use outside of GXs,
because in general if an error is registered in a GX
the GX would terminate before it could be called.
</remarks>
            <returns>The number of registered errors.</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Error Handling</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetErrorMessageAP(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@)">
            <summary>Return the error message text as a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">The error index (0 to N-1, where N=number of registered errors)</param>
            <param name="str2">Buffer to return message in</param>
            <remarks>
This wrapper is mostly for use outside of GXs,
because in general if an error is registered in a GX
the GX would terminate before it could be called.
Use iNumErrorsAP_SYS to get the number of registered errors.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Error Handling</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iGetTopErrorAP(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Get the error number of the last registered error.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>The top error number registered, 0 if none registered.</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Error Handling</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iClearErrAP(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>This method is called at to clear all registered errors.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>0 - Successful</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Error Handling</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.SetEnv(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Set an environment setting.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Setting</param>
            <param name="str2">Value</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Environment</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.IGetEnv(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Get an environment setting.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Setting</param>
            <param name="str2">Value string</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Environment</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iExistEnv(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Check if setting exists in environment.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Setting</param>
            <returns>
1 - Yes
0 - No
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Environment</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rUTCTime(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Returns the current UTC time in decimal hours.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
The FormatTime_STR function can be used to convert a time to
a string.
</remarks>
            <returns>Time in decimal hours.</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rUTCDate(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Returns the current UTC date in decimal years.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
The FormatDate_STR function can be used to convert a date to
a string.
</remarks>
            <returns>Date in decimal years.</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rTimetoSeconds(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Converts decimal hours to seconds in a day fractional</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Time</param>
            <returns>x - Number of seconds with fractions</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rTime(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Returns the current time in decimal hours.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
The FormatTime_STR function can be used to convert a time to
a string.
</remarks>
            <returns>Time in decimal hours.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rSecondstoTime(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Converts fractional seconds to decimal hours.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Seconds</param>
            <returns>x - Time</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rMakeDate(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Returns the decimal date given the year, month and day.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Year</param>
            <param name="i2">Month (0-11)</param>
            <param name="i3">Day   (0-30)</param>
            <returns>Date in decimal years.</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rLongtoTime(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Converts seconds to decimal hours.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Seconds</param>
            <returns>x - Time</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rLongtoDate(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>
Converts a value representing total days elapsed since
day 0 of year 0 to a geosoft date. This uses the
Numerical Receipies Julian function.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Day</param>
            <returns>x - Date</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.rDate(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Returns the current date in decimal years.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
The FormatDate_STR function can be used to convert a date to
a string.
</remarks>
            <returns>Date in decimal years.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iTimetoLong(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Converts decimal hours to seconds in a day.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Time</param>
            <returns>x - Seconds (integer)</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.iDatetoLong(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>
Converts a double date to a value representing total
days elapsed since day 0 of year 0. This uses the
Numerical Receipies Julian function.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Date</param>
            <returns>x - Days</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSYS.BreakDate(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Breaks a decimal date value into year, month and day.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Date value to break</param>
            <param name="i2">Year</param>
            <param name="i3">Month (0-11)</param>
            <param name="i4">Day   (0-30)</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Date/Time</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CSYS">
            <summary>

       The SYS library functions perform a wide range functions,
       including the storage and retrieval of named parameters
       from the current workspace; writing messages to the user;
       display of progress bars; retrieving file, date and time
       information from the operating system; and providing warning
       and error handling functions.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.ComputeExtendedInfo(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Compute more information (including validation) about of all mesh components in the surface item.</summary>
            <param name="i1">Number of inner components (recomputed)</param>
            <param name="i2">Total number of valid vertices</param>
            <param name="i3">Total number of valid edges</param>
            <param name="i4">Total number of valid triangles</param>
            <param name="i5">Number of inconsistent triangles</param>
            <param name="i6">Number of invalid triangles</param>
            <param name="i7">Number of self intersections</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetGeometryInfo(System.Int32@,System.Int32@)">
            <summary>Get the total number of vertices and triangles of all mesh components in item.</summary>
            <param name="i1">Total number of vertices</param>
            <param name="i2">Total number of triangles</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetInfo(System.Int32@,System.Double@,System.Double@,System.Double@)">
            <summary>Gets information about the surface item.</summary>
            <param name="i1">indicating if all meshes in item is closed</param>
            <param name="d2">Area</param>
            <param name="d3">Volume</param>
            <param name="d4">Volume confidence interval</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetMeshInfo(System.Int32,System.Int32@,System.Int32@,System.Double@,System.Double@,System.Double@)">
            <summary>Gets information about a triangular polyhedral mesh component in the surface item.</summary>
            <param name="i1">Index of the component</param>
            <param name="i2">indicating if mesh is closed</param>
            <param name="i3">Number of inner components</param>
            <param name="d4">Area</param>
            <param name="d5">Volume</param>
            <param name="d6">Volume confidence interval</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetExtents(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the spatial range of the the surface item.</summary>
            <param name="d1">Minimum valid data in X.</param>
            <param name="d2">Minimum valid data in Y.</param>
            <param name="d3">Minimum valid data in Z.</param>
            <param name="d4">Maximum valid data in X.</param>
            <param name="d5">Maximum valid data in Y.</param>
            <param name="d6">Maximum valid data in Z.</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetMesh(System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Gets a triangular polyhedral mesh of a component in the surface item.</summary>
            <param name="i1">Index of the component</param>
            <param name="oVV2">Vertices X</param>
            <param name="oVV3">Vertices Y</param>
            <param name="oVV4">Vertices Z</param>
            <param name="oVV5">Triangles 1st Vertex</param>
            <param name="oVV6">Triangles 2nd Vertex</param>
            <param name="oVV7">Triangles 3rd Vertex</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.iAddMesh(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Adds a triangular polyhedral mesh component to the surface item.</summary>
            <param name="oVV1">Vertices X location</param>
            <param name="oVV2">Vertices Y location</param>
            <param name="oVV3">Vertices Z location</param>
            <param name="oVV4">Triangles 1st Vertex</param>
            <param name="oVV5">Triangles 2nd Vertex</param>
            <param name="oVV6">Triangles 3rd Vertex</param>
            <returns>The index of the component added.</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.iNumComponents">
            <summary>Get the number of components in the surface item.</summary>
            <returns>Number of components in the surface item.</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetDefaultRenderProperties(System.Int32@,System.Double@,System.Int32@)">
            <summary>Gets default render properties of the surface item.</summary>
            <param name="i1">Color</param>
            <param name="d2">Transparency</param>
            <param name="i3">&amp;lt;define&amp;gt;SURFACERENDER_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.SetDefaultRenderProperties(System.Int32,System.Double,System.Int32)">
            <summary>Sets default render properties of the surface item.</summary>
            <param name="i1">Color</param>
            <param name="d2">Transparency</param>
            <param name="i3">&amp;lt;define&amp;gt;SURFACERENDER_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetPropertiesEx(System.String@,System.String@,System.String@,System.String@,System.Double@,System.String@,System.String@,System.Int32@,System.Double@,System.Double@)">
            <summary>Gets the properties of the surface item  (includes new properties introduced in 8.5).</summary>
            <param name="str1">Type</param>
            <param name="str2">Name</param>
            <param name="str3">SourceGuid</param>
            <param name="str4">SourceName</param>
            <param name="d5">SourceMeasure</param>
            <param name="str6">SecondarySourceGuid</param>
            <param name="str7">SecondarySourceName</param>
            <param name="i8">SecondarySourceOption</param>
            <param name="d9">SecondarySourceMeasure</param>
            <param name="d10">SecondarySourceMeasure2</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetProperties(System.String@,System.String@,System.String@,System.String@,System.Double@,System.String@,System.String@,System.Double@)">
            <summary>Gets the properties of the surface item.</summary>
            <param name="str1">Type</param>
            <param name="str2">Name</param>
            <param name="str3">SourceGuid</param>
            <param name="str4">SourceName</param>
            <param name="d5">SourceMeasure</param>
            <param name="str6">SecondarySourceGuid</param>
            <param name="str7">SecondarySourceName</param>
            <param name="d8">SecondarySourceMeasure</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.SetPropertiesEx(System.String,System.String,System.String,System.String,System.Double,System.String,System.String,System.Int32,System.Double,System.Double)">
            <summary>Sets the properties of the surface item (includes new properties introduced in 8.5).</summary>
            <param name="str1">Type</param>
            <param name="str2">Name</param>
            <param name="str3">SourceGuid</param>
            <param name="str4">SourceName</param>
            <param name="d5">SourceMeasure</param>
            <param name="str6">SecondarySourceGuid</param>
            <param name="str7">SecondarySourceName</param>
            <param name="i8">SecondarySourceOption</param>
            <param name="d9">SecondarySourceMeasure</param>
            <param name="d10">SecondarySourceMeasure2</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.SetProperties(System.String,System.String,System.String,System.String,System.Double,System.String,System.String,System.Double)">
            <summary>Sets the properties of the surface item.</summary>
            <param name="str1">Type</param>
            <param name="str2">Name</param>
            <param name="str3">SourceGuid</param>
            <param name="str4">SourceName</param>
            <param name="d5">SourceMeasure</param>
            <param name="str6">SecondarySourceGuid</param>
            <param name="str7">SecondarySourceName</param>
            <param name="d8">SecondarySourceMeasure</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.GetGUID(System.String@)">
            <summary>Gets the GUID of the surface item.</summary>
            <param name="str1">GUID</param>
            <remarks>The value returned by this call will not be valid for newly created items until after a call to AddSurfaceItem_SURFACE.</remarks>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACEITEM.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Create a SURFACEITEM</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Type</param>
            <param name="str2">Name</param>
            <returns>SURFACEITEM Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CSURFACEITEM">
            <summary>

       The SURFACEITEM allows you to create, read and alter Geosurface files (*.geosoft_surface).
       A Geosurface file can contain one or more surface items (see SURFACE class). A surface item can
       contains one or more triangular polyhedral meshes.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.DumpGeometryToTextFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Dump surface geometry to a text file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file</param>
            <param name="str2">Text file</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.AppendVulcanTriangulation(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ,System.String)">
            <summary>Create new surface from a Maptek Vulcan triangulation file and add to an existing geosurface.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">00t file</param>
            <param name="oIPJ2" />
            <param name="str3">Geosurface file</param>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.CreateFromVulcanTriangulation(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ,System.String)">
            <summary>Create Geosurface file from a Maptek Vulcan triangulation file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">00t file</param>
            <param name="oIPJ2" />
            <param name="str3">Geosurface file</param>
            <available_version>8.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.CreateFromDXF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIPJ,System.String,System.String)">
            <summary>Create Geosurface file from DXF file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIPJ1" />
            <param name="str2">Geosurface file</param>
            <param name="str3">DXF file</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.Sync(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Syncronize the Metadata for this Geosurface</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file</param>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.CRC(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32@)">
            <summary>Compute an XML CRC of a Geosurface file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file</param>
            <param name="str2">Output file</param>
            <param name="i3">CRC (unused, always set to 0)</param>
            <returns>CRC Value (always 0)</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.GetExtents(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the spatial range of all surface items.</summary>
            <param name="d1">Minimum valid data in X.</param>
            <param name="d2">Minimum valid data in Y.</param>
            <param name="d3">Minimum valid data in Z.</param>
            <param name="d4">Maximum valid data in X.</param>
            <param name="d5">Maximum valid data in Y.</param>
            <param name="d6">Maximum valid data in Z.</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.GetClosedSurfaceNames(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the names of closed surface items in a Geosurface file (may return an empty list)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file</param>
            <param name="oLST2">LST to fill (may return an empty LST if none of the surfaces are closed)</param>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.GetSurfaceNames(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the surface item names in a Geosurface file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file</param>
            <param name="oLST2">LST to fill</param>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.AddSurfaceItem(GeoEngine.Core.GXNetX.CSURFACEITEM)">
            <summary>Add a new surface item to the SURFACE</summary>
            <param name="oSURFACEITEM1">SURFACEITEM to add</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.GetSurfaceItem(System.String)">
            <summary>Get the an existing surface item from the SURFACE</summary>
            <param name="str1">Item GUID</param>
            <returns>SURFACEITEM Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.GetSurfaceItems(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the surfaces items in a Geosurface file</summary>
            <param name="oLST1">LST to fill</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Change the coordinate system of the SURFACE.</summary>
            <param name="oIPJ1">IPJ containing the new coordinate system of the Geosurface</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the coordinate system of the SURFACE.</summary>
            <param name="oIPJ1">IPJ in which to place the Geosurface coordinate system</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Open a Geosurface file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file name</param>
            <param name="i2">&amp;lt;define&amp;gt;SURFACE_OPEN&amp;lt;/define&amp;gt;</param>
            <returns>SURFACE Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSURFACE.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Create a new Geosurface file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosurface file name</param>
            <param name="oIPJ2">IPJ containing coordinate system of the Geosurface</param>
            <returns>SURFACE Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CSURFACE">
            <summary>

       The SURFACE class allows you to create, read and alter Geosurface files (*.geosoft_surface).
       A Geosurface file can contain one or more surface items (see SURFACEITEM class). In turn each item can
       contains one or more triangular polyhedral meshes.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ParseList(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CVV)">
            <summary>Parse a tokenized list to get a selection list.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to be parsed</param>
            <param name="oVV2">Selection Buffer to fill</param>
            <remarks>
Given a list such as "1,3,4,6-9,12", it fills the
input buffer with 1 if the number is selected,
0 if not. The items are delimited with spaces
or commas, and ranges are acceptable, either using
a "-" or ":", e.g.  3-6 and 3:6 both mean 3,4,5, and 6.
Only values from 0 to one less than the buffer length
are used.  Out-of-range values are ignored.
</remarks>
            <available_version>5.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Tokenizing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iTokens2(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String,System.String,System.String)">
            <summary>General tokenize a string</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to tokenize</param>
            <param name="str2">szSoft - Soft delimiters (spaces/tabs)</param>
            <param name="str3">szHard - Hard delimiters (commas)</param>
            <param name="str4">szEsc  - Escape delimiters (back-slash)</param>
            <param name="str5">szQuote- Quote delimiters  (quote characters)</param>
            <remarks>
This function is for old GX compatibility only.
See iTokenize_STR.

DO NOT use this function except in GXC code. The corresponding
IGetToken_STR function will not operate correctly in GX.Net code.
</remarks>
            <returns>Number of Tokens</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Tokenizing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iTokens(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String)">
            <summary>Tokenize a string</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to tokenize</param>
            <param name="str2">Delimiter characters</param>
            <remarks>
Delimiters in the string are reduced to a single NULL.
Delimiters withing double quoted strings are ignored.
Use GetToken_STR to extract tokens.

DO NOT use this function except in GXC code. The corresponding
IGetToken_STR function will not operate correctly in GX.Net code.
</remarks>
            <returns>Number of tokens, maximum is 2048</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Tokenizing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iTokenize(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String,System.String,System.String)">
            <summary>Tokenize a string based on any characters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">STR - String containing token(s)</param>
            <param name="str2">szSoft - Soft delimiters (spaces/tabs)</param>
            <param name="str3">szHard - Hard delimiters (commas)</param>
            <param name="str4">szEsc  - Escape delimiters (back-slash)</param>
            <param name="str5">szQuote- Quote delimiters  (quote characters)</param>
            <remarks>
This uses a finite state machine to tokenize on these
rules:

1. Any one character following an escape delimiter is
treated as a normal character.

2. Any characters inside a quote string are treated as
normal characters.

3. Any number of Soft delimiters in sequence without a
hard delimiter are treated as one hard delimited.

4. Any number of soft delimiters can preceed or follow
a hard delimiter and are ignored.


EXAMPLE

Soft = [ ]   Hard = [,]   Escape = [\]    Quote = ["]

[this is a , , the "test," of   ,  \,\" my delimite  fi,]

Results in:

[this] [is] [a] [] [the] ["test,"] [of] [\,\"] [my] [delimite] [fi] []


NOT use this function except in GXC code. The corresponding
etToken_STR function will not operate correctly in GX.Net code.
</remarks>
            <returns>Number of tokens</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Tokenizing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IGetToken(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.Int32)">
            <summary>Get a token from a tokenized string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination string</param>
            <param name="str2">Tokenized string</param>
            <param name="i3">Token number wanted  (0 is the first!)</param>
            <remarks>
Call iTokens_STR  to prepare the tokenized
string.
You MUST NOT get tokens beyond number of tokens returned
by iTokens_STR or iTokens2_STR.
The first token has index 0.

DO NOT use this function except in GXC code.
IGetToken_STR function will not operate correctly in GX.Net code.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Tokenizing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iCountTokens(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Counts number of tokens.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to tokenize</param>
            <param name="str2">Delimiter characters</param>
            <remarks>
Delimiters are "soft" in that one or more delimiters
is considered a single delimiter, and preceding and
trailing delimiters are ignored.

DO NOT use this function except in GXC code. The corresponding
IGetToken_STR function will not operate correctly in GX.Net code.
</remarks>
            <returns>Number of tokens in the string.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Tokenizing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IGenGroupName(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String@)">
            <summary>
Generate a group name string
from type string, database and channel(optional) strings..
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input type string (static part)</param>
            <param name="str2">Input db string</param>
            <param name="str3">Input ch string (could be 0 length)</param>
            <param name="str4">Output group name string</param>
            <remarks>
The output group name string is formed in the way of typestr_dbstr_chstr.
If the database/channel strings is too long to fit the output string
(max total length of 1040, including the NULL ending), then
the typestr will always be kept the full length to be the first part,
while the dbstr and/or chstr will be shortened to be the
second and/or third part of the output string.
</remarks>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Misc</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.UnQuote(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Remove double quotes from string</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to unquote</param>
            <remarks>
THE STRING IS MODIFIED.
The pointers will be advanced past a first character
quote and a last character quote will be set to .\0'.
Both first and last characters must be quotes for the
triming to take place.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.TrimSpace(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.Int32)">
            <summary>Remove leading and/or trailing whitespace.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to trim</param>
            <param name="i2">&amp;lt;define&amp;gt;STR_TRIM&amp;lt;/define&amp;gt;</param>
            <remarks>
THE STRING IS MODIFIED.
Whitespace characters are defined as space, tab, carriage return,
new line, vertical tab or formfeed (0x09 to 0x0D, 0x20)
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.TrimQuotes(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Remove double quotes.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to trim</param>
            <remarks>
THE STRING IS MODIFIED.
This method goes through the string and removes all spaces in a
string except those enclosed in quotes. It then removes
any quotes. It is usfull for trimming unwanted spaces from
an input string but allows the user to use quotes as well.
If a quote follows a backslash, the quote is retained and
the backslash is deleted. These quotes are NOT treated as
delimiters.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.SetChar(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.Int32)">
            <summary>Set a string's first character using an ASCII value of a character.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String</param>
            <param name="i2">ASCII value</param>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ReplaceNonASCII(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String)">
            <summary>Replace non-ASCII characters in a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to modify</param>
            <param name="str2">Replacement character</param>
            <remarks>
All characthers &gt; 127 will be replaced by the first character
of the replacement string.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ReplaceMultiChar(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String)">
            <summary>Replaces multiple characters in a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to modify</param>
            <param name="str2">Characters to replace</param>
            <param name="str3">Replacement characters</param>
            <remarks>
The number of characters to replace must equal
the number of replacement characters.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ReplaceChar2(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String)">
            <summary>Replaces characters in a string, supports simple removal.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to modify</param>
            <param name="str2">Character to replace (first character only)</param>
            <param name="str3">Replacement character (first character only)</param>
            <remarks>
If the replacement character is "" (NULL character)
then the character to replace is removed from the
input string, and the string is shortened.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ReplaceChar(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String)">
            <summary>Replaces characters in a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to modify</param>
            <param name="str2">Character to replace (first character only)</param>
            <param name="str3">Replacement character (first character only)</param>
            <remarks>
If the input replacement character is "", then the
string will be truncated at the first character to replace.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.Printf(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String)">
            <summary>Variable Argument PrintF function</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination string</param>
            <param name="str2">Pattern string</param>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.MakeAlpha(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Turns all non alpha-numeric characters into an _.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to trim</param>
            <remarks>THE STRING IS MODIFIED.</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IXYZLine(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Make a valid XYZ line name from a valid DB line name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Line name to convert</param>
            <param name="str2">Buffer to hold new line name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IToUpper(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Convert a string to upper case.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IToLower(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Convert a string to lower case.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ISubstr(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.Int32,System.Int32)">
            <summary>Extract part of a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination string</param>
            <param name="str2">Origin string</param>
            <param name="i3">Start location</param>
            <param name="i4">Number of characters</param>
            <remarks>
The destination string length will be less than the
requested length if the substring is not fully enclosed
in the origin string.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrStr(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Scan a string for the occurrence of a given substring.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to scan</param>
            <param name="str2">String to look for</param>
            <param name="i3">&amp;lt;define&amp;gt;STR_CASE&amp;lt;/define&amp;gt;</param>
            <returns>
-1 if the substring does not occur in the string
Index of first matching location if found
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrncmp(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32,System.Int32)">
            <summary>Compares two strings to a given number of characters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String A</param>
            <param name="str2">String B</param>
            <param name="i3">Number of characters to compare</param>
            <param name="i4">&amp;lt;define&amp;gt;STR_CASE&amp;lt;/define&amp;gt;</param>
            <returns>
A  &lt;  B           -1
A ==  B            0
A  &gt;  B            1
</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrMin2(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Length less spaces and tabs, string unchanged.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to find the min length of</param>
            <returns>String length.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrMin(GeoEngine.Core.GXNetX.CGXNETCore,System.String@)">
            <summary>Remove spaces and tabs and return length</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to find the min length of</param>
            <remarks>
String may be modified. This function should not be
used to determine if a file name string is defined, because
a valid file name can contain spaces, and once "tested" the
name will be altered. Instead, use iStrMin2_STR, or use
iFileExist_SYS to see if the file actually exists.
</remarks>
            <returns>String length.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrMask(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Case sensitive comparison of two strings.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Mask</param>
            <param name="str2">String to test</param>
            <remarks>
Mask characters '*' - matches any one or more up to
next character
'?' - matches one character

Test is case sensitive
</remarks>
            <returns>
0 if string does not match mask.
1 if string matches mask.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrlen(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns the length of a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to find the length of</param>
            <returns>String length.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IStrins(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.Int32,System.String)">
            <summary>This method inserts a string at a specified position.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination String</param>
            <param name="i2">Insert Position</param>
            <param name="str3">String to add</param>
            <remarks>
If the specified position does not fall within the current string
the source string will simply be Concatenated.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStriMask(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Case insensitive comparison of two strings.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Mask</param>
            <param name="str2">String to test</param>
            <remarks>
Mask characters '*' - matches any one or more up to
next character
'?' - matches one character

Test is case insensitive
</remarks>
            <returns>
0 if string does not match mask.
1 if string matches mask.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IStrcpy(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String)">
            <summary>This method copies a string into another string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination string</param>
            <param name="str2">Origin string</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iStrcmp(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>This method compares two strings and returns these values</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String A</param>
            <param name="str2">String B</param>
            <param name="i3">&amp;lt;define&amp;gt;STR_CASE&amp;lt;/define&amp;gt;</param>
            <returns>
A  &lt;  B           -1
A ==  B            0
A  &gt;  B            1
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IStrcat(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String)">
            <summary>This method contatinates a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination String</param>
            <param name="str2">String to add</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ISplitString(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String@)">
            <summary>Splits a string in two on a character.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Original string</param>
            <param name="str2">Split character (first character of string)</param>
            <param name="str3">Split string past split character.</param>
            <remarks>
The original string is modified by terminating it
at the character split.

The part of the string past the character split is
copied to the split string.

Split characters in quoted strings are ignored.

This function is mainly intended to separate comments
from control file strings.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.ISetCharN(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.Int32,System.Int32)">
            <summary>Set the n'th character of a string using an ASCII value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String</param>
            <param name="i2">Character to set</param>
            <param name="i3">ASCII value</param>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IReplaceMatchString(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String)">
            <summary>Replaces all occurances of match string by replacement string with case sensitive.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination String</param>
            <param name="str2">Match string to replace</param>
            <param name="str3">Replacement string</param>
            <remarks>
If the replacement string is "" (NULL character)
then the string to replace is removed from the
input string, and the string is shortened.
</remarks>
            <available_version>7.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IReplaceiMatchString(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String,System.String)">
            <summary>Replaces all occurances of match string by replacement string with case insensitive.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Destination String</param>
            <param name="str2">Match string to replace</param>
            <param name="str3">Replacement string</param>
            <remarks>
If the replacement string is "" (NULL character)
then the string to replace is removed from the
input string, and the string is shortened.
</remarks>
            <available_version>7.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IJustify(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,System.Int32,System.Int32)">
            <summary>Justify a string</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to justify</param>
            <param name="str2">Result string, can be same as input</param>
            <param name="i3">Justification width</param>
            <param name="i4">&amp;lt;define&amp;gt;STR_JUSTIFY&amp;lt;/define&amp;gt;</param>
            <remarks>
If the string is too big to fit in the number of display characters,
the output string will be "**" justified as specified.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IiCharN(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32)">
            <summary>Returns the ASCII value of the n'th character.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String</param>
            <param name="i2">Character to get</param>
            <param name="i3">Maximum string length (unused)</param>
            <returns>
ASCII value of n'th character in string.
The first character is 0.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iChar(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns the ASCII value of a character.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to return ascii value of first character</param>
            <returns>ASCII value of first character in string.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.Escape(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.Int32)">
            <summary>Convert/replace escape sequences in strings.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to modify</param>
            <param name="i2">&amp;lt;define&amp;gt;STR_ESCAPE&amp;lt;/define&amp;gt;</param>
            <remarks>
Escape characters:

\a      bell
\b      backspace
\f      formfeed
\n      new line
\r      carriage return
\t      tab
\v      vertical tab
\"      quote character
\x      take 'x' literally
\      backslash
\ooo    octal up to 3 characters
\xhh    hex up to 2 characters

A common use of this function is to convert double-quote characters in
a user unput string to \" so the string can be placed in a tokenized
string.
</remarks>
            <available_version>5.0.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>General</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatTime(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.String@,System.Int32,System.Int32,System.Int32)">
            <summary>Convert a GX real to a time string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Time value in decimal hours to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">Width of the field</param>
            <param name="i4">Decimals to format with</param>
            <param name="i5">&amp;lt;define&amp;gt;TIME_FORMAT&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatReal(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.String@,System.Int32,System.Int32,System.Int32)">
            <summary>Convert a GX real to a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Value to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">&amp;lt;define&amp;gt;GS_FORMATS&amp;lt;/define&amp;gt;</param>
            <param name="i4">Width of the field</param>
            <param name="i5">Significant digits/decimals</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatR2(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.String@,System.Int32,System.Int32)">
            <summary>Convert a GX real to a string with given decimals.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Value to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">Width of the field</param>
            <param name="i4">Decimals</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatR(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.String@,System.Int32,System.Int32)">
            <summary>Convert a GX real to a string with significant digits.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Value to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">Width of the field</param>
            <param name="i4">Significant digits</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatI(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@,System.Int32)">
            <summary>Convert a GX int to a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Value to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">Width of the field</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatDate(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.String@,System.Int32,System.Int32)">
            <summary>Convert a GX real to a date string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Date value in decimal years to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">Width of the field</param>
            <param name="i4">&amp;lt;define&amp;gt;DATE_FORMAT&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFormatCRC(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@,System.Int32)">
            <summary>Convert a GX CRC value to a string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">CRC value to format</param>
            <param name="str2">Resulting string</param>
            <param name="i3">Width of the field</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Formating</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IRemoveQualifiers(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Remove file qualifiers from a file name</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input file name</param>
            <param name="str2">Output file name (can be same as input)</param>
            <available_version>7.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File Name</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IGetMFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,System.Int32)">
            <summary>Get the indexed filepath from a multiple filepath string</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input multifile string</param>
            <param name="str2">Output filepath string</param>
            <param name="i3">Index of file</param>
            <remarks>
The multifile string must use '|' as a delimiter.
Do not pass a string after calling iTokenize_STR.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File Name</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFileNamePart(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,System.Int32)">
            <summary>Get part of a file name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name</param>
            <param name="str2">Destination string, can be same as input</param>
            <param name="i3">&amp;lt;define&amp;gt;STR_FILE_PART&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File Name</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFileExt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String@,System.Int32)">
            <summary>Add a file extension onto a file name string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name to extend</param>
            <param name="str2">Extension if "", extenstion and '.' are stripped.</param>
            <param name="str3">Extended file name (can be same as input)</param>
            <param name="i4">&amp;lt;define&amp;gt;FILE_EXT&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File Name</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.IFileCombineParts(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.String,System.String@)">
            <summary>Combine file parts to build a file name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Drive</param>
            <param name="str2">Directory</param>
            <param name="str3">Name</param>
            <param name="str4">Extension</param>
            <param name="str5">Qualifiers</param>
            <param name="str6">Destination string, can be same as input</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File Name</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.rScanTime(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Convert a time string to a GX real.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Date string</param>
            <param name="i2">&amp;lt;define&amp;gt;TIME_FORMAT&amp;lt;/define&amp;gt;</param>
            <remarks>OLD usage, use ScanForm_STR instead.</remarks>
            <returns>Resulting Real, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if conversion fails.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Input</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.rScanR(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Convert a string to a GX real.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to convert to a real</param>
            <returns>Resulting Real, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if bad string.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Input</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.rScanForm(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Convert a formated string to a real.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Date string</param>
            <param name="i2">&amp;lt;define&amp;gt;GS_FORMATS&amp;lt;/define&amp;gt;</param>
            <returns>Resulting Real, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if conversion fails.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Input</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.rScanDate(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Convert a date string to a GX real.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Date string</param>
            <param name="i2">&amp;lt;define&amp;gt;DATE_FORMAT&amp;lt;/define&amp;gt;</param>
            <remarks>OLD usage, use ScanForm_STR instead.</remarks>
            <returns>Resulting Real, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if conversion fails.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Input</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTR.iScanI(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Convert a string to a GX int.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">String to convert to an integer</param>
            <returns>Resulting Integer, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; is bad integer</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Input</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CSTR">
            <summary>

       This library is not a class. Use the STR library functions
       to work with and manipulate string variables. Since the
       GX Programming Language does not provide string literal
       tokens, you must use these functions for any string operations
       you want to perform.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTORAGEPROJECT.RemoveDataset(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Remove this dataset from the project.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Dataset File Name</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTORAGEPROJECT.Close(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Close the project storage.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSTORAGEPROJECT.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Open a project storage.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Project File Name</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CSTORAGEPROJECT">
            <summary>

       Project Storage.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST2.rGet(System.Int32)">
            <summary>Gets correlation coeff. from the ST2 object.</summary>
            <param name="i1">&amp;lt;define&amp;gt;ST2_CORRELATION&amp;lt;/define&amp;gt;</param>
            <returns>
Data you asked for
&amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; for none
</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST2.Reset">
            <summary>Resets the Statistics.</summary>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST2.iItems">
            <summary>Gets Number of items</summary>
            <returns>Number of items in ST2</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST2.DataVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Add all the values in VVx and VVy to ST2 object.</summary>
            <param name="oVV1">VVx handle</param>
            <param name="oVV2">VVy handle</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST2.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates a statistics object which is used to accumulate statistics.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>ST2 Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CST2">
            <summary>

       Bi-variate statistics. The ST2 class accumulates statistics
       on two data vectors simultaneously in order to compute correlation
       information. Statistics are accumulated using the DataVV_ST2 function.
       See also ST (mono-variate statistics).
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.rNormalTest">
            <summary>Test the "normality" of the histogram distribution</summary>
            <remarks>
This function compares the histogram to a normal curve with the
same mean and standard deviation. The individual counts are normalized
by the total counts, the bin width and the standard deviation.
For each bin, the rms difference between the expected probability and
the normalized count is summed, and the final result is normalized by
the total number of bins. In this way histograms with different means,
standard deviations, number of bins and counts can be compared.
If the histogram were perfectly normal, then a value of 0 would be returned.
The more "non-normal", the higher the statistic.
</remarks>
            <returns>
The normality statistic.
Terminates if no histogram in the ST object.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.rGetNormProbX(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Return number of sigmas from 50% a given percent is</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <returns>
real


Notes			this function is based on Normal Cumulative distribution function
mit to about 5 standard deviations
</returns>
            <available_version>7.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.rGetNormProb(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Return percent value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <returns>
real


Notes			this function is based on Normal Cumulative distribution function
mit to about 5 standard deviations
</returns>
            <available_version>7.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.rGetInfo(System.Int32)">
            <summary>
This method allows you to retrieve (and compute) the
information from the ST object.
</summary>
            <param name="i1">&amp;lt;define&amp;gt;ST_INFO&amp;lt;/define&amp;gt;</param>
            <remarks>
The following can only be determined if the ST has recorded
a histogram: &amp;lt;define&amp;gt;ST_MEDIAN&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;ST_MODE&amp;lt;/define&amp;gt;

&amp;lt;define&amp;gt;ST_MINPOS&amp;lt;/define&amp;gt; can be used to retrieve the smallest value greater
than zero, but not from ST objects recovered from serialized object.
</remarks>
            <returns>
Data you asked for
&amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; for none
</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.Reset">
            <summary>Resets the Statistics.</summary>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.rEquivalentValue(System.Double)">
            <summary>Return corresponding Value for a Percentile</summary>
            <param name="d1">Input percentile (0 - 100)</param>
            <remarks>
Statistics and histogram must have been calculated prior to
calling this method
</remarks>
            <returns>The value at the given percentile.</returns>
            <available_version>5.0.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.rEquivalentPercentile(System.Double)">
            <summary>Return corresponding Percentile for a Value.</summary>
            <param name="d1">Input value</param>
            <remarks>
Statistics and histogram must have been calculated prior to
calling this method
</remarks>
            <returns>The percentile at the given value (0 - 100)</returns>
            <available_version>5.0.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.Histogram2(System.Int32,System.Double,System.Double)">
            <summary>This method prepares ST for recording histogram.</summary>
            <param name="i1"># of bins</param>
            <param name="d2">Min</param>
            <param name="d3">Max</param>
            <remarks>
The Number of bins includes the one before the minimum
and the one after the maximum, so it must be a value &gt;2.
The width of the individual bins will be (Min-Max)/(# - 2)

See histogram_ranges_
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.Histogram(System.Int32)">
            <summary>This method prepares ST for recording histogram.</summary>
            <param name="i1"># of bins</param>
            <remarks>
The Number of bins includes the one before the minimum
and the one after the maximum, so it must be a value &gt;2.

IMPORTANT: This function gets the histogram minimum and
maximum from the current min and max values stored in the ST,
so this is equivalent to calling Histogram2_ST with

#bins, Min, (Max-Min)/(# bins -2))

You should already have the data loaded in order to call this
function.

See histogram_ranges_
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.GetHistogramInfo(System.Int32@,System.Double@,System.Double@)">
            <summary>Retrieve number of bins, min and max value in histogram</summary>
            <param name="i1"># of bins</param>
            <param name="d2">Min (value at start of 2nd bin)</param>
            <param name="d3">Max (value at end of 2nd last bin)</param>
            <remarks>
The items correspond to those in Histogram2_ST.
If a histogram is not defined in
the ST, then the returned number of bins is zero, and
the min and max values will be dummies.
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.GetHistogramBins(GeoEngine.Core.GXNetX.CVV)">
            <summary>Retrieve number of items in each hostogram bin</summary>
            <param name="oVV1">VV for numbers of items</param>
            <remarks>
The length of the returned VV is set to the total
number of bins. If a histogram is not defined in
the ST, then the returned length is zero.
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.DataVV(GeoEngine.Core.GXNetX.CVV)">
            <summary>Add all the values in this VV to the statistics object.</summary>
            <param name="oVV1">VV object</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.Data(System.Double)">
            <summary>Add this value to the statistics object.</summary>
            <param name="d1">Value to Add</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.CreateExact(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
This method creates a statistics object which stores
all values.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>ST Object</returns>
            <available_version>5.1.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CST.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>
This method creates a statistics object which is used to
accumulate statistics.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>ST Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CST">
            <summary>

       Mono-variate statistics. The ST class is used to accumulate statistical
       information about a set of data. This class is usually used in conjunction
       with others. For instance, Stat_DU (see DU) will add a channel's
       data to the ST object, and sComputeST_IMG (see IMG) will compute
       statistics for a grid.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.SaveLog(System.String,System.String,System.String,System.Int32)">
            <summary>Save an embedded file to an ASCII file.</summary>
            <param name="str1">Directory name in the Parent SBF</param>
            <param name="str2">File name in the directory</param>
            <param name="str3">File to save as (as an ASCII file)</param>
            <param name="i4">Append Mode: 0 - New file, 1 - Append file</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.iExistFile(System.String)">
            <summary>Check to see if a file exists inside this storage.</summary>
            <param name="str1">File Name</param>
            <returns>
0 - Does not exist
1 - Exists
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.iExistDir(System.String)">
            <summary>Check to see if a directory (storage) exists inside this storage.</summary>
            <param name="str1">Dir/Storage Name</param>
            <returns>
0 - Does not exist
1 - Exists
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.hGetSYS(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Get the main embedded file storage (in workspace).</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>SBF Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.hGetMAP(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP)">
            <summary>Get the embedded file storage from a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP object</param>
            <returns>SBF Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.hGetDB(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB)">
            <summary>Get the embedded file storage from a database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database</param>
            <returns>SBF Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.DelFile(System.String)">
            <summary>Delete a file from this storage.</summary>
            <param name="str1">File Name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.DelDir(System.String)">
            <summary>Delete a directory (storage) from this storage.</summary>
            <param name="str1">Dir/Storage Name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.CreateObjList(GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>Fills an LST with embedded storage names of an SBF.</summary>
            <param name="oLST1">LST handle</param>
            <param name="i2">&amp;lt;define&amp;gt;SBF_TYPE&amp;lt;/define&amp;gt;</param>
            <remarks>
Function will populate an LST object with embedded files (&amp;lt;define&amp;gt;SBF_TYPE_FILES&amp;lt;/define&amp;gt;),
directories (&amp;lt;define&amp;gt;SBF_TYPE_DIRS&amp;lt;/define&amp;gt;), or both (pass &amp;lt;define&amp;gt;SBF_TYPE_BOTH&amp;lt;/define&amp;gt;) in an SBF.
Along with the Name of the file or directory, a constant "dir" or "file" string is written
to the LST also.
</remarks>
            <available_version>5.0.7</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CSBF.Create(System.String,System.Int32)">
            <summary>Create a child SBF object inside an SBF.</summary>
            <param name="str1">Directory name to open / create</param>
            <param name="i2">&amp;lt;define&amp;gt;SBF_OPEN&amp;lt;/define&amp;gt;</param>
            <returns>SBF object, terminates if fails.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CSBF">
            <summary>

       The SBF class provides a means of storing data in a
       file-type directory structure within a workspace, database
       or map. Each of these three objects contains its own SBF object,
       which may be accessed using the hGetSYS_SBF, hGetDB_SBF and
       hGetMAP_SBF functions. To access data in a file, or create a
       new file in the SBF object, call the CreatSBF_BF function (see BF),
       which will return a BF object to use.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.SetReal(System.String,System.Double)">
            <summary>Sets an real for a specified parameter in the REG object</summary>
            <param name="str1">Name of the parameter</param>
            <param name="d2">Real to set, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; to remove the parameter</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.SetInt(System.String,System.Int32)">
            <summary>Sets an int for a specified parameter in the REG object</summary>
            <param name="str1">Name of the parameter</param>
            <param name="i2">Int to set, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; to remove the parameter</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Set(System.String,System.String)">
            <summary>Sets a string parameter in the REG object</summary>
            <param name="str1">Name of the parameter</param>
            <param name="str2">String to set it to An empty string sets the setting to an empty string, but does NOT remove the parameter from the REG.</param>
            <remarks>
To remove a parameter completely, use one of the
following:

SetInt_REG(Reg, sParam, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt;);
or
SetReal_REG(Reg, sParam, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;);
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize a REG object into a file.</summary>
            <param name="oBF1">BF to serialize REG into</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.SaveINI(System.String)">
            <summary>Save a REG to an INI file.</summary>
            <param name="str1">INI file name</param>
            <remarks>
Only REG parameters in the form "GROUP.ITEM" are
dumped to the INI file, because they match the INI format
which groups items under [GROUP] headings.
Single-word items (without a separating period) are skipped.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Merge(GeoEngine.Core.GXNetX.CREG,System.Int32)">
            <summary>Merge</summary>
            <param name="oREG1">Source</param>
            <param name="i2">&amp;lt;define&amp;gt;REG_MERGE&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.MatchString(System.String,System.String@)">
            <summary>Replace a string with reg settings.</summary>
            <param name="str1">String to Replace</param>
            <param name="str2">Output Buffer</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.LoadINI(System.String)">
            <summary>Load a registry from an INI file.</summary>
            <param name="str1">INI file name</param>
            <remarks>Items are loaded into the REG in the format "GROUP.ITEM".</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.iEntries">
            <summary>Get the number of parms in a REG object</summary>
            <returns>Number of parms in a REG object.</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.GetReal(System.String,System.Double@)">
            <summary>Gets an real for a specified parameter in the REG object</summary>
            <param name="str1">Name of the parameter</param>
            <param name="d2">Real to get</param>
            <remarks>If parameter is not present in REG, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; is returned.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.GetOne(System.Int32,System.String@,System.String@)">
            <summary>Gets n-th entry of the REG object</summary>
            <param name="i1">Sequential number of REG entry</param>
            <param name="str2">String to put parameter name</param>
            <param name="str3">String to put data into.</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.GetInt(System.String,System.Int32@)">
            <summary>Gets an int for a specified parameter in the REG object</summary>
            <param name="str1">Name of the parameter</param>
            <param name="i2">Int to get</param>
            <remarks>If parameter is not present in REG, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; is returned.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Get(System.String,System.String@)">
            <summary>Gets a string for a specified parameter in the REG object</summary>
            <param name="str1">Name of the parameter</param>
            <param name="str2">String to get</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create a handle to a REG object from a BF</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1">BF handle for file containing serialized REG</param>
            <returns>REG Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Create a handle to a REG object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Maximum size of "parameter=setting" string.</param>
            <returns>REG Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Copy(GeoEngine.Core.GXNetX.CREG)">
            <summary>Copy</summary>
            <param name="oREG1">Source</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CREG.Clear">
            <summary>Clears all the parameters in a REG object</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CREG">
            <summary>

       The REG class is used for storing and retrieving named
       variables. Many classes contain REG objects for storing
       information particular to the class.  The META class supersedes
       the REG class and is gradually replacing the use of the
       REG class in newer applications.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CRA.iSeek(System.Int32)">
            <summary>Position next read to specified line #</summary>
            <param name="i1">Line #, 0 is the first.</param>
            <returns>
0 if seeked line is within the range of lines,
1 if outside range, line pointer will not be moved.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CRA.iLine">
            <summary>Returns current line #, 0 is the first</summary>
            <remarks>This will be the next line read.</remarks>
            <returns>The current read line location.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CRA.iLen">
            <summary>Returns the total number of lines in RA</summary>
            <returns># of lines in the RA.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CRA.IiGets(System.String@)">
            <summary>Get next full line from RA</summary>
            <param name="str1">Buffer in which to place string</param>
            <returns>
0 - Ok
1 - End of file
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CRA.CreateSBF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CSBF,System.String)">
            <summary>Creates RA on an SBF</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oSBF1">Storage</param>
            <param name="str2">Name of the file</param>
            <remarks>
This method allows you to open an RA in a structured file
storage (an SBF).  SBFs can be created inside other data
containers, such as workspaces, maps, images and databases.
This lets you store application specific information together
with the data to which it applies.
</remarks>
            <returns>RA Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CRA.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Creates RA</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the file</param>
            <returns>RA Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CRA">
            <summary>

       The RA class is used to access ASCII files sequentially or
       by line number. The files are opened in read-only mode, so no
       write operations are defined
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Thin(System.Double)">
            <summary>Thin polygons to a desired resolution</summary>
            <param name="d1">Thining resolution</param>
            <remarks>
Points on the polygon that deviate from a line drawn between
neighboring points by more than the thining resolution will
be removed.
</remarks>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the projection.</summary>
            <param name="oIPJ1">IPJ to place in the PLY</param>
            <remarks>This changes the projection information only.</remarks>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.SetDescription(System.String)">
            <summary>Set the PLY description string</summary>
            <param name="str1">Polygon description</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize an PLY to a BF</summary>
            <param name="oBF1">BF to serialize to</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.SaveTable(System.String)">
            <summary>Save Polygons to a Polygon file.</summary>
            <param name="str1">Name of the polygon file</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Rotate(System.Double,System.Double,System.Double)">
            <summary>Rotate a polygon about a point.</summary>
            <param name="d1">Rotation point, X</param>
            <param name="d2">Rotation point, Y</param>
            <param name="d3">Rotation angle, CCW in degrees</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Rectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a polygon from a rectangular area.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.rArea">
            <summary>Compute the Area of a polygon</summary>
            <remarks>Excluded polygons have negative area.</remarks>
            <returns>Area of a polygon</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.LoadTable(System.String)">
            <summary>Loads Polygons from a Polygon file.</summary>
            <param name="str1">Name of the polygon file File contains coordinates of one or more polygons</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.iNumPoly">
            <summary>Get the number of polygons.</summary>
            <returns>Number of polygons in the PLY.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.IGetDescription(System.String@)">
            <summary>Get the PLY description string</summary>
            <param name="str1">Polygon description</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.iClipPLY(GeoEngine.Core.GXNetX.CPLY,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Clip one polygon against another</summary>
            <param name="oPLY1">Polygon B</param>
            <param name="oPLY2">Resulting clipped region</param>
            <remarks>
Resulting clipped polygon only has inclusive
regions of the clipped area.  Exclusion polygons
are treated as included areas.
</remarks>
            <returns>&amp;lt;define&amp;gt;PLY_CLIP&amp;lt;/define&amp;gt;</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.iClipLineInt(System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,System.Double,System.Int32@)">
            <summary>
Clips a line in or out of the polygons for intersections (&amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;).
Intersections are returned as fiducials down the line stored in VV
starting at the first point of the line.
Examples:
No intersection: &amp;lt;define&amp;gt;PLY_LINE_CLIP_OUTSIDE&amp;lt;/define&amp;gt;, 0 intersections
Starts outside, ends inside: &amp;lt;define&amp;gt;PLY_LINE_CLIP_OUTSIDE&amp;lt;/define&amp;gt;, 1 intersection
Starts outside, intersects then ends inside or outside: &amp;lt;define&amp;gt;PLY_LINE_CLIP_OUTSIDE&amp;lt;/define&amp;gt;, 2 intersections
Starts inside, ends inside : &amp;lt;define&amp;gt;PLY_LINE_CLIP_INSIDE&amp;lt;/define&amp;gt;, 1 intersection (gives end-of-line)
Starts inside, ends outside : &amp;lt;define&amp;gt;PLY_LINE_CLIP_INSIDE&amp;lt;/define&amp;gt;, 1 intersection
</summary>
            <param name="d1">Min X of line to clip</param>
            <param name="d2">Min Y of line to clip</param>
            <param name="d3">Max X of line to clip</param>
            <param name="d4">Max y of line to clip</param>
            <param name="oVV5">DOUBLE VV holding intersection fids</param>
            <param name="d6">Data element increment (precision)</param>
            <param name="i7">First point value (&amp;lt;define&amp;gt;PLY_LINE_CLIP&amp;lt;/define&amp;gt; value)</param>
            <returns>0, Terminates on error (you can ignore this value)</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.iClipArea(System.Double,System.Double,System.Double,System.Double)">
            <summary>Clip a polygon to an area</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max y</param>
            <returns>&amp;lt;define&amp;gt;PLY_CLIP&amp;lt;/define&amp;gt;</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.GetPolygonEx(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32@)">
            <summary>Get a polygon from the PLY</summary>
            <param name="oVV1">X VV.</param>
            <param name="oVV2">Y VV.</param>
            <param name="i3">Polygon number</param>
            <param name="i4">TRUE if exclusion polygon</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.GetPolygon(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Get a polygon from the PLY</summary>
            <param name="oVV1">X VV.</param>
            <param name="oVV2">Y VV.</param>
            <param name="i3">Polygon number</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the projection.</summary>
            <param name="oIPJ1">IPJ in which to place the PLY projection</param>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Extent(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the extent of the current polygon.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <remarks>If there are no polygons in the PLY object, returns dummies.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create an PLY Object from a BF</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1">BF to serialize from</param>
            <returns>PLY Handle</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates a Polygon Object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>PLY Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Combine(GeoEngine.Core.GXNetX.CPLY,System.Int32)">
            <summary>Combines two PLY Object with another</summary>
            <param name="oPLY1">Source</param>
            <param name="i2">Make all the polygons copied excluded? - if not they will be copied as they are.</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.IsValid">
            <summary>Ensure a polygon is valid</summary>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Copy(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Copies one PLY Object to another</summary>
            <param name="oPLY1">Source</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.Clear">
            <summary>Clear/remove all polygons from the PLY.</summary>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.ChangeIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the projection.</summary>
            <param name="oIPJ1">IPJ to place in the PLY</param>
            <remarks>The PLY is re-projected to the new projection.</remarks>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.AddPolygonEx(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Add a polygon to the polygon file.</summary>
            <param name="oVV1">X VV.</param>
            <param name="oVV2">Y VV.</param>
            <param name="i3">bExclude</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPLY.AddPolygon(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Add a polygon to the polygon file.</summary>
            <param name="oVV1">X VV.</param>
            <param name="oVV2">Y VV.</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CPLY">
            <summary>

       The PLY object contains the definitions for one or more
       polygons, and does import and export of polygon files.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ProjectBoundingVolume(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Project a bounding volume.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Min Z</param>
            <param name="d4">Max X</param>
            <param name="d5">Max Y</param>
            <param name="d6">Max Z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.SetupLDT">
            <summary>Setup the PJ with LDT check.</summary>
            <remarks>
By default, a PJ on the same datum will not apply a LDT,
is intended for transformations between datums.  However,
in some instances you might want to convert between LDTs on
the same datum, such as when you have two sets of coordinates
that you KNOW came from WGS84 and were placed on this datum
using differnt LDT's.  If you want to combine such coordinate
systems, one or the other should be converted to the other's
LDT.  Note that a more logical way to do this would be to
convert both sets back to their original WGS84 coordinates
and combine in WGS84.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ProjectLimitedBoundingRectangle(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Project a bounding rectangle with limits.</summary>
            <param name="d1">Output limited bounding region Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <param name="d5">Bounding Region Min X</param>
            <param name="d6">Min Y</param>
            <param name="d7">Max X</param>
            <param name="d8">Max Y</param>
            <remarks>
The bounding rectangle will be limited to no larger
than the area specified in the output projection.  This
is useful when projecting from limits that are unreasonable
in the target projection.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ProjectBoundingRectangleRes2(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double)">
            <summary>Project a bounding rectangle with resolution and error tolerance.</summary>
            <param name="d1">Bounding Region Min X</param>
            <param name="d2">Bounding Region Min Y</param>
            <param name="d3">Bounding Region Max X</param>
            <param name="d4">Bounding Region Max Y</param>
            <param name="d5">Resolution</param>
            <param name="d6">Maximum allowable projection error if &lt;= 0.0, will use 0.005% of smallest dimension</param>
            <remarks>
This is the same as ProjectBoundingRectangleRes_PJ except that the bounding
rectangle will be limited to an area within which the projection can be
performed to an accuracy better than the specified error tolerance.
</remarks>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ProjectBoundingRectangleRes(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Project a bounding rectangle with resolution.</summary>
            <param name="d1">Bounding Region Min X</param>
            <param name="d2">Bounding Region Min Y</param>
            <param name="d3">Bounding Region Max X</param>
            <param name="d4">Bounding Region Max Y</param>
            <param name="d5">Resolution</param>
            <remarks>
This function behaves just like ProjBoundingRectangle_PJ
except that it also computes an approximate resolution
at the reprojected coordinate system from a given original
resolution.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ProjectBoundingRectangle2(System.Double@,System.Double@,System.Double@,System.Double@,System.Double)">
            <summary>Project a bounding rectangle with error tolerance.</summary>
            <param name="d1">Bounding Region Min X</param>
            <param name="d2">Bounding Region Min Y</param>
            <param name="d3">Bounding Region Max X</param>
            <param name="d4">Bounding Region Max Y</param>
            <param name="d5">Maximum allowable projection error if &lt;= 0.0, will use 0.005% of smallest dimension</param>
            <remarks>
This is the same as ProjectBoundingRectangle_PJ except that the bounding
rectangle will be limited to an area within which the projection can be
performed to an accuracy better than the specified error tolerance.
</remarks>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ProjectBoundingRectangle(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Project a bounding rectangle.</summary>
            <param name="d1">Bounding Region Min X</param>
            <param name="d2">Bounding Region Min Y</param>
            <param name="d3">Bounding Region Max X</param>
            <param name="d4">Bounding Region Max Y</param>
            <remarks>
A rectangular area from (dMinX, dMinY) to (dMaxX, dMaxY)
is projected throught the PJ. The resulting region area is
then digitized along its edges and a new bounding rectangle
is computed.  If there is a lot of curve through the
projection the resulting bounding region may be slightly
smaller than the true region.
</remarks>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.iIsOutputLL">
            <summary>Is the output projection a lat/long.</summary>
            <returns>
1 - Yes
0 - No
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.iIsInputLL">
            <summary>Is the input projection a lat/long.</summary>
            <returns>
1 - Yes
0 - No
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.iElevation">
            <summary>Get elevation correction method</summary>
            <remarks>
To determine the model in use, refer to the datum_trf column in the
user\csv\datumtrf.csv file.  The datum and geoid model are named in
the sqare brackets following the transform name as follows:

name [datum_model:geoid]

The datum_model is the name of the datum transformation model which will
be in a file with extension .ll2 in the \etc directory.  The geoid is the
name of the geoid model which will be in a grid file with extension .grd
in the \etc directory.  If the geoid model is missing, this method will
return &amp;lt;define&amp;gt;PJ_ELEVATION_NONE&amp;lt;/define&amp;gt; and elevation coordinates will not be changed.
</remarks>
            <returns>&amp;lt;define&amp;gt;PJ_ELEVATION&amp;lt;/define&amp;gt;</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.CreateRectified(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Create a rectified PJ from lon,lat,rotation</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Longitude  at (X,Y) origin</param>
            <param name="d2">Latitude   at (X,Y) origin</param>
            <param name="d3">(X,Y) origin</param>
            <param name="d4" />
            <param name="d5">Coordinate Y relative to geographic N (deg azm)</param>
            <param name="d6">Scale to convert X,Y to m.</param>
            <param name="i7">&amp;lt;define&amp;gt;PJ_RECT&amp;lt;/define&amp;gt;</param>
            <remarks>
Given an X,Y coordinate system, the lat/lon origin and
angle of the coordinate system, this will create a PJ
to convert between X,Y coordinates and Lon,Lat.
The Lon/Lat is determined using a Transverse Mercator
projection with central meridian through the center
of the coordinates on a WGS 84 datum.
</remarks>
            <returns>PJ Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.CreateIPJ(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>This method creates a projection object from IPJs.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIPJ1">Input Projection, (IPJ)0 for long/lat</param>
            <param name="oIPJ2">Output Projection, (IPJ)0 for long/lat</param>
            <remarks>
If converting to/from long/lat in the natural coordinate
system of the source/target, only the long/lat system
can be passed as (IPJ)0.
</remarks>
            <returns>PJ Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>This method creates a projection object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input PRJ file name, "" for geodetic</param>
            <param name="str2">Ouput PRJ file name, "" for geodetic</param>
            <returns>PJ Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ConvertXYZ(System.Double@,System.Double@,System.Double@)">
            <summary>Convert X,Y,Z from input projection to output projection.</summary>
            <param name="d1">X  (or Longitude)</param>
            <param name="d2">Y  (or Latitude)</param>
            <param name="d3">Z  (or Depth)</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ConvertXYFromXYZ(System.Double@,System.Double@,System.Double)">
            <summary>Convert X, Y from input projection to output projection, taking Z into account</summary>
            <param name="d1">X  (or Longitude)</param>
            <param name="d2">Y  (or Latitude)</param>
            <param name="d3">Z  (or Depth - unchanged)</param>
            <remarks>
This function is used (for instance) when projecting voxel model locations
where the user expects that the vertical position will not change. The
regular ConvertXYZ_PJ may result in shifts of hundreds, even a thousand
meters in case where you are going from the geoid to an ellipsoid.
The value of Z can have an important effect on the accuracy of the results, as
the normal ConvertXY_PJ assumes a value of Z=0 internally and calls
ConvertXYZ_PJ.
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ConvertXY(System.Double@,System.Double@)">
            <summary>Convert X, Y from input projection to output projection.</summary>
            <param name="d1">X  (or Longitude)</param>
            <param name="d2">Y  (or Latitude)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ConvertVV3(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Convert VVx/VVy/VVz projections</summary>
            <param name="oVV1">VVx</param>
            <param name="oVV2">VVy</param>
            <param name="oVV3">VVz</param>
            <remarks>This function is equivalent to Project3D_VV.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ConvertVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Convert VVx/VVy from input projection to output projection.</summary>
            <param name="oVV1">VVx</param>
            <param name="oVV2">VVy</param>
            <remarks>This function is equivalent to Project_VV.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPJ.ClipPLY(System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Create a clip polygon from a projected area.</summary>
            <param name="d1">Min X (or Longitude...)</param>
            <param name="d2">Min Y (or Latitude...)</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <param name="d5">Max deviation in degrees</param>
            <param name="oPLY6">PLY to be filled</param>
            <remarks>
A rectangular area from (MinX, MinY) to (MaxX, MaxY)
is projected throught the PJ. The resulting (non-rectangular)
area is then digitized along its edges, then thinned to
remove near-collinear points. The thinning is done to any
point whose neighbors subtend an angle greater than
(180 degrees - maximum deviation).  (i.e. if max. dev = 0,
only co-linear points would be removed).
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CPJ">
            <summary>

       The PJ object is created from two IPJ objects,
       and is used for converting data in an OASIS database
       or map object from one map coordinate (projection)
       system to another.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteWA(GeoEngine.Core.GXNetX.CWA,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Write the contents of a 2D or 3D pager to a WA</summary>
            <param name="oWA1">WA to write to</param>
            <param name="i2">&amp;lt;define&amp;gt;PG_3D_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">Reverse X</param>
            <param name="i4">Reverse Y</param>
            <param name="i5">Reverse Z</param>
            <param name="str6">Dummy</param>
            <remarks>Each line will hold only 1 value</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteBFEx(GeoEngine.Core.GXNetX.CBF,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Write the contents of a 2D or 3D pager to a BF.</summary>
            <param name="oBF1">BF to write to</param>
            <param name="i2">&amp;lt;define&amp;gt;PG_3D_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;PG_BF_CONV&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X</param>
            <param name="i5">Reverse Y</param>
            <param name="i6">Reverse Z</param>
            <param name="d7">Dummy value</param>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteBF(GeoEngine.Core.GXNetX.CBF,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Write the contents of a 2D or 3D pager to a BF.</summary>
            <param name="oBF1">BF to write to</param>
            <param name="i2">&amp;lt;define&amp;gt;PG_3D_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;PG_BF_CONV&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X</param>
            <param name="i5">Reverse Y</param>
            <param name="i6">Reverse Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadRA(GeoEngine.Core.GXNetX.CRA,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Read the contents of a 2D or 3D pager to from an RA.</summary>
            <param name="oRA1">RA to read from</param>
            <param name="i2">&amp;lt;define&amp;gt;PG_3D_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">Reverse X</param>
            <param name="i4">Reverse Y</param>
            <param name="i5">Reverse Z</param>
            <param name="str6">Dummy</param>
            <remarks>Each line must hold only 1 value</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadBF(GeoEngine.Core.GXNetX.CBF,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Read the contents of a 2D or 3D pager to from a BF.</summary>
            <param name="oBF1">BF to read from</param>
            <param name="i2">&amp;lt;define&amp;gt;PG_3D_DIR&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;PG_BF_CONV&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X</param>
            <param name="i5">Reverse Y</param>
            <param name="i6">Reverse Z</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteTrace3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a set of elements in Z (trace) from pager into vv</summary>
            <param name="i1">iBx - element # in x (column #)</param>
            <param name="i2">iBy - element # in y (row #)</param>
            <param name="i3">iBy - begining element # in z to read (0 is the first)</param>
            <param name="i4">iNy - # elements to read (0 for whole vector)</param>
            <param name="oVV5">hVV - VV handle</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteRow3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a set of elements in Y (row) from vv into pager</summary>
            <param name="i1">iBz - element # in z (slice #)</param>
            <param name="i2">iBy - element # in y (row #)</param>
            <param name="i3">iBx - begining element # in x to write (0 is the first)</param>
            <param name="i4">iNx - # elements to write (0 for whole vector)</param>
            <param name="oVV5">hVV - VV handle</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteCol3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a set of elements in X (column) from vv into pager</summary>
            <param name="i1">iBz - element # in z (slice #)</param>
            <param name="i2">iBx - element # in x (column #)</param>
            <param name="i3">iBy - begining element # in y to write (0 is the first)</param>
            <param name="i4">iNy - # elements to write (0 for whole vector)</param>
            <param name="oVV5">hVV - VV handle</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReAllocate3D(System.Int32,System.Int32,System.Int32)">
            <summary>Changes the size of 3D Pager</summary>
            <param name="i1">Number of Z (slices) to reallocate</param>
            <param name="i2">Number of Y (rows) to reallocate</param>
            <param name="i3">Number of X (columns) to reallocate</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadTrace3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a set of elements in Z (trace) from pager into vv</summary>
            <param name="i1">iBx - element # in x (column #)</param>
            <param name="i2">iBy - element # in y (row #)</param>
            <param name="i3">iBy - begining element # in z to read (0 is the first)</param>
            <param name="i4">iNy - # elements to read (0 for whole vector)</param>
            <param name="oVV5">hVV - VV handle</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadRow3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a set of elements in Y (row) from pager into vv</summary>
            <param name="i1">iBz - element # in z (slice #)</param>
            <param name="i2">iBy - element # in y (row #)</param>
            <param name="i3">iBx - begining element # in x to read (0 is the first)</param>
            <param name="i4">iNx - # elements to read (0 for whole vector)</param>
            <param name="oVV5">hVV - VV handle</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadCol3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a set of elements in X (column) from pager into vv</summary>
            <param name="i1">iBz - element # in z (slice #)</param>
            <param name="i2">iBx - element # in x (column #)</param>
            <param name="i3">iBy - begining element # in y to read (0 is the first)</param>
            <param name="i4">iNy - # elements to read (0 for whole vector)</param>
            <param name="oVV5">hVV - VV handle</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Create3D(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates a Pager object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1"># elements in z (# of slices)</param>
            <param name="i2"># elements in y (# of row)</param>
            <param name="i3"># elements in x (# of column)</param>
            <param name="i4">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <returns>PG Object</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.CopySubset3D(GeoEngine.Core.GXNetX.CPG,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Copy a subset of data from one pager to another.</summary>
            <param name="oPG1">Source PG object</param>
            <param name="i2">Z (slice) Origin on destination</param>
            <param name="i3">Y (row) Origin on destination</param>
            <param name="i4">X (col) Origin on destination</param>
            <param name="i5">Z (slice) Origin on source</param>
            <param name="i6">Y (row) Origin on source</param>
            <param name="i7">X (col) Origin on source</param>
            <param name="i8">Number of Z (slice) to copy</param>
            <param name="i9">Number of Y (rows) to copy</param>
            <param name="i10">Number of X (columns) to copy</param>
            <remarks>2D Only</remarks>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteRow(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a set of elements in Y (row) from vv into pager</summary>
            <param name="i1">iBy - element # in y (row #)</param>
            <param name="i2">iBx - begining element # in x to write (0 is the first)</param>
            <param name="i3">iNx - # elements to write (0 for whole vector)</param>
            <param name="oVV4">hVV - VV handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.WriteCol(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a set of elements in X (column) from vv into pager</summary>
            <param name="i1">iBx - element # in x (column #)</param>
            <param name="i2">iBy - begining element # in y to write (0 is the first)</param>
            <param name="i3">iNy - # elements to write (0 for whole vector)</param>
            <param name="oVV4">hVV - VV handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Statistics(GeoEngine.Core.GXNetX.CST)">
            <summary>Compute the statistics of a pager object.</summary>
            <param name="oST1">hST - statistics object</param>
            <available_version>6.3.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize a 2D PG to a BF.</summary>
            <param name="oBF1" />
            <remarks>For 3D pagers, use WriteBF_PG.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReAllocate(System.Int32,System.Int32)">
            <summary>Changes the size of Pager</summary>
            <param name="i1">Number of Y (rows) to reallocate</param>
            <param name="i2">Number of X (columns) to reallocate</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadRow(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a set of elements in Y (row) from pager into vv</summary>
            <param name="i1">iBy - element # in y (row #)</param>
            <param name="i2">iBx - begining element # in x to read (0 is the first)</param>
            <param name="i3">iNx - # elements to read (0 for whole vector)</param>
            <param name="oVV4">hVV - VV handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.ReadCol(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a set of elements in X (column) from pager into vv</summary>
            <param name="i1">iBx - element # in x (column #)</param>
            <param name="i2">iBy - begining element # in y to read (0 is the first)</param>
            <param name="i3">iNy - # elements to read (0 for whole vector)</param>
            <param name="oVV4">hVV - VV handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.rGet(System.Int32,System.Int32)">
            <summary>Read a single value from a 2D PG</summary>
            <param name="i1">iBx - element # in x (column #)</param>
            <param name="i2">iBy - element # in y (row #)</param>
            <remarks>This is a low-performance method.</remarks>
            <available_version>8.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Range(System.Double@,System.Double@)">
            <summary>Computes the range of the entire pager.</summary>
            <param name="d1">Minimum Data (Dummy if no range)</param>
            <param name="d2">Maximum Data (Dummy if no range)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.iNSlices">
            <summary>Gets the # of slices (z) in pager.</summary>
            <returns># of rows.</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.iNRows">
            <summary>Gets the # of rows in pager.</summary>
            <returns># of rows.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.iNCols">
            <summary>Gets the # of columns in pager.</summary>
            <returns># of columns.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.iEType">
            <summary>Gets the type of pager.</summary>
            <returns>&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Dummy">
            <summary>Sets the Entire pager to dummy.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create a 2D PG from serialized source.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1" />
            <remarks>For 3D pagers, use CreateBF_PG.</remarks>
            <returns>PG Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Creates a Pager object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1"># elements in y (# of row)</param>
            <param name="i2"># elements in x (# of column)</param>
            <param name="i3">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <returns>PG Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.CopySubset(GeoEngine.Core.GXNetX.CPG,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Copy a subset of data from one pager to another.</summary>
            <param name="oPG1">Source PG object</param>
            <param name="i2">Y (row) Origin on destination</param>
            <param name="i3">X (col) Origin on destination</param>
            <param name="i4">Y (row) Origin on source</param>
            <param name="i5">X (col) Origin on source</param>
            <param name="i6">Number of Y (rows) to copy</param>
            <param name="i7">Number of X (columns) to copy</param>
            <remarks>2D Only</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPG.Copy(GeoEngine.Core.GXNetX.CPG)">
            <summary>Copy the data from one pager to another.</summary>
            <param name="oPG1">Source PG object</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>2D Methods</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CPG">
            <summary>

       Pager methods for large 2-D arrays
       This class handles very-large 2-D arrays in which efficient
       access is required along both rows and columns.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPAT.GetLST(System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Copies all pattern names into a LST object.</summary>
            <param name="str1">Class name ("" for all classes)</param>
            <param name="oLST2">LST Handle</param>
            <remarks>
Returns a list of the available patterns.
There will always be at least two items,
"None" and "Solid Fill"
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CPAT.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates a pattern object with current default patterns.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>PAT object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CPAT">
            <summary>

       A PAT object is created from a Geosoft format pattern file.
       It contains all the individual patterns listed in the file.

       Notes: You may create your own fill patterns. They can be added to the "user.pat"
       file in the &lt;geosoft&gt;\user\etc directory. User pattern numbers should be in the 
       range between 20000 and 29999.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMXD.Sync(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Syncronize any Metadata for this MXD</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">MXD file name</param>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMXD.ConvertToMap(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Create Geosoft map from ArcGIS MXD</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">ArcGIS MXD file name</param>
            <param name="str2">Geosoft map file name</param>
            <available_version>9.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMXD.CreateMetadata(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create metadata for this brand new MXD (we are the creator)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">MXD file name</param>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMXD">
            <summary>

       A MXD wraps and provides manipulation and usage for
       the content of an ArcGIS MXD file.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.TrndPath(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Double)">
            <summary>Plot min and max trend lines.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="i4">Minimum number of sections</param>
            <param name="d5">Minimum length of sections</param>
            <remarks>
Trend lines positions consist of X and Y VVs
interspersed with dummies, which separate the
individual trend sections.
Set the minimum number of sections to &gt; 0 to
plot only the longer trend lines.
(The number of sections in one trend section is
equal to the number of points between dummies minus one.)
Set the minimum distance to &gt; 0 to
plot only the longer trend lines.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.TickEx(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Same as Tick_MVU, with gap allowance.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="oVV4">Station</param>
            <param name="d5">Tick size</param>
            <param name="d6">Tick modulus on station vv</param>
            <param name="d7">Major tick size</param>
            <param name="d8">Major tick modulus on station vv</param>
            <param name="d9">Maximum gap to span; set to 0 or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; to ignore all gaps.</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Tick(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw line ticks on a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="oVV4">Station</param>
            <param name="d5">Tick size</param>
            <param name="d6">Tick modulus on station vv</param>
            <param name="d7">Major tick size</param>
            <param name="d8">Major tick modulus on station vv</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.TextBox(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.Double,System.Double,System.Double,System.Double,System.String,System.Double,System.Int32)">
            <summary>Draw a wrapped text box</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="d2">Min X</param>
            <param name="d3">Min Y</param>
            <param name="d4">Max X</param>
            <param name="d5">Max Y</param>
            <param name="str6">Text</param>
            <param name="d7">Line spacing (1.2 good)</param>
            <param name="i8">&amp;lt;define&amp;gt;MVU_TEXTBOX&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.SymbOff(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Double)">
            <summary>Draws symbols with an offset and against a flag channel</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X, must be type of REAL</param>
            <param name="oVV3">Y, must be type of REAL</param>
            <param name="oVV4">Flag VV, must be type of INT</param>
            <param name="d5">X Offset</param>
            <param name="d6">Y Offset</param>
            <remarks>
Symbols are not plotted for positions where the flag VV
value is 0 or &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt;.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ReGenAreas(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String)">
            <summary>Re-Generate from a line group and existing area group</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">Group with lines</param>
            <remarks>
The area group must exist and will be modified to match the current
line group.

All non-polygon entities in the current area group will remain in the
new area group.  All existing polygon groups will be used to determine
the most likely attributes for the new polygon groups.

There must be existing polygon groups in the area group.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PropSymbLegend(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double,System.String,System.String)">
            <summary>Draw a legend for proportional symbols.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">MVIEW object</param>
            <param name="d2">Plot origin X</param>
            <param name="d3">Plot origin Y</param>
            <param name="d4">Label Font size (mm)</param>
            <param name="d5">Symbol scale factor (data value/mm)</param>
            <param name="d6">Base value to remove before scaling</param>
            <param name="i7">Number of symbols</param>
            <param name="d8">Starting symbol data value (&gt;= Base value)</param>
            <param name="d9">Data value increment (&gt;0.0)</param>
            <param name="str10">Plot title</param>
            <param name="str11">Plot subtitle</param>
            <remarks>
All symbol attributes, except for the size, are assumed
to be defined (or defaults are used).
Spacing is based on the maximum of the largest plotted symbol
and the font size.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ProfilePlotEx(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Int32,System.String,System.String)">
            <summary>Draw a profile along line trace with more parameters</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="oVV4">Z</param>
            <param name="d5">Lines steeper than this angle are considered vertical and the up label direction is used.</param>
            <param name="i6">Up label direction:   1 up is right -1 up is left</param>
            <param name="d7">Maximum gap in data to span (view units)</param>
            <param name="d8">Z profile base, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; to use data minimum</param>
            <param name="d9">Z scale in view units/Z unit</param>
            <param name="i10">1 to join profile to line ends.</param>
            <param name="i11">Log option: 0 linear (default), 1 logarithm, 2 log/linear</param>
            <param name="d12">Log base</param>
            <param name="i13">Smooth curve option: 0 no (default), 1 yes</param>
            <param name="str14">Positive fill color</param>
            <param name="str15">Negative fill color</param>
            <remarks>Profiles will be drawn in the current line style.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ProfilePlot(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Draw a profile along line trace</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="oVV4">Z</param>
            <param name="d5">Lines steeper than this angle are considered vertical and the up label direction is used.</param>
            <param name="i6">Up label direction:   1 up is right -1 up is left</param>
            <param name="d7">Maximum gap in data to span (view units)</param>
            <param name="d8">Z profile base, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; to use data minimum</param>
            <param name="d9">Z scale in view units/Z unit</param>
            <param name="i10">1 to join profile to line ends.</param>
            <remarks>Profiles will be drawn in the current line style.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Probability(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CST,System.String,System.String,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CITR)">
            <summary>Plot a probability plot on a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oST2">ST with summary stats of original data</param>
            <param name="oST3">ST with histogram info of original or log10 data</param>
            <param name="str4">Title</param>
            <param name="str5">Unit</param>
            <param name="i6">Transform type (0: Raw, 1: Log, 2: Lambda)</param>
            <param name="d7">Lambda Value for lambda transform</param>
            <param name="d8">X in mm (bottom left corner of histogram box)</param>
            <param name="d9">Y in mm (bottom left corner of histogram box)</param>
            <param name="d10">Box width in mm</param>
            <param name="d11">Box height in mm</param>
            <param name="d12">Symbol size in mm</param>
            <param name="d13">Sigma (X range is -sigma to sigma)</param>
            <param name="d14">Width (mm) of the additional box for summary stats</param>
            <param name="i15">Summary stats: 0 - do not draw, 1 - draw</param>
            <param name="i16">Decimals for data, negative for sig. fig.</param>
            <param name="i17">Decimals for stats, negative for sig. fig.</param>
            <param name="oITR18">ITR to color symbols.</param>
            <remarks>The ITR can be empty (but must still be a valid ITR object).</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PostEx(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Int32,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>Post values on a map with more paramters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="oVV4">Values to post</param>
            <param name="oVV5">Station</param>
            <param name="i6">Do not plot dummy values?</param>
            <param name="d7">Base to remove, default is 0.0</param>
            <param name="d8">Detection limit, can be &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;</param>
            <param name="i9">Numb Size</param>
            <param name="i10">Format</param>
            <param name="i11">Decimals</param>
            <param name="d12">Offset along line (right and above are positive)</param>
            <param name="d13">Offset perpendicular to line</param>
            <param name="i14">TRUE - Positive above, Negative below FALSE - All above.</param>
            <param name="d15">Modulas on station vv</param>
            <param name="i16">Reference point number</param>
            <param name="d17">Text angle (degree, CCW from down-line)</param>
            <param name="i18">Fixed angle ?</param>
            <param name="d19">Vertical reference angle</param>
            <param name="i20">1 up is right, -1 up is left</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Post(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Post values on a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="oVV4">Values to post</param>
            <param name="i5">Do not plot dummy values?</param>
            <param name="i6">Numb Size</param>
            <param name="i7">Format</param>
            <param name="i8">Decimals</param>
            <param name="i9">Reference point number</param>
            <param name="d10">Text angle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.GenerateSurfaceFromVoxel(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVOX,System.Int32,System.Int32,System.Double,System.Double,System.Int32,System.Double,System.Double,System.String)">
            <summary>TODO...</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVOX2">Voxel model</param>
            <param name="i3">&amp;lt;define&amp;gt;MVU_VOX_SURFACE_METHOD&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;MVU_VOX_SURFACE_OPTION&amp;lt;/define&amp;gt;</param>
            <param name="d5">Iso-surface value</param>
            <param name="d6">For closed surfaces: close between the selected value and this value (set equal to the Iso-surface to close within nearest values below, DUMMY to close within nearest value above)</param>
            <param name="i7">Drawing color</param>
            <param name="d8">Line thickness for line drawing, and 2D views.</param>
            <param name="d9">Transparency (0 - transparent, 1 - opaque).</param>
            <param name="str10">Geosurface file</param>
            <remarks>TODO... Move to VOX method for surface generation only and use GeosurfaceD to display.</remarks>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PlotVoxelSurface2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVOX,System.Double,System.Int32,System.Double,System.Double,System.String)">
            <summary>Extract an iso-surface from a voxel and plot it to a 2D or 3D view.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVOX2">Voxel model</param>
            <param name="d3">Iso-surface value</param>
            <param name="i4">Drawing color</param>
            <param name="d5">Line thickness for line drawing, and 2D views.</param>
            <param name="d6">Transparency (0 - transparent, 1 - opaque).</param>
            <param name="str7">Iso-surface name</param>
            <remarks>
The Marching Cubes method of Lorensen and Cline, Computer Graphics, V21,
Number 4, July 1987, is used to calculate a given iso-surface in a voxel
model. The resulting surface is plotted to a 2D or 3D view. If the view
is 2-D, then only the intersection of the surface with the 2D surface is
plotted, using lines.
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PlotVoxelSurface(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVOX,System.Double,System.Int32,System.Double)">
            <summary>Extract an iso-surface from a voxel and plot it to a 2D or 3D view.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVOX2">Voxel model</param>
            <param name="d3">Iso-surface value</param>
            <param name="i4">Drawing color</param>
            <param name="d5">Line thickness for line drawing, and 2D views.</param>
            <remarks>
The Marching Cubes method of Lorensen and Cline, Computer Graphics, V21,
Number 4, July 1987, is used to calculate a given iso-surface in a voxel
model. The resulting surface is plotted to a 2D or 3D view. If the view
is 2-D, then only the intersection of the surface with the 2D surface is
plotted, using lines.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PathPlotEx2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.String,System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Draw a flight line</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="str4">Line label</param>
            <param name="i5">&amp;lt;define&amp;gt;MVU_FLIGHT_LOCATE&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;MVU_FLIGHT_COMPASS&amp;lt;/define&amp;gt;</param>
            <param name="d7">Lines steeper than this angle are considered vertical and the up label direction is used.</param>
            <param name="i8">Up label direction:   1 up is right -1 up is left</param>
            <param name="d9">Along line label offset in mm.</param>
            <param name="d10">Perpendicular label offset mm.</param>
            <param name="d11">Maximum gap before breaking line, 0.0 for no breaks.</param>
            <param name="i12">&amp;lt;define&amp;gt;MVU_FLIGHT_DUMMIES&amp;lt;/define&amp;gt;</param>
            <remarks>This is the same except for the additional line dummies parameter.</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PathPlotEx(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.String,System.Int32,System.Int32,System.Double,System.Int32,System.Double,System.Double,System.Double)">
            <summary>Draw a flight line</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="str4">Line label</param>
            <param name="i5">&amp;lt;define&amp;gt;MVU_FLIGHT_LOCATE&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;MVU_FLIGHT_COMPASS&amp;lt;/define&amp;gt;</param>
            <param name="d7">Lines steeper than this angle are considered vertical and the up label direction is used.</param>
            <param name="i8">Up label direction:   1 up is right -1 up is left</param>
            <param name="d9">Along line label offset in mm.</param>
            <param name="d10">Perpendicular label offset mm.</param>
            <param name="d11">Maximum gap before breaking line, 0.0 for no breaks.</param>
            <remarks>This is the same except for the additional line compass parameter.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.PathPlot(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.String,System.Int32,System.Double,System.Int32,System.Double,System.Double,System.Double)">
            <summary>Draw a flight line</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="str4">Line label</param>
            <param name="i5">&amp;lt;define&amp;gt;MVU_FLIGHT_LOCATE&amp;lt;/define&amp;gt;</param>
            <param name="d6">Lines steeper than this angle are considered vertical and the up label direction is used.</param>
            <param name="i7">Up label direction:   1 up is right -1 up is left</param>
            <param name="d8">Along line label offset in mm.</param>
            <param name="d9">Perpendicular label offset mm.</param>
            <param name="d10">Maximum gap before breaking line, 0.0 for no breaks.</param>
            <remarks>
See FlightPlot_MVU.  This is the same except for the
additional line gap parameter.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.MDF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,System.String,System.String)">
            <summary>Creates a new map from an MDF file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Handle</param>
            <param name="str2">MDF file name</param>
            <param name="str3">Name to use for the base map view</param>
            <param name="str4">Name to use for the data view</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Mapset2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Same as Mapset_MVU, with vertical exaggeration.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Handle</param>
            <param name="str2">Name to use for the base map view</param>
            <param name="str3">Name to use for the data view</param>
            <param name="d4">Minimum X of data area (data units)</param>
            <param name="d5">Maximum X of data area (data units)</param>
            <param name="d6">Minimum Y of data area (data units)</param>
            <param name="d7">Maximum Y of data area (data units)</param>
            <param name="str8">Media size as a string 'x_cm,y_cm', or a standard paper size (e.g. 'A4', 'E')</param>
            <param name="i9">0 - landscape; 1 - portrait</param>
            <param name="i10">1 - map size fixed to media; 0 - map size adjusted to data and margins.</param>
            <param name="d11">Map scale (rDummy for default)</param>
            <param name="d12">Vertical Exaggeration (1.0 for none)</param>
            <param name="d13">Conversion factor (to units/meter) (rDummy for default)</param>
            <param name="d14">Left margin (cm)</param>
            <param name="d15">Right margin (cm)</param>
            <param name="d16">Bottom margin (cm)</param>
            <param name="d17">Top margin (cm)</param>
            <param name="d18">Inside data margin (cm)</param>
            <available_version>8.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Mapset(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.String,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new map directly from parameters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Handle</param>
            <param name="str2">Name to use for the base map view</param>
            <param name="str3">Name to use for the data view</param>
            <param name="d4">Minimum X of data area (data units)</param>
            <param name="d5">Maximum X of data area (data units)</param>
            <param name="d6">Minimum Y of data area (data units)</param>
            <param name="d7">Maximum Y of data area (data units)</param>
            <param name="str8">Media size as a string 'x_cm,y_cm', or a standard paper size (e.g. 'A4', 'E')</param>
            <param name="i9">0 - landscape; 1 - portrait</param>
            <param name="i10">1 - map size fixed to media; 0 - map size adjusted to data and margins.</param>
            <param name="d11">Map scale (rDummy for default)</param>
            <param name="d12">Conversion factor (to units/meter) (rDummy for default)</param>
            <param name="d13">Left margin (cm)</param>
            <param name="d14">Right margin (cm)</param>
            <param name="d15">Bottom margin (cm)</param>
            <param name="d16">Top margin (cm)</param>
            <param name="d17">Inside data margin (cm)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.MapMDF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,System.String)">
            <summary>Creates an MDF from a Map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Handle</param>
            <param name="str2">MDF file name</param>
            <param name="str3">Data view name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.MapFromPLT(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,System.String,System.String,System.Double,System.Double)">
            <summary>Creates a new map from a PLT file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Handle</param>
            <param name="str2">Name to use for the base map view</param>
            <param name="str3">Name to use for the data view</param>
            <param name="str4">Plot file name</param>
            <param name="d5">Map paper size in X direction (cm)</param>
            <param name="d6">Map paper size in Y direction (cm)</param>
            <remarks>
This only creates a map, it does not read the PLT into
the map.  The base view and data view will be the same
size.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.LoadPlot(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String)">
            <summary>Load a Geosoft PLT file into a MAP.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">Map handle</param>
            <param name="str2">Plot file name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ImportGOCADSurface(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String,System.Int32)">
            <summary>Import and plot a GOCAD surface model.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">GOCAD file name</param>
            <param name="i3">Color to plot (&amp;lt;define&amp;gt;C_TRANSPARENT&amp;lt;/define&amp;gt; to use file-defined color).</param>
            <remarks>
The vertex normals are not included in the
GOCAD import, but are calculated using
the normal of each defined triangle, and taking the
average when vertex is shared among more than one triangle.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.iMapset2Test(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.String,System.Int32,System.Int32,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Test function to ensure parameters to Mapset_MVU is sane</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Minimum X of data area (data units)</param>
            <param name="d2">Maximum X of data area (data units)</param>
            <param name="d3">Minimum Y of data area (data units)</param>
            <param name="d4">Maximum Y of data area (data units)</param>
            <param name="str5">Media size as a string 'x_cm,y_cm', or a standard paper size (e.g. 'A4', 'E')</param>
            <param name="i6">0 - landscape; 1 - portrait</param>
            <param name="i7">1 - map size fixed to media; 0 - map size adjusted to data and margins.</param>
            <param name="d8">Map scale (rDummy for default)</param>
            <param name="d9">Vertical exaggeration (Normally 1.0)</param>
            <param name="d10">Conversion factor (to units/meter) (rDummy for default)</param>
            <param name="d11">Left margin (cm)</param>
            <param name="d12">Right margin (cm)</param>
            <param name="d13">Bottom margin (cm)</param>
            <param name="d14">Top margin (cm)</param>
            <param name="d15">Inside data margin (cm)</param>
            <remarks>Same as iMapsetTest_MVU, with vertical exaggeration.</remarks>
            <returns>True if the parameters are good.</returns>
            <available_version>8.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.iMapsetTest(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.String,System.Int32,System.Int32,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Test function to ensure parameters to Mapset_MVU is sane</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Minimum X of data area (data units)</param>
            <param name="d2">Maximum X of data area (data units)</param>
            <param name="d3">Minimum Y of data area (data units)</param>
            <param name="d4">Maximum Y of data area (data units)</param>
            <param name="str5">Media size as a string 'x_cm,y_cm', or a standard paper size (e.g. 'A4', 'E')</param>
            <param name="i6">0 - landscape; 1 - portrait</param>
            <param name="i7">1 - map size fixed to media; 0 - map size adjusted to data and margins.</param>
            <param name="d8">Map scale (rDummy for default)</param>
            <param name="d9">Conversion factor (to units/meter) (rDummy for default)</param>
            <param name="d10">Left margin (cm)</param>
            <param name="d11">Right margin (cm)</param>
            <param name="d12">Bottom margin (cm)</param>
            <param name="d13">Top margin (cm)</param>
            <param name="d14">Inside data margin (cm)</param>
            <remarks>
Use ShowError_SYS to display errors that may have been encountered. This function can also be used
to calculate the default scale without creating a map.
</remarks>
            <returns>True if the parameters are good.</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.iExportableDXF3DGroupsLST(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CLST)">
            <summary>Return a LST of groups you can export using sExportDXF3D_MVU.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oLST2">LST with group names in the name part of the LST.</param>
            <remarks>
Returns a list of visible groups that the DXF 3D export can
export. Removes things like VOXD, AGG, and target
groups starting with "Dh", which are typically plotted in 3D
views on a reference plan oriented toward the user, and thus
not exportable.
</remarks>
            <returns>The number of groups in the LST.</returns>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Histogram5(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CST,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CITR)">
            <summary>As Histogram4_MVU, but allow ITR to color bars.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oST2">ST with summary stats of original data</param>
            <param name="oST3">ST with histogram info of original or log10 data</param>
            <param name="str4">Title</param>
            <param name="str5">Unit</param>
            <param name="d6">[i] Lambda Value</param>
            <param name="d7">X in mm (bottom left corner of histogram box)</param>
            <param name="d8">Y in mm (bottom left corner of histogram box)</param>
            <param name="d9">Box width in mm</param>
            <param name="d10">Box height in mm</param>
            <param name="d11">Minimum X in data unit (bottom left corner of histogram boxes)</param>
            <param name="d12">Minimum Y in data unit</param>
            <param name="d13">Box width in data unit</param>
            <param name="d14">Box height in data unit</param>
            <param name="d15">Width (mm) of the additional box for summary stats</param>
            <param name="i16">Log horizontal axis: 0 - Normal, 1 - Log, 2 - Lambda</param>
            <param name="i17">Summary stats: 0 - do not draw, 1 - draw</param>
            <param name="i18">Probability scaling: 0 - linear scale, 1 - scale as normal distribution</param>
            <param name="i19">Fill color</param>
            <param name="i20">Decimals for data, negative for sig. fig.</param>
            <param name="i21">Decimals for stats, negative for sig. fig.</param>
            <param name="oST22">ST with histogram for box-whisker plot (-1 for no plot)</param>
            <param name="oITR23">ITR to color bars.</param>
            <remarks>The ITR can be empty (but must still be a valid ITR object).</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Histogram4(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CST,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CST)">
            <summary>As Histogram3_MVU, but allow probability scaling of percents.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oST2">ST with summary stats of original data</param>
            <param name="oST3">ST with histogram info of original or log10 data</param>
            <param name="str4">Title</param>
            <param name="str5">Unit</param>
            <param name="d6">X in mm (bottom left corner of histogram box)</param>
            <param name="d7">Y in mm (bottom left corner of histogram box)</param>
            <param name="d8">Box width in mm</param>
            <param name="d9">Box height in mm</param>
            <param name="d10">Minimum X in data unit (bottom left corner of histogram boxes)</param>
            <param name="d11">Minimum Y in data unit</param>
            <param name="d12">Box width in data unit</param>
            <param name="d13">Box height in data unit</param>
            <param name="d14">Width (mm) of the additional box for summary stats</param>
            <param name="i15">Log horizontal axis: 0 - Normal, 1 - Log</param>
            <param name="i16">Summary stats: 0 - do not draw, 1 - draw</param>
            <param name="i17">Probability scaling: 0 - linear scale, 1 - scale as normal distribution</param>
            <param name="i18">Fill color</param>
            <param name="i19">Decimals for data, negative for sig. fig.</param>
            <param name="i20">Decimals for stats, negative for sig. fig.</param>
            <param name="oST21">ST with histogram for box-whisker plot (-1 for no plot)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Histogram3(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CST,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CST)">
            <summary>Plot the histogram on a map, specify decimals.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oST2">ST with summary stats of original data</param>
            <param name="oST3">ST with histogram info of original or log10 data</param>
            <param name="str4">Title</param>
            <param name="str5">Unit</param>
            <param name="d6">X in mm (bottom left corner of histogram box)</param>
            <param name="d7">Y in mm (bottom left corner of histogram box)</param>
            <param name="d8">Box width in mm</param>
            <param name="d9">Box height in mm</param>
            <param name="d10">Minimum X in data unit (bottom left corner of histogram boxes)</param>
            <param name="d11">Minimum Y in data unit</param>
            <param name="d12">Box width in data unit</param>
            <param name="d13">Box height in data unit</param>
            <param name="d14">Width (mm) of the additional box for summary stats</param>
            <param name="i15">Log horizontal axis: 0 - Normal, 1 - Log</param>
            <param name="i16">Summary stats: 0 - do not draw, 1 - draw</param>
            <param name="i17">Fill color</param>
            <param name="i18">Decimals for data, negative for sig. fig.</param>
            <param name="i19">Decimals for stats, negative for sig. fig.</param>
            <param name="oST20">ST with histogram for box-whisker plot (-1 for no plot)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Histogram2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CST,System.String,System.String,System.Double,System.String,System.Double,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CST,System.Double)">
            <summary>Plot the histogram on a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oST2">ST with summary stats of original data</param>
            <param name="oST3">ST with histogram info of original or log10 data</param>
            <param name="str4">X axis title</param>
            <param name="str5">Y axis title</param>
            <param name="d6">Text size in mm for X/Y axis' titles. Accept dummy</param>
            <param name="str7">Overall title. Plotted below X axis if X axis title is not given</param>
            <param name="d8">Text size in mm for plot overall title. Accept dummy</param>
            <param name="str9">Unit</param>
            <param name="d10">X in mm (bottom left corner of histogram box)</param>
            <param name="d11">Y in mm (bottom left corner of histogram box)</param>
            <param name="d12">Box width in mm</param>
            <param name="d13">Box height in mm</param>
            <param name="d14">Minimum X in data unit (bottom left corner of histogram boxes)</param>
            <param name="d15">Minimum Y in data unit</param>
            <param name="d16">Box width in data unit</param>
            <param name="d17">Box height in data unit</param>
            <param name="d18">Width (mm) of the additional box for summary stats</param>
            <param name="i19">Log horizontal axis: 0 - Normal, 1 - Log</param>
            <param name="i20">Summary stats: 0 - do not draw, 1 - draw</param>
            <param name="i21">Fill color</param>
            <param name="oST22">ST with histogram for box-wisker plot (-1 for no plot)</param>
            <param name="d23">X value (threshold value) to draw a vertical line (see notes)</param>
            <remarks>
A vertical line through from bottom to top horizontal axis is drawn
Also a label 'Threshold value' is plotted against this line. However,
None of them will be plotted if threshold value is dummy or outside
the X data range.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Histogram(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CST,GeoEngine.Core.GXNetX.CST,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CST)">
            <summary>Plot the histogram on a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oST2">ST with summary stats of original data</param>
            <param name="oST3">ST with histogram info of original or log10 data</param>
            <param name="str4">Title</param>
            <param name="str5">Unit</param>
            <param name="d6">X in mm (bottom left corner of histogram box)</param>
            <param name="d7">Y in mm (bottom left corner of histogram box)</param>
            <param name="d8">Box width in mm</param>
            <param name="d9">Box height in mm</param>
            <param name="d10">Minimum X in data unit (bottom left corner of histogram boxes)</param>
            <param name="d11">Minimum Y in data unit</param>
            <param name="d12">Box width in data unit</param>
            <param name="d13">Box height in data unit</param>
            <param name="d14">Width (mm) of the additional box for summary stats</param>
            <param name="i15">Log horizontal axis: 0 - Normal, 1 - Log</param>
            <param name="i16">Summary stats: 0 - do not draw, 1 - draw</param>
            <param name="i17">Fill color</param>
            <param name="oST18">ST with histogram for box-whisker plot (-1 for no plot)</param>
            <remarks>
This function just calls Histogram2_MVU with decimals set
to -7 (7 significant figures).
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.GetRangeGOCADSurface(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the XYZ range of a GOCAD surface.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">GOCAD file name</param>
            <param name="d2">Min X value</param>
            <param name="d3">Min Y value</param>
            <param name="d4">Min Z value</param>
            <param name="d5">Max X value</param>
            <param name="d6">Max Y value</param>
            <param name="d7">Max Z value</param>
            <remarks>
Required to set up a map view before doing the actual
surface import.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.GenAreas(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double)">
            <summary>Generate areas from an line group.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">Group with lines</param>
            <param name="oVV3">Colors  (color int)</param>
            <param name="oVV4">Patterns (int), must be same length at colors</param>
            <param name="d5">Pattern size</param>
            <remarks>
The specified line group will be used to create a new group that
is composed of all the resolved polygonal areas in the line group.
Each polygonal area is assigned a color/pattern as specified in the
color and pattern VV's.  Color/patterns are assigned in rotating
sequence.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.FlightPlot(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.String,System.Int32,System.Double,System.Int32,System.Double,System.Double)">
            <summary>Draw a flight line</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="str4">Line label</param>
            <param name="i5">&amp;lt;define&amp;gt;MVU_FLIGHT_LOCATE&amp;lt;/define&amp;gt;</param>
            <param name="d6">Lines steeper than this angle are considered vertical and the up label direction is used.</param>
            <param name="i7">Up label direction:   1 up is right, -1 up is left</param>
            <param name="d8">Along line label offset in mm.</param>
            <param name="d9">Perpendicular label offset mm.</param>
            <remarks>
Current line color, thickness and style are used to
draw the line.

Current font, font color and font style are used to
annotate the line labels.

If current clipping is ON in the VIEW, lines will be
clipped to the window before plotting.  In this case,
labels should be located ABOVE or BELOW the line
traces to prevent labels being clipped.

The offsets dOffA and dOffB control the vertical and
horizontal label offsets with respect to the ends of
the line trace and depending on the label location.

The vertical line reference angle dVerAng is used
to determine if lines are considered vertical or
horizontal.  Vertical lines use the sUp parameter
to determine the label up direction.  Normally, use an
angle of 60 degrees unless there are lines that run in
this direction.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ExportMapGroupsToGDB(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CDB)">
            <summary>Export map group(s) to database line(s).</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oLST2">LST with group names in the name part of the LST.</param>
            <param name="oDB3">Database</param>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ExportSurpacSTR(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CWA,GeoEngine.Core.GXNetX.CWA)">
            <summary>Export selected map groups in a map view to a Surpac STR file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oLST2">LST with group names in the name part of the LST.</param>
            <param name="oWA3">STR file to export to</param>
            <param name="oWA4">Styles file to export to</param>
            <remarks>
The lines, rectangles and polygons in the specified groups
will be exported to a Surpac STR file. An accompanying styles
file will be created which will attempt to duplicate the
colors, etc. used.
Complex polygon objects will be exported as independent
single polygons.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ExportDXF3D(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CWA)">
            <summary>Export selected map groups in a map view to an AutoCAD 3D DXF file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oLST2">LST with group names in the name part of the LST.</param>
            <param name="oWA3">DXF file to export</param>
            <remarks>Supported objects exported include lines, polygons, text.</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ExportDatamineString(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CLST,System.String)">
            <summary>Export selected map groups in a map view to a Datamine coordinate string file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oLST2">LST with group names in the name part of the LST.</param>
            <param name="str3">Datamine string file (*.dm) to export to</param>
            <remarks>
The lines, rectangles and polygons in the specified groups
will be exported to a Datamine coordinate string (*.dm) file.
The function attempts to duplicate the colors, etc. used.
Complex polygon objects will be exported as independent
single polygons.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.EMForward(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Plot an EM forward model against inverted data.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="d2">Plot X origin</param>
            <param name="d3">Plot Y origin</param>
            <param name="d4">Plot X size</param>
            <param name="d5">Plot Y size</param>
            <param name="d6">Coil Separation (m)</param>
            <param name="d7">Coil Frequency (Hz)</param>
            <param name="i8">&amp;lt;define&amp;gt;EMLAY_GEOMETRY&amp;lt;/define&amp;gt;</param>
            <param name="d9">Inverted or current resistivity</param>
            <param name="d10">Inverted or current height</param>
            <param name="d11">In-phase datum</param>
            <param name="d12">Quadrature datum</param>
            <param name="oVV13">Forward model resistivities</param>
            <param name="oVV14">Forward model heights</param>
            <param name="oVV15">Forward model In-phase (ppm)</param>
            <param name="oVV16">Forward model Quadrature (ppm)</param>
            <param name="i17">Plot resistivity as linear (0) or log (1)</param>
            <param name="i18">Plot as function of resistivity (0) or height (1)</param>
            <remarks>
This function is designed to display an inverted result beside
the forward model curves. This is useful for trouble-shooting
or understanding why a certain inversion result was obtained.
The earth model is a simple halfspace.

The forward model is plotted either as a function of
resistivity at a single height, or as a function of height at
a single resistivity. In either case, the relevant VVs must be
completely filled (even if one is all the same value).
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.DirectionPlot(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Double,System.Int32)">
            <summary>Plot an arrow to indicate the direction of a flight line</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X VV</param>
            <param name="oVV3">Y VV</param>
            <param name="d4">Arrow size in mm</param>
            <param name="d5">Location to draw in mm - can be X or Y depending on next parameter</param>
            <param name="i6">&amp;lt;define&amp;gt;ARROW_ALIGNMENT&amp;lt;/define&amp;gt;</param>
            <remarks>
An arrow will be drawn in the direction from the first valid
to the last points in the X and Y VVs.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.DecayCurve(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVA,GeoEngine.Core.GXNetX.CVA,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.String)">
            <summary>Plot decay curves at survey locations</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X coordinate VV</param>
            <param name="oVV3">Y coordinate VV</param>
            <param name="oVA4">VA channel to plot</param>
            <param name="oVA5">VA channel as horizontal axis (normally time channel)</param>
            <param name="i6">Log option: 0 linear (default), 1 logarithm, 2 log/linear</param>
            <param name="d7">Min value to apply log (must be &gt; 0.0)</param>
            <param name="d8">Angle in degrees measured CCW from East of the map</param>
            <param name="i9">Draw horizontal bar: 0 none, 1 bottom, 2 top, 3 both</param>
            <param name="i10">Draw vertical bar:   0 none, 1 bottom, 2 top, 3 both</param>
            <param name="d11">X offset in mm: Horizontal distance between survey location and origin of the box inside which decay curvey is drawn</param>
            <param name="d12">Y offset in mm</param>
            <param name="d13">Box width in mm:Decay curve at each survey location is drawn within this box</param>
            <param name="d14">Box height in mm</param>
            <param name="d15">Minimum value for X (horizontal axis)</param>
            <param name="d16">Minimum value for Y (vertical axis)</param>
            <param name="d17">X scale</param>
            <param name="d18">Y scale</param>
            <param name="d19">Line pitch, default is 5.0mm</param>
            <param name="i20">Line style</param>
            <param name="str21">Line color</param>
            <remarks>
Box width and height are used to draw horizontal and vertical
bars. Curves outside the box are not clipped.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.CSymbLegend(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.Double,System.Double,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>Plot a legend for the classified color symbols.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">MVIEW object</param>
            <param name="d2">Plot origin X</param>
            <param name="d3">Plot origin Y</param>
            <param name="d4">Label Font size (mm)</param>
            <param name="d5">Symbol scale factor</param>
            <param name="str6">AGG, ITR or ZON file name</param>
            <param name="str7">Plot title</param>
            <param name="str8">Plot subtitle</param>
            <remarks>
If the symbol size, color, font etc are specified in
the ITR's REG, then the Symbol scale factor is used
allow the user to adjust the symbol sizes. They will be
plotted at a size equal to the size in the REG times
the scale factor.
If no symbol size info can be found in the REG, then
the symbol size is set equal to the Label Font Size.
If no symbol font or number info is included in the
REG, it is the programmer's responsibility to select
the correct font and symbol before CSymbLegend is
called. The same is true of the edge color.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ContourPLY(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CPLY,System.String,System.String)">
            <summary>Creates a contour map with clipped areas.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oPLY2">Clipping PLY</param>
            <param name="str3">Control file name</param>
            <param name="str4">Grid file name</param>
            <remarks>
The clipping PLY can include a surrounding inclusive polygon
and zero, one or more interior exclusive polygons. Construct
a PLY object using the AddPolygonEx_PLY function, to add both
inclusive (as the first PLY) and exclusive interior regions.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Contour(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String,System.String)">
            <summary>Creates a contour map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">Control file name</param>
            <param name="str3">Grid file name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBarREG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,GeoEngine.Core.GXNetX.CITR,GeoEngine.Core.GXNetX.CREG)">
            <summary>Create a Color Bar in view</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2">Itr</param>
            <param name="oITR3">Optional 2nd Itr (can be null)</param>
            <param name="oREG4">Parameters</param>
            <remarks>
To allow for expansion, all parameters are passed inside the REG object.

BAR_ORIENTATION        one of MVU_ORIENTATION_XXX (DEFAULT = &amp;lt;define&amp;gt;MVU_ORIENTATION_VERTICAL&amp;lt;/define&amp;gt;)
DECIMALS					decimals in plotted values (see sFormatStr_GS for rules) (DEFAULT = 1)
ANNOFF						annotation offset from bar (+/- determines side of the bar left/right and below/above)
BOX_SIZE               box height (mm) (width for horizontal color bar) (DEFAULT = 4)
BAR_WIDTH              width (mm) (short dimension) of the color bar (DEFAULT = 8)
MINIMUM_GAP            Minimum space between annotations, otherwise drop annotations (DEFAULT = 0 mm)
The actual height is over-estimated, so even with zero gap there will normally always be some space between labels.
FIXED_INTERVAL         Preset interval for annotations scale (DEFAULT = DUMMY, use color zones)
FIXED_MINOR_INTERVAL   Preset minor interval for annotations scale (DEFAULT = DUMMY, if defined must be 1/10, 1/5, 1/4 or 1/2 of FIXED_INTERVAL)
X								X location	(REQUIRED)
Y								Y location	(REQUIRED)
POST_MAXMIN            Post limit values at ends of the bar (0 or 1)? (DEFAULT = 0)
DIVISION_STYLE         One of MVU_DIVISION_STYLE_XXX (DEFAULT = &amp;lt;define&amp;gt;MVU_DIVISION_STYLE_LINES&amp;lt;/define&amp;gt;)
</remarks>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBarStyle(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Create a Color Bar in view with style options</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2">Itr</param>
            <param name="i3">Decimals</param>
            <param name="d4">Annotation size</param>
            <param name="d5">Box height</param>
            <param name="d6">Box width</param>
            <param name="d7">X location (bottom left corner of color boxes)</param>
            <param name="d8">Y location</param>
            <param name="i9">&amp;lt;define&amp;gt;COLORBAR_STYLE&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBarHorStyle(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Create a Horizontal Color Bar in view with style options</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2">Itr</param>
            <param name="i3">Decimals</param>
            <param name="d4">Annotation size</param>
            <param name="d5">Box height</param>
            <param name="d6">Box width</param>
            <param name="d7">X location (bottom left corner of color boxes)</param>
            <param name="d8">Y location</param>
            <param name="i9">&amp;lt;define&amp;gt;COLORBAR_STYLE&amp;lt;/define&amp;gt;</param>
            <param name="i10">&amp;lt;define&amp;gt;COLORBAR_LABEL&amp;lt;/define&amp;gt;</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBarHor2Style(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Create a Horizontal Color Bar from two ITRs with style options</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2" />
            <param name="oITR3">Secondary ITR</param>
            <param name="i4">Decimals</param>
            <param name="d5">Annotation size</param>
            <param name="d6">Box height</param>
            <param name="d7">Box width</param>
            <param name="d8">X location (bottom left corner of color boxes)</param>
            <param name="d9">Y location</param>
            <param name="i10">&amp;lt;define&amp;gt;COLORBAR_STYLE&amp;lt;/define&amp;gt;</param>
            <param name="i11">&amp;lt;define&amp;gt;COLORBAR_LABEL&amp;lt;/define&amp;gt;</param>
            <remarks>
The secondary ITR is used to blend horizontally with the
primary ITR in each box.
</remarks>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBarHor2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Create a Horizontal Color Bar from two ITRs</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2" />
            <param name="oITR3">Secondary ITR</param>
            <param name="i4">Decimals</param>
            <param name="d5">Annotation size</param>
            <param name="d6">Box height</param>
            <param name="d7">Box width</param>
            <param name="d8">X location (bottom left corner of color boxes)</param>
            <param name="d9">Y location</param>
            <param name="i10">&amp;lt;define&amp;gt;COLORBAR_LABEL&amp;lt;/define&amp;gt;</param>
            <remarks>
The secondary ITR is used to blend horizontally with the
primary ITR in each box.
</remarks>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBarHor(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Create a horizontal color bar in view</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2">Itr</param>
            <param name="i3">Decimals</param>
            <param name="d4">Annotation offset from box in mm (negative for labels below).</param>
            <param name="d5">Box width in mm</param>
            <param name="d6">Box height in mm</param>
            <param name="d7">X location (bottom left corner of color boxes) in mm</param>
            <param name="d8">Y location in mm</param>
            <param name="i9">&amp;lt;define&amp;gt;COLORBAR_LABEL&amp;lt;/define&amp;gt;</param>
            <remarks>
The sign of the annotation offset determines whether labels are
plotted above or below the colorbar. Labels above are text-justified
to the bottom of the text, and labels below are text-justified to
the top of the text.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBar2Style(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Create a Color Bar from two ITRs with style options</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2" />
            <param name="oITR3">Secondary ITR</param>
            <param name="i4">Decimals</param>
            <param name="d5">Annotation size</param>
            <param name="d6">Box height</param>
            <param name="d7">Box width</param>
            <param name="d8">X location (bottom left corner of color boxes)</param>
            <param name="d9">Y location</param>
            <param name="i10">&amp;lt;define&amp;gt;COLORBAR_STYLE&amp;lt;/define&amp;gt;</param>
            <remarks>
The secondary ITR is used to blend horizontally with the
primary ITR in each box.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBar2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Create a Color Bar from two ITR</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2" />
            <param name="oITR3">Secondary ITR</param>
            <param name="i4">Decimals</param>
            <param name="d5">Annotation size</param>
            <param name="d6">Box height</param>
            <param name="d7">Box width</param>
            <param name="d8">X location (bottom left corner of color boxes)</param>
            <param name="d9">Y location</param>
            <remarks>
The secondary ITR is used to blend horizontally with the
primary ITR in each box.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ColorBar(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CITR,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Create a Color Bar in view</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oITR2">Itr</param>
            <param name="i3">Decimals</param>
            <param name="d4">Annotation offset from box in mm.</param>
            <param name="d5">Box height</param>
            <param name="d6">Box width</param>
            <param name="d7">X location (bottom left corner of color boxes)</param>
            <param name="d8">Y location</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.CDIPixelPlot3D(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String,GeoEngine.Core.GXNetX.CVA,GeoEngine.Core.GXNetX.CVA,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CITR)">
            <summary>Create a color pixel-style plot of CDI data in a 3D view.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">Name of the group to create</param>
            <param name="oVA3">Data [lNR x lNC]</param>
            <param name="oVA4">Elevations (Z) [lNR x lNC]</param>
            <param name="oVV5">Position (X) [lNC]</param>
            <param name="oVV6">Position (Y) [lNC]</param>
            <param name="oITR7">Data color transform</param>
            <remarks>
Similar to CDIPixelPlot_MVU, but plotted onto a series of
plotting planes which hang from the XY path in 3D. Each vertical plane azimuth
is defined by two adjacent points on the path. The color "pixel" for each
data point is plotted in two halves, with each half on adjacent plotting planes,
with the bend at the data point.
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.CDIPixelPlot(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String,GeoEngine.Core.GXNetX.CVA,GeoEngine.Core.GXNetX.CVA,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CITR)">
            <summary>Create a color pixel-style plot of CDI data.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">Name of the group to create</param>
            <param name="oVA3">Data [lNR x lNC]</param>
            <param name="oVA4">Elevations (Y) [lNR x lNC]</param>
            <param name="oVV5">Position (X) [lNC]</param>
            <param name="oITR6">Data color transform</param>
            <remarks>
Draws a single colored rectangle for each data point in
Conductivity-Depth data (for example). It is similar to the
result you get if you plot a grid with Pixel=1, but in this
data the row and column widths are not necessarily constant,
and the data can move up and down with topography. The pixels
are sized so that the boundaries are half-way between adjacent
data, both vertically and horizontally.
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.BarChart(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32,System.String,System.String,System.String,System.Double,System.String,System.Double,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Plot bar chart on a map.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="str2">Group name</param>
            <param name="oDB3">Database handle</param>
            <param name="i4">Line handle</param>
            <param name="str5">Horizontal (X) axis' channel name</param>
            <param name="str6">List of channel names (comma separated)</param>
            <param name="str7">X axis title</param>
            <param name="d8">Text size for X axis</param>
            <param name="str9">Y axis title</param>
            <param name="d10">Text size for Y axis</param>
            <param name="str11">Overall chart title</param>
            <param name="d12">Text size for overall title</param>
            <param name="d13">Bar width in mm</param>
            <param name="i14">Distance based (1) or fiducial based (0)</param>
            <param name="i15">&amp;lt;define&amp;gt;BARCHART_LABEL&amp;lt;/define&amp;gt;</param>
            <param name="i16">Draw ticks along X axis (1) or not (0)</param>
            <param name="i17">Draw right vertical axis (1) or not</param>
            <param name="i18">Draw top horizontal axis (1)</param>
            <param name="i19">Draw bottom horizontal axis (1) or not</param>
            <param name="i20">Draw surronding box (1) or not (0) The following 4 parameters are required if drawing the surronding box</param>
            <param name="d21">Width in mm between left Y axis of bar chart with left surronding line</param>
            <param name="d22">Width in mm between bottom X axis of bar chart with bottom surronding line</param>
            <param name="d23">Width in mm between right Y axis of bar chart with right surronding line</param>
            <param name="d24">Width in mm between top X axis of bar chart with top surronding line</param>
            <param name="d25">X in mm (bottom left corner of bar chart)</param>
            <param name="d26">Y in mm (bottom left corner of bar chart)</param>
            <param name="d27">Width of the bar chart in mm</param>
            <param name="d28">Height of the bar chart in mm</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.ArrowVectorVV(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Int32,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Draw arrow vectors based on input VVs.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="oVV4">X Vector value (can be negative)</param>
            <param name="oVV5">Y Vector value (can be negative)</param>
            <param name="d6">Scaling (units/mm)</param>
            <param name="i7">&amp;lt;define&amp;gt;MVU_VPOS&amp;lt;/define&amp;gt;</param>
            <param name="i8">&amp;lt;define&amp;gt;MVU_VSIZE&amp;lt;/define&amp;gt;</param>
            <param name="i9">&amp;lt;define&amp;gt;MVU_VSTYLE&amp;lt;/define&amp;gt;</param>
            <param name="i10">&amp;lt;define&amp;gt;MVU_VPOINT&amp;lt;/define&amp;gt;</param>
            <param name="d11">Line thickness (can be Dummy)</param>
            <remarks>
The locations are given in two VVs, and the directions
in the two others. A wide range of sizes are available.
If the scaling is set to &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, then arrows are automatically
scaled so the largest is 1cm in length.
If the line thickness is set to &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, the line thickness scales
with the arrow size, and is 1/20 of the vector length.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVU.Arrow(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMVIEW,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Draw an arrow.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMVIEW1">View</param>
            <param name="d2">Head X location</param>
            <param name="d3">Head Y location</param>
            <param name="d4">Tail X location</param>
            <param name="d5">Tail Y location</param>
            <param name="d6">See &amp;lt;define&amp;gt;MVU_ARROW&amp;lt;/define&amp;gt; definitions for explanation</param>
            <param name="d7">Angle of barbs with respect to the tail in degrees.</param>
            <param name="i8">&amp;lt;define&amp;gt;MVU_ARROW&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMVU">
            <summary>

       A catchall library for methods using the MAP and MVIEW classes.
       These include drawing flight paths, legends, postings, and
       special objects such as histograms and bar charts.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ViewToUser(System.Double@,System.Double@)">
            <summary>Convert a VIEW coordinate to a USER coordinate.</summary>
            <param name="d1">X in View, returned in user coordinates</param>
            <param name="d2">Y in View, returned in user coordinates</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.UserToView(System.Double@,System.Double@)">
            <summary>Convert a USERplot in mm to a VIEW coordinate</summary>
            <param name="d1">X in USER, returned in View coordinates</param>
            <param name="d2">Y in USER, returned in View coordinates</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.TranScale(System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the view translation and scaling</summary>
            <param name="d1">X origin (user X to be placed at map 0)</param>
            <param name="d2">Y origin (user Y to be placed at map 0)</param>
            <param name="d3">X mm/user unit</param>
            <param name="d4">Y mm/user unit</param>
            <remarks>
Warning. For reasons unknown (and maybe a bug), this
function resets the view IPJ units. It is a good idea
to call the SetUnits_IPJ function after calling this
function in order to restore them. This will be addressed
in v6.4.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetWindow(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Set the view window</summary>
            <param name="d1">X minimum</param>
            <param name="d2">Y minimum</param>
            <param name="d3">X maximum</param>
            <param name="d4">Y maximum</param>
            <param name="i5">&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt;</param>
            <remarks>
The current clip region will be set to the clip
window.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetClassName(System.String,System.String)">
            <summary>Set a class name.</summary>
            <param name="str1">Class</param>
            <param name="str2">Name</param>
            <remarks>
MVIEW class names are intended to be used to record the
names of certain classes in the view, such as "Plane"
for the default drawing plane.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ScaleWindow(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Assign view coordinates to define a window.</summary>
            <param name="d1">X minimum in view coordinates</param>
            <param name="d2">Y minimum</param>
            <param name="d3">X maximum</param>
            <param name="d4">Y maximum</param>
            <param name="d5">X minimum in plot coordinates</param>
            <param name="d6">Y minimum</param>
            <param name="d7">Horizontal scale (view unit/plot unit in mm)</param>
            <param name="d8">Vertical scale</param>
            <remarks>
The provided coordinates are converted to map mm
using the current view translation and scaling.
SetWindow is effectively called.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ScaleAllGroup(System.Double,System.Double)">
            <summary>Scale all groups (except for GRID) in a view</summary>
            <param name="d1">X scale</param>
            <param name="d2">Y scale</param>
            <remarks>
X (and Y) scale is the ratio of the new dimension over
the old dimension of a reference object. For example, if a horizontal
straight line of 10m long becomes 20m, X scale should be 2.

The view is then scaled back so that the view occupies the same
area size as before.  The view's clip area is updated as well.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.rScaleYMM">
            <summary>Get the vertical scale in Y units/mm</summary>
            <remarks>
The scale factor is intended to be used by methods
that would like to specify sizes in mm.  Examples
would be text sizes, line thicknesses and line
pitch.
</remarks>
            <returns>Returns vertical scale in view Y units/mm</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.rScalePjMM">
            <summary>Get horizontal scale in projected user units/mm</summary>
            <remarks>
The scale factor is intended to be used by methods
that would like to specify sizes in mm.  Examples
would be text sizes, line thicknesses and line
pitch.
Same as rScaleMM if working projection not defined
</remarks>
            <returns>Returns horizontal scale in projected user units/mm</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.rScaleMM">
            <summary>Get the horizontal scale in view X units/mm</summary>
            <remarks>
The scale factor is intended to be used by methods
that would like to specify sizes in mm.  Examples
would be text sizes, line thicknesses and line
pitch.
</remarks>
            <returns>Returns horizontal scale in view X units/mm</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.rGetMapScale">
            <summary>Get the current map scale of the view</summary>
            <returns>The current map scale to 6 significant digits</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ReScale(System.Double)">
            <summary>Change the scale of a view.</summary>
            <param name="d1">Scale factor (&gt; 0.0)</param>
            <remarks>
The view size is multiplied by the scale factor.
The view location will move relative to the map origin
by the scale factor.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MapOrigin(System.Double@,System.Double@)">
            <summary>Get the map origin from a view</summary>
            <param name="d1">Returned map origin - X</param>
            <param name="d2">Returned map origin - Y</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGetClassName(System.String,System.String@)">
            <summary>Get a class name.</summary>
            <param name="str1">Class</param>
            <param name="str2">Name</param>
            <remarks>
MVIEW class names are intended to be used to record the
names of certain classes in the view, such as "Plane"
for the default drawing plane.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.FitWindow(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Fit an area in ground coordinates to an area in mm on map.</summary>
            <param name="d1">X minimum (mm) of the area in map relative to map origin</param>
            <param name="d2">Y minimum  ..</param>
            <param name="d3">X maximum  ..</param>
            <param name="d4">Y maximum  ..</param>
            <param name="d5">Min X in ground coordinate to fit to the area defined above</param>
            <param name="d6">Min Y in ground coordinate ..</param>
            <param name="d7">Max X in ground coordinate ..</param>
            <param name="d8">Max Y in ground coordinate ..</param>
            <remarks>
X and Y scales will be redefined and the units will be set to &lt;unknown&gt;.
Coordinate ranges must be greater than 0.0.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.FitMapWindow3D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the 2D view window for a 3D view.</summary>
            <param name="d1">X minimum (mm) of the area in map relative to map origin</param>
            <param name="d2">Y minimum  ..</param>
            <param name="d3">X maximum  ..</param>
            <param name="d4">Y maximum  ..</param>
            <param name="d5">Min X in ground coordinate to fit to the area defined above</param>
            <param name="d6">Min Y in ground coordinate ..</param>
            <param name="d7">Max X in ground coordinate ..</param>
            <param name="d8">Max Y in ground coordinate ..</param>
            <remarks>
3D views are placed in 2D maps within a 2D mapping window
that is analgous to a 2D View.  This allows all 2D functions
(such as changing a view location and size) to treat a 3D
view just like a 2D view.

The FitMapWindow3D_MVIEW function allows you to
locate and set the "apparent" 2D mapping of a 3D view on
the map. An intial map window is established
as specified on the map, and the view scaling is
established to fit the specified area within that
map area.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.BestFitWindow(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32)">
            <summary>
Fit an area in ground coordinates centered to an area in mm on map or vise versa
keeping X and Y scales the same.
</summary>
            <param name="d1">X minimum (mm) of the area in map relative to map origin</param>
            <param name="d2">Y minimum  ..</param>
            <param name="d3">X maximum  ..</param>
            <param name="d4">Y maximum  ..</param>
            <param name="d5">Min X in ground coordinate to fit to the area defined above</param>
            <param name="d6">Min Y in ground coordinate ..</param>
            <param name="d7">Max X in ground coordinate ..</param>
            <param name="d8">Max Y in ground coordinate ..</param>
            <param name="i9">&amp;lt;define&amp;gt;MVIEW_FIT&amp;lt;/define&amp;gt;</param>
            <remarks>
X and Y scales will be redefined and units will remain unchanged.
The final X and Y ranges (if changed) are returned.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ViewToPlot(System.Double@,System.Double@)">
            <summary>Convert a VIEW coordinate to a plot coordinate in mm.</summary>
            <param name="d1">X in View, returned in mm from plot origin</param>
            <param name="d2">Y in View, returned in mm from plot origin</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetThinRes(System.Double)">
            <summary>Set polyline/polygon thinning resolution</summary>
            <param name="d1">Thinning resolution in mm, -1.0 to turn off.</param>
            <remarks>
The thinning resolution controls the removal of
redundant points from polylines and polygons.  Points
that deviate from a straight line by less than the
thinning resolution are removed.  This can significantly
reduce the size of a MAP file.
We recommend that you set the thinning resolution to
0.02 mm.

By default, the thinning resolution is set to 0.05mm.

Set resolution to 0.0 to remove colinear points only.

To turn off thinning after turning it on, call
SetThinRes_MVIEW with a resolution of -1.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PlotToView(System.Double@,System.Double@)">
            <summary>Convert a plot coordinate in mm to a VIEW coordinate.</summary>
            <param name="d1">X in plot mm, returned in View coordinates</param>
            <param name="d2">Y in plot mm, returned in View coordinates</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGUID(System.String@)">
            <summary>Gets the GUID of the MVIEW.</summary>
            <param name="str1">GUID</param>
            <remarks>If a GUID was never queried a new one will be assigned and the map will be modified. Only if the map is saved will this value then persist.</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGetName(System.String@)">
            <summary>Gets the name of a view.</summary>
            <param name="str1">View name returned</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetREG">
            <summary>Get the REG of the view.</summary>
            <returns>The REG of the View.</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetMAP">
            <summary>Get the MAP of the view.</summary>
            <returns>The MAP of the View.</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Extent(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the view extents</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_EXTENT&amp;lt;/define&amp;gt;</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_EXTENT_UNIT&amp;lt;/define&amp;gt;</param>
            <param name="d3">X minimum</param>
            <param name="d4">Y minimum</param>
            <param name="d5">X maximum</param>
            <param name="d6">Y maximum</param>
            <remarks>
The CLIP region is the current view window or the limits
of the current clip polygon.

If &amp;lt;define&amp;gt;MVIEW_EXTENT_ALL&amp;lt;/define&amp;gt; is requested and the view has no groups, the
clip extents are returned.

If clip extents are requested and there are no clip extents, an
area 0.0,0.0 1.0,1.0 is returned.

The &amp;lt;define&amp;gt;MVIEW_EXTENT_VISIBLE&amp;lt;/define&amp;gt; flag will return the union of the &amp;lt;define&amp;gt;MVIEW_EXTENT_CLIP&amp;lt;/define&amp;gt; area and the
extents of all non-masked visible groups in the view.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CreateCrookedSectionDataProfile(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,GeoEngine.Core.GXNetX.CIPJ,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Creates a new crooked section data profile view.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Object</param>
            <param name="oIPJ2">Geographic projection of input X, Y locations below (without orientation)</param>
            <param name="str3">View Name</param>
            <param name="d4">Base view bottom left corner X (mm)</param>
            <param name="d5">Base view bottom left corner Y (mm)</param>
            <param name="d6">Base view size in X (mm)</param>
            <param name="d7">Base view size in Y (mm)</param>
            <param name="d8">Map horizontal scale (X-axis)</param>
            <param name="d9">Starting distance at the left side of the view.</param>
            <param name="d10">Data value at bottom of the view</param>
            <param name="d11">Data value at top of the view</param>
            <param name="i12">Make logarithmic Y-axis (0:No, 1:Yes)?</param>
            <param name="oVV13">Cumulative distances along the secton</param>
            <param name="oVV14">True X locations along the section</param>
            <param name="oVV15">True Y locations along the section</param>
            <remarks>
This is the same as CreateCrookedSection_MVIEW, except that the
vertical axis plots a data value, not elevation, and allows for
logarithmic scaling.

See Also: CreateCrookedSection_MVIEW.
</remarks>
            <returns>MVIEW, aborts if creation fails</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CreateCrookedSection(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,GeoEngine.Core.GXNetX.CIPJ,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Creates a new crooked section view.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Object</param>
            <param name="oIPJ2">Geographic projection of input X, Y locations below (without orientation)</param>
            <param name="str3">View Name</param>
            <param name="d4">Base view bottom left corner X (mm)</param>
            <param name="d5">Base view bottom left corner Y (mm)</param>
            <param name="d6">Base view size in X (mm)</param>
            <param name="d7">Base view size in Y (mm)</param>
            <param name="d8">Map horizontal scale (X-axis)</param>
            <param name="d9">Vertical exaggeration (1.0 is normal, must be &gt;0.0)</param>
            <param name="d10">Starting distance at the left side of the view.</param>
            <param name="d11">Elevation at TOP of the view</param>
            <param name="oVV12">Cumulative distances along the secton</param>
            <param name="oVV13">True X locations along the section</param>
            <param name="oVV14">True Y locations along the section</param>
            <remarks>
A crooked section is a section running vertically beneath
a path of (X, Y) locations, like a river. This view supports
linking to other plan, section, or 3D views.
The data view coordinates are set up so that vertical coordinate
corresponds to elevation, and the X coordinate is the distance along
the crooked feature, beginning at zero on the left, but the
status bar will show the true (X, Y, Z) location.

If the scale is set to &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, then it will be calculated so that
the points will all fit horizontally.
</remarks>
            <returns>MVIEW, aborts if creation fails</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Create(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,System.Int32)">
            <summary>Create MVIEW.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP on which to place the view</param>
            <param name="str2">View name (maximum &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;)</param>
            <param name="i3">&amp;lt;define&amp;gt;MVIEW_OPEN&amp;lt;/define&amp;gt;</param>
            <remarks>
View scaling is set to mm on the map and the view
origin is set to the map origin.
</remarks>
            <returns>MVIEW, aborts if creation fails</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.OptimumTick(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double@)">
            <summary>Return a default optimum tick interval</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Minimum of range</param>
            <param name="d2">Maximum</param>
            <param name="d3">Optimum interval</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LabelY(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>Label annotations on the Y axis</summary>
            <param name="d1">X location in view units</param>
            <param name="d2">Bottom Y</param>
            <param name="d3">Top    Y</param>
            <param name="d4">Label interval</param>
            <param name="i5">&amp;lt;define&amp;gt;MVIEW_LABEL_JUST&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;MVIEW_LABEL_BOUND&amp;lt;/define&amp;gt;</param>
            <param name="i7">&amp;lt;define&amp;gt;MVIEW_LABEL_ORIENT&amp;lt;/define&amp;gt;</param>
            <remarks>
Label bounding will justify edge labels to be inside
the bar limits. But bounding does not apply if
labels are drawn vertically (top right or top left)
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LabelX(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>Label annotations on the X axis</summary>
            <param name="d1">Y location in view units</param>
            <param name="d2">Left  X</param>
            <param name="d3">Right X</param>
            <param name="d4">Label interval</param>
            <param name="i5">&amp;lt;define&amp;gt;MVIEW_LABEL_JUST&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;MVIEW_LABEL_BOUND&amp;lt;/define&amp;gt;</param>
            <param name="i7">&amp;lt;define&amp;gt;MVIEW_LABEL_ORIENT&amp;lt;/define&amp;gt;</param>
            <remarks>
Label bounding will justify edge labels to be inside
the bar limits. But bounding does not apply if
labels are drawn vertically (top right or top left)
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LabelFid(GeoEngine.Core.GXNetX.CVV,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Label fiducials on a profile</summary>
            <param name="oVV1">X VV</param>
            <param name="d2">Fiducial start</param>
            <param name="d3">Fiducial increment</param>
            <param name="d4">Fiducial label interval, default 100.0</param>
            <param name="d5">Y location in view unit</param>
            <param name="d6">Y scale</param>
            <remarks>
A 1mm long vertical tick is drawn at the place
where a label is present. The label is drawn
below the tick.

The incoming X VV is used to define the place for
label.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Grid(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Draw a grid in the current window</summary>
            <param name="d1">X grid increment</param>
            <param name="d2">Y grid increment</param>
            <param name="d3">dX dot increment/cross X size</param>
            <param name="d4">dY dot increment/cross Y size</param>
            <param name="i5">&amp;lt;define&amp;gt;MVIEW_GRID&amp;lt;/define&amp;gt;</param>
            <remarks>
The grid will be drawn in the current window specified
by the last SetWindow call.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.AxisY(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a  Y axis</summary>
            <param name="d1">X location in view units</param>
            <param name="d2">Bottom Y</param>
            <param name="d3">Top    Y</param>
            <param name="d4">Major tick interval</param>
            <param name="d5">Minor tick interval (half size of major)</param>
            <param name="d6">Tick size in view units (negative for left ticks)</param>
            <remarks>All coordinates are in view units.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.AxisX(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw an X axis</summary>
            <param name="d1">Y location in view units</param>
            <param name="d2">Left  X</param>
            <param name="d3">Right X</param>
            <param name="d4">Major tick interval</param>
            <param name="d5">Minor tick interval (half size of major)</param>
            <param name="d6">Tick size in view units (negative for down ticks)</param>
            <remarks>All coordinates are in view units.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetUFac(System.Double)">
            <summary>Set the unit conversion of a view.</summary>
            <param name="d1">New UFac value</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Utility Drawing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Render(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>Render a specified area of view onto a Windows DC handle</summary>
            <param name="d1">DC Handle</param>
            <param name="i2">Left value of the render rect in Windows coordinates (bottom&gt;top)</param>
            <param name="i3">Bottom value</param>
            <param name="i4">Right value</param>
            <param name="i5">Top value</param>
            <param name="d6">Area X minimum</param>
            <param name="d7">Area Y minimum</param>
            <param name="d8">Area X maximum</param>
            <param name="d9">Area Y maximum</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGroupName(System.Int32,System.String@)">
            <summary>Get a group name</summary>
            <param name="i1">Group number, error if not valid</param>
            <param name="str2">Group Name</param>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iFindGroup(System.String)">
            <summary>Find a Group by name.</summary>
            <param name="str1">Group name</param>
            <returns>Group Number.</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupFreezeScale(System.Int32,System.Double)">
            <summary>Set a scale freezing value for the group (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for disabled).</summary>
            <param name="i1">Group number</param>
            <param name="d2">Variable to fill with freeze scale</param>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetFreezeScale(System.Double)">
            <summary>Set a scale freezing value into stream (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for disabled).</summary>
            <param name="d1">Freeze Scale value</param>
            <remarks>Objects written after this will override any scale freezing set for the group</remarks>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupFreezeScale(System.Int32,System.Double@)">
            <summary>Get a scale freezing value for the group (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for disabled).</summary>
            <param name="i1">Group number</param>
            <param name="d2">Variable to fill with freeze scale</param>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Set3DGroupFlags(System.Int32,System.Int32)">
            <summary>Set a 3D geometry group's 3D rendering flags.</summary>
            <param name="i1">Group number</param>
            <param name="i2">Combination of &amp;lt;define&amp;gt;MVIEW_3D_RENDER&amp;lt;/define&amp;gt; flags or 0</param>
            <available_version>9.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iGet3DGroupFlags(System.Int32)">
            <summary>Get a 3D geometry group's 3D rendering flags.</summary>
            <param name="i1">Group number</param>
            <returns>Combination of &amp;lt;define&amp;gt;MVIEW_3D_RENDER&amp;lt;/define&amp;gt; flags or 0</returns>
            <available_version>9.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Render</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetUserIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the user projection of the view.</summary>
            <param name="oIPJ1">IPJ to place in the view</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the projection of the view.</summary>
            <param name="oIPJ1">IPJ to place in the view</param>
            <remarks>
This function also sets the User IPJ,
and automatically clears the WARP before doing so.
This would be equivalent to calling :func:`_ClearWarp_IPJ'
followed by SetUserIPJ_MVIEW on the view.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.rNorth">
            <summary>Returns North direction at center of view.</summary>
            <remarks>
North is calculated from the IPJ North direction.
It will be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if IPJ is unknown.
</remarks>
            <returns>North direction id deg. azimuth relative to view Y.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ModePJ(System.Int32)">
            <summary>Set the working projection mode</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_PJ&amp;lt;/define&amp;gt;</param>
            <remarks>
This controls how your coordinates and attributes will be interpreted.
A working projection must be set useing SetWorkingIPJ_MVIEW for this
method to have any effect.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetUserIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the user projection of the view.</summary>
            <param name="oIPJ1">IPJ in which to place the view IPJ</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the projection of the view.</summary>
            <param name="oIPJ1">IPJ in which to place the view IPJ</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsProjectionEmpty">
            <summary>Returns 1 if the view projection and view user projection are both empty (undefined).</summary>
            <remarks>
Use, for instance, to see if the map view contains projection information. The first time you add data that
has projection information you should set up an empty view projection so that subsequent data added with a different
projection is properly displayed in relation to the initial data.
</remarks>
            <returns>1 if the view projection and view user projection are both empty.</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClearESRILDTs">
            <summary>Clear ESRI local datum transformations currently in use.</summary>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetWorkingIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the working projection of the view.</summary>
            <param name="oIPJ1">The input projection</param>
            <remarks>
The working projection is the coordinate system of coordinates drawn to
the view.  The working coordinate system can be different than the view
coordinate system, in which case the coordinates are re-projected to the
view coordinate system before they are placed in the view.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Projection</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iFindGroupByGUID(System.String)">
            <summary>Find a Group by name.</summary>
            <param name="str1">GUID</param>
            <returns>Group Number.</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupGUID(System.Int32,System.String@)">
            <summary>Gets a GUID of a group in the MVIEW.</summary>
            <param name="i1">Group number</param>
            <param name="str2">GUID</param>
            <remarks>If a GUID was never queried a new one will be assigned and the map will be modified. Only if the map is saved will this value then persist.</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.StartGroup(System.String,System.Int32)">
            <summary>Start a group.</summary>
            <param name="str1">Group name, can be NULL, Maximum length is &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_GROUP&amp;lt;/define&amp;gt;</param>
            <remarks>
Line and fill colors and thickness must be set
before drawing to a group.

If the group name is NULL, output will be sent to
the primary group stream and the &amp;lt;define&amp;gt;MVIEW_GROUP&amp;lt;/define&amp;gt; is
ignored.

Group names must be different from view names.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetVisibility(System.Int32)">
            <summary>Set the view visibility</summary>
            <param name="i1" />
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetRenderOrder(System.Int32)">
            <summary>Set the view render order</summary>
            <param name="i1">Render order</param>
            <remarks>Views with lower numbers should render first, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; is undefined</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetMovability(System.Int32)">
            <summary>Set the view movability</summary>
            <param name="i1" />
            <remarks>
Views are always physically movable in the API, this
flag is for preventing accidental moving in the GUI.
By default views are not movable.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetMarkMoveable(System.Int32)">
            <summary>Set the movable attribute of marked groups.</summary>
            <param name="i1">0 - not movable, 1 - movable</param>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupTransparency(System.String,System.Double)">
            <summary>Sets the transparency value of group</summary>
            <param name="str1">Group name</param>
            <param name="d2">Transparency  (1.0 - Opaque, 0.0 - Transparent)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupMoveable(System.String,System.Int32)">
            <summary>Set the movable attribute of a group.</summary>
            <param name="str1">Group name</param>
            <param name="i2">0 - not movable, 1 - movable</param>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.RenameGroup(System.String,System.String)">
            <summary>Rename a group.</summary>
            <param name="str1">Old group name</param>
            <param name="str2">New group name</param>
            <remarks>Does nothing if the group does not already exist.</remarks>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MoveGroupToFront(System.String)">
            <summary>Move the group to the front (render last).</summary>
            <param name="str1">Group name</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MoveGroupToBack(System.String)">
            <summary>Move the group to the back (render first).</summary>
            <param name="str1">Group name</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MoveGroupForward(System.String)">
            <summary>Move the group forward one position (render later).</summary>
            <param name="str1">Group name</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MoveGroupBackward(System.String)">
            <summary>Move the group backward one position (render sooner).</summary>
            <param name="str1">Group name</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MarkGroup(System.String,System.Int32)">
            <summary>Mark or unmark a specific group</summary>
            <param name="str1">Group name</param>
            <param name="i2">0 - unmark, 1 - mark</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MarkEmptyGroups(System.Int32)">
            <summary>Mark/unmark all empty groups.</summary>
            <param name="i1">0 - unmark, 1 - mark</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MarkAllGroups(System.Int32)">
            <summary>Mark or unmark all groups.</summary>
            <param name="i1">0 - unmark, 1 - mark</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iRenderOrder">
            <summary>Query the view render order</summary>
            <remarks>Views with lower numbers should render first, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; is undefined</remarks>
            <returns>Render order</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iListGroups(GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>Get a list of the groups in a view.</summary>
            <param name="oLST1">List</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_GROUP_LIST&amp;lt;/define&amp;gt;</param>
            <returns>Number of groups in the list</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsVisible">
            <summary>Is this view visible?</summary>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsMovable">
            <summary>Is this view movable?</summary>
            <remarks>
Views are always physically movable in the API, this
flag is for preventing accidental moving in the GUI.
By default views are not movable.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsGroupEmpty(System.String)">
            <summary>Is the group empty?</summary>
            <param name="str1">Group name</param>
            <returns>TRUE or FALSE (1 or 0)</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsGroup(System.String,System.Int32)">
            <summary>Query a status or characteristic of a group</summary>
            <param name="str1">Group name</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_IS&amp;lt;/define&amp;gt;</param>
            <returns>TRUE or FALSE (1 or 0)</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGenNewGroupName(System.String,System.String@)">
            <summary>
Generate the name of a group from a base name that
is new. (always unique and won't overwrite existing
objects).
</summary>
            <param name="str1">Base Name of group</param>
            <param name="str2">New Name of group</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iExistGroup(System.String)">
            <summary>Checks to see if a group exists.</summary>
            <param name="str1">Group name</param>
            <returns>
0  - group does not exist.
1  - group exists.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.HideShadow2DInterpretations(System.Int32)">
            <summary>Hide/Show 2d shadow interpretations.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_HIDE&amp;lt;/define&amp;gt;</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.HideMarkedGroups(System.Int32)">
            <summary>Hide/Show marked groups.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_HIDE&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GroupToPLY(System.String,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Save all polygons in group into PLY obj.</summary>
            <param name="str1">Group name</param>
            <param name="oPLY2">PLY to add to</param>
            <remarks>
The coordinates will be in the working coordinate system
of the view.  The SetWorkingIPJ_MVIEW method can be used
to change the working coordinate system. This function will
return an empty PLY if the group is hidden.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupTransparency(System.String,System.Double@)">
            <summary>Gets the transparency value of group</summary>
            <param name="str1">Group name</param>
            <param name="d2">Transparency (1.0 - Opaque, 0.0 - Transparent)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupExtent(System.String,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32)">
            <summary>Get extent of a group in a view</summary>
            <param name="str1">Group name</param>
            <param name="d2">Minimum X, returned</param>
            <param name="d3">Minimum Y, returned</param>
            <param name="d4">Maximum X, returned</param>
            <param name="d5">Maximum Y, returned</param>
            <param name="i6">&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DelMarkedGroups">
            <summary>Delete marked groups.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DeleteGroup(System.String)">
            <summary>Delete a group.</summary>
            <param name="str1">Group name</param>
            <remarks>Does nothing if the group does not already exist.</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CRCGroup(System.String,System.Int32)">
            <summary>Compute CRC for a group.</summary>
            <param name="str1">Group name</param>
            <param name="i2">CRC to start (use &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt;)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CopyRawMarkedGroups(GeoEngine.Core.GXNetX.CMVIEW)">
            <summary>Copies all marked groups raw from one view into another</summary>
            <param name="oMVIEW1">Destination MVIEW</param>
            <remarks>The projections, and clipping is completly ignored.</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CopyMarkedGroups(GeoEngine.Core.GXNetX.CMVIEW)">
            <summary>Copies all marked groups from one view into another view</summary>
            <param name="oMVIEW1">Destination MVIEW</param>
            <remarks>
Projections in source and destination views are used to copy the
entities. Entities are clipped by the destination view's clipping
region.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.WriteGroupStorage(System.Int32,System.String,GeoEngine.Core.GXNetX.CBF)">
            <summary>Open generic existing storage associated with a group for reading.</summary>
            <param name="i1">Group number</param>
            <param name="str2">Storage name</param>
            <param name="oBF3">BF to read from</param>
            <remarks>External API users should not use storage names starting with "Geosoft"</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DeleteGroupStorage(System.Int32,System.String)">
            <summary>Deletes existing generic storage associated with a group.</summary>
            <param name="i1">Group number</param>
            <param name="str2">Storage name</param>
            <remarks>External API users should not use storage names starting with "Geosoft"</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ReadGroupStorage(System.Int32,System.String)">
            <summary>Reads existing generic storage associated with a group into an in-memory BF.</summary>
            <param name="i1">Group number</param>
            <param name="str2">Storage name</param>
            <remarks>External API users should not use storage names starting with "Geosoft"</remarks>
            <returns>BF Object</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iGroupStorageExists(System.Int32,System.String)">
            <summary>Determine if generic storage associated with a group exists.</summary>
            <param name="i1">Group number</param>
            <param name="str2">Storage name</param>
            <remarks>External API users should not use storage names starting with "Geosoft"</remarks>
            <returns>1 - storage exists, 0 - storage does not exist</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DeleteGroupTPAT(System.Int32)">
            <summary>Deletes existing TPAT associated with a group.</summary>
            <param name="i1">Group number</param>
            <remarks>
A group TPAT associate a thematic color map with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iGroupTPATExists(System.Int32)">
            <summary>Determine if group TPAT exists.</summary>
            <param name="i1">Group number</param>
            <remarks>
A group TPAT associate a thematic color map with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <returns>1 - TPAT exists, 0 - TPAT does not exist</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupTPAT(System.Int32)">
            <summary>Get group TPAT</summary>
            <param name="i1">Group number</param>
            <remarks>
A group TPAT associate a thematic color map with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupTPAT(System.Int32,GeoEngine.Core.GXNetX.CTPAT)">
            <summary>Set group TPAT</summary>
            <param name="i1">Group number</param>
            <param name="oTPAT2" />
            <remarks>
A group TPAT associate a thematic color map with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DeleteGroupITR(System.Int32)">
            <summary>Deletes existing ITR associated with a group.</summary>
            <param name="i1">Group number</param>
            <remarks>
A group ITR associate a color distribution with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iGroupITRExists(System.Int32)">
            <summary>Determine if group ITR exists.</summary>
            <param name="i1">Group number</param>
            <remarks>
A group ITR associate a color distribution with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <returns>1 - ITR exists, 0 - ITR does not exist</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupITR(System.Int32)">
            <summary>Get group ITR</summary>
            <param name="i1">Group number</param>
            <remarks>
A group ITR associate a color distribution with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupITR(System.Int32,GeoEngine.Core.GXNetX.CITR)">
            <summary>Set group ITR</summary>
            <param name="i1">Group number</param>
            <param name="oITR2" />
            <remarks>
A group ITR associate a color distribution with mixed vector groups (e.g. Drillhole Lithology tubes) groups. Used by legend UI support in 3D.
Note that modifying this information does not currently change the group contents and a group needs to be regenerated (e.g. with maker) 
to refresh the objects.
</remarks>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Group Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DrawVectors3D(System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CITR,System.Double,System.Double,System.Double)">
            <summary>Display vectors in the view.</summary>
            <param name="str1">View group name Maximum length is &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="oVV4">Z locations</param>
            <param name="oVV5">Vector X component</param>
            <param name="oVV6">Vector Y component</param>
            <param name="oVV7">Vector Z component</param>
            <param name="oITR8">Image transform - must contain zones</param>
            <param name="d9">
Scale factor for the longest vector in map units / vector units. Vector lengths for the rest of the vectors scale by the square root of the vector amplitudes.
This results in the apparent (viewed) area of the vector being proportional to the amplitude.
</param>
            <param name="d10">Ratio of the vector cone height to its base (default 4)</param>
            <param name="d11">Maximum base size in view units. Leave blank (dummy) for no limit. If applied this can make larger vectors skinnier, but does not reduce the length, so they don't obscure other vectors as much.</param>
            <available_version>8.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetVECTOR3D(System.Int32)">
            <summary>Get an existing VECTOR3D object from the view.</summary>
            <param name="i1">Group number</param>
            <remarks>This method returns a cached object owned by the MVIEW and will be destroyed automatically when the MVIEW is disposed</remarks>
            <returns>VECTOR3D object</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DrawVectorVoxelVectors(GeoEngine.Core.GXNetX.CVOX,System.String,GeoEngine.Core.GXNetX.CITR,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Display vectors from a vector voxel in the view.</summary>
            <param name="oVOX1" />
            <param name="str2">View group name Maximum length is &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;</param>
            <param name="oITR3">Image transform - must contain zones</param>
            <param name="d4">Vector length scale factor - w.r.t. the voxel minimum horizontal cell size (default 1)</param>
            <param name="d5">Ratio of the vector cone height to its base (default 4)</param>
            <param name="d6">Ratio of maximum base size to minimum horizontal cell size (default 0.25)</param>
            <param name="d7">Cutoff value - do not plot vectors with amplitudes less than this value (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; or 0 to plot all)</param>
            <param name="i8">Maximum number of vectors - decimate as required to reduce (&amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; to plot all)</param>
            <remarks>This will result in a VECTOR3D group object within the view</remarks>
            <available_version>7.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetVOXD(System.Int32)">
            <summary>Get an existing VOXD object from the view.</summary>
            <param name="i1">Group number</param>
            <remarks>This method returns a cached object owned by the MVIEW and will be destroyed automatically when the MVIEW is disposed</remarks>
            <returns>VOXD object</returns>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.VOXD(GeoEngine.Core.GXNetX.CVOXD,System.String)">
            <summary>Add a Voxel Display (VOXD) object to the view.</summary>
            <param name="oVOXD1" />
            <param name="str2">Name Maximum length is &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Meta(GeoEngine.Core.GXNetX.CMETA,System.String)">
            <summary>Store Metadata in a group</summary>
            <param name="oMETA1">META object</param>
            <param name="str2">Menu name of Object</param>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Maker(System.Int32,System.Int32,System.String,System.Int32,System.String,System.String)">
            <summary>Generates a Maker for the database and/or map.</summary>
            <param name="i1">Database required? (0 = No, 1 = Yes)</param>
            <param name="i2">Map required?      (0 = No, 1 = Yes)</param>
            <param name="str3">Program name</param>
            <param name="i4">&amp;lt;define&amp;gt;MAKER&amp;lt;/define&amp;gt;</param>
            <param name="str5">Maker name, used in menu prompt</param>
            <param name="str6">INI groups (terminate each with a ";")</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Link(GeoEngine.Core.GXNetX.CDB,System.String)">
            <summary>Make a link to a database.</summary>
            <param name="oDB1">Database handle</param>
            <param name="str2">Link name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ExternalStringObject(System.Double,System.Double,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>Add an external string data object to the view.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <param name="str5">Name of external object</param>
            <param name="str6">Class of external object</param>
            <param name="str7">String data of external object</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.EMFObject(System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Add an EMF file data object to the view.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <param name="str5">EMF File holding data</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.EasyMaker(System.String,System.String)">
            <summary>Used for GX makers which use both maps and databases.</summary>
            <param name="str1">Maker name, used in menu prompt</param>
            <param name="str2">INI groups (terminate each with a ";")</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetDATALINKD(System.Int32)">
            <summary>Get an existing Data Link Display (DATALINKD) object from the view.</summary>
            <param name="i1">Group number</param>
            <remarks>This method returns a cached object owned by the MVIEW and will be destroyed automatically when the MVIEW is disposed</remarks>
            <returns>DATALINKD object</returns>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DATALINKD(GeoEngine.Core.GXNetX.CDATALINKD,System.String)">
            <summary>Add a Data Link Display (DATALINKD) object to the view.</summary>
            <param name="oDATALINKD1" />
            <param name="str2">Name Maximum length is &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetColSymbol(System.Int32)">
            <summary>Get an existing colored symbol object from the view.</summary>
            <param name="i1">Group number</param>
            <remarks>This method returns a cached object owned by the MVIEW and will be destroyed automatically when the MVIEW is disposed</remarks>
            <returns>CSYMB object</returns>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ColSymbol(System.String,System.Int32)">
            <summary>Add a colored symbol object to a view.</summary>
            <param name="str1">Name of the color symbol group</param>
            <param name="i2">CSYMB object</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ChangeLineMessage(System.String)">
            <summary>Change the specified line in a view.</summary>
            <param name="str1">Change to this line</param>
            <remarks>
The line name can be created by calling LineLabel_DB using
&amp;lt;define&amp;gt;DB_LINE_LABEL_FORMAT_LINK&amp;lt;/define&amp;gt;. This insures that the label is
created is the same way as used in the database.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetAggregate(System.Int32)">
            <summary>Get an existing Aggregate object from the view.</summary>
            <param name="i1">Group number</param>
            <remarks>This method returns a cached object owned by the MVIEW and will be destroyed automatically when the MVIEW is disposed</remarks>
            <returns>AGG object</returns>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Aggregate(GeoEngine.Core.GXNetX.CAGG,System.String)">
            <summary>Add an aggregate to a view.</summary>
            <param name="oAGG1">Aggregate</param>
            <param name="str2">Aggregate name Maximum length is &amp;lt;define&amp;gt;MVIEW_NAME_LENGTH&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Text(System.String,System.Double,System.Double)">
            <summary>Draw text.</summary>
            <param name="str1">Text to plot</param>
            <param name="d2">X location of text</param>
            <param name="d3">Y location of text</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbolsITR(System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Plot symbols using an ITR</summary>
            <param name="str1">ITR file name (ZON or ITR)</param>
            <param name="oVV2">X</param>
            <param name="oVV3">Y</param>
            <param name="oVV4">Z</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Symbols(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Plot symbols</summary>
            <param name="oVV1">X</param>
            <param name="oVV2">Y</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Symbol(System.Double,System.Double)">
            <summary>Plot a symbol</summary>
            <param name="d1">X</param>
            <param name="d2">Y</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SizeSymbols(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Plot sized symbols</summary>
            <param name="oVV1">X</param>
            <param name="oVV2">Y</param>
            <param name="oVV3">Symbol sizes (in view units)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Segment(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a filled segment of an ellipse.</summary>
            <param name="d1">Center x</param>
            <param name="d2">Center y</param>
            <param name="d3">Radius</param>
            <param name="d4">Ratio x/y</param>
            <param name="d5">Angle</param>
            <param name="d6">Start angle</param>
            <param name="d7">End angle</param>
            <available_version>5.0.7</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Rectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a rectangle.</summary>
            <param name="d1">X0</param>
            <param name="d2">Y0</param>
            <param name="d3">X1</param>
            <param name="d4">Y1</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolyWrap(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw wrapped polylines from X and Y VV's.</summary>
            <param name="oVV1">X coordinates.</param>
            <param name="oVV2">Y coordinates.</param>
            <remarks>
Convert a given VVy into a wrapped VVy using
the current view window as the wrap region.
Then draw polylines from it.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolyLineDm(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw a polyline with gaps defined by dummies in X/Y VVs</summary>
            <param name="oVV1">X coordinates.</param>
            <param name="oVV2">Y coordinates.</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolyLine(System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw a polyline or polygon (dummies deleted).</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_DRAW&amp;lt;/define&amp;gt;</param>
            <param name="oVV2">X coordinates.</param>
            <param name="oVV3">Y coordinates.</param>
            <remarks>
Dummies in X and/or Y VV are deleted and it results
in 'solid' line. Using PolyLineDm_MVIEW (below) function
if gaps from dummies are to be kept.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolygonMPLY(GeoEngine.Core.GXNetX.CMPLY)">
            <summary>Draw multiple complex polygons from MPLY.</summary>
            <param name="oMPLY1" />
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolygonPLY(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Draw a complex polygon from PLY.</summary>
            <param name="oPLY1" />
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolygonDm(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Like PolyLineDm, but draw polygons.</summary>
            <param name="oVV1">X coordinates.</param>
            <param name="oVV2">Y coordinates.</param>
            <available_version>5.0.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LineVV(GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw line segments stored in a GS_D2LINE VV.</summary>
            <param name="oVV1">VV for GS_D2LINE</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Line(System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a line.</summary>
            <param name="d1">X0</param>
            <param name="d2">Y0</param>
            <param name="d3">X1</param>
            <param name="d4">Y1</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw an ellipse</summary>
            <param name="d1">Center x</param>
            <param name="d2">Center y</param>
            <param name="d3">Radius</param>
            <param name="d4">Ratio x/y</param>
            <param name="d5">Angle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ComplexPolygon(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw a polygon with holes in it.</summary>
            <param name="oVV1">VV of type int holding the number of points for each polygon</param>
            <param name="oVV2">X coordinates.</param>
            <param name="oVV3">Y coordinates.</param>
            <remarks>You pass a VV with polygon sizes and 2 point vvs.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClassifiedSymbols(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>Plot classified symbols</summary>
            <param name="oVV1">X VV</param>
            <param name="oVV2">Y VV</param>
            <param name="oVV3">Data VV</param>
            <param name="d4">Scale factor to convert mm to view units</param>
            <param name="d5">Classified minimum Z to plot</param>
            <param name="str6">Comma delimited list of Z maximums</param>
            <param name="str7">Comma delimited list of sizes in mm</param>
            <param name="str8">Comma delimited list of color strings</param>
            <remarks>
For example, to plot three levels &lt;95, 95-100 and
100-120, three string arguments would be:

"95,100,120"      maximums of each class
"2.0,2.5,3.0"     sizes in mm
"y,g,r"           fill colors
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Chord(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a filled arc.</summary>
            <param name="d1">Center x</param>
            <param name="d2">Center y</param>
            <param name="d3">Radius</param>
            <param name="d4">Ratio x/y</param>
            <param name="d5">Angle</param>
            <param name="d6">Start angle</param>
            <param name="d7">End angle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw an arc.</summary>
            <param name="d1">Center x</param>
            <param name="d2">Center y</param>
            <param name="d3">Radius</param>
            <param name="d4">Ratio x/y</param>
            <param name="d5">Angle</param>
            <param name="d6">Start angle</param>
            <param name="d7">End angle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ZValue(System.Double)">
            <summary>Sets Z-value info.</summary>
            <param name="d1">Z-Value</param>
            <remarks>
This number is stored in map mainly for exports to other vector formats (e.g ShapeFiles)
A contour map that's exported to a shape file will use this value as a Z-value attributes for its shapes.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Transparency(System.Double)">
            <summary>Sets the transparency for new objects.</summary>
            <param name="d1">Transparency (1.0 - Opaque, 0.0 - Transparent)</param>
            <remarks>
1.0 Renders completely opaque objects while 0.0 will be transparent.
Objects written after this will have a combined transparency value with the
group transparency if it is set (e.g. 0.5 for group and 0.8 stream will result in 0.4).
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.TextSize(System.Double)">
            <summary>Set the text size.</summary>
            <param name="d1">Size in view units</param>
            <remarks>
Because views may have differing X and Y scales this size can only make sense in one of these directions
otherwise text would appear warped on these kinds of views. The X direction was chosen to represent the
font size. For instance if the X scale is 1 unit/mm and my Y scale is 2 units/mm a font size of 3.0 view
units will result in un-rotated text that appears 6 view units or 3mm high in the Y direction.

Another important thing to keep in mind that this size represents what is known as the "ascent" height
of the font. The full height of the text may be higher if characters with accents or lower extension
(e.g. the lowercase y) appear in the text. For TrueType fonts the mapping system will do a best effort
positioning and sizing of the text using the alignment set and information about the font that it queries
from the operating system. For instance; if Arial text "Blog" is placed at (0,0) and the alignment
setting is Left-Bottom the left side of the B should be aligned at 0 in the X direction and the
bottom of all the letters except y will be at 0 in the Y direction. The lower part of the y will extend
below 0 in the Y (this is known as the "descent" height of the font at this size). The letters B and l
should be very close to the size set here (this may differ slightly for different fonts).
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.TextRef(System.Int32)">
            <summary>Set the text plot reference point.</summary>
            <param name="i1">&amp;lt;define&amp;gt;TEXT_REF&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.TextFont(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Set the text font.</summary>
            <param name="str1">Font face name</param>
            <param name="i2">Geosoft font? (TRUE or FALSE)</param>
            <param name="i3">&amp;lt;define&amp;gt;MVIEW_FONT_WEIGHT&amp;lt;/define&amp;gt;</param>
            <param name="i4">Italic font? (TRUE or FALSE)</param>
            <remarks>
Font characteristics can be defined using the function parameters,
or may be defined as decorations in the font name.  A decorated font
name has the following format:

font_name(type,weight,italics,charset)

where
type     - "TT" or "GFN"
weight   - last word from MVIEW_FONT_WEIGHT_ (ie. "LIGHT")
italics  - "ITALICS" for for italics
charset  - Before version 6.2. this decoration was honoured and it affected the display
of characters above ASCII 127. 6.2. introduced Unicode in the core
montaj engine that eliminated the need for such a setting. All strings
on the GX API level are encoded in &amp;lt;define&amp;gt;UTF8&amp;lt;/define&amp;gt; during runtime which makes it possible
to represent all possible characters without using character sets. This decoration
will now be ignored.

Qualifiers take precidence over passed parameters.
The order of qualifiers is not relevant.

examples:

"sr(GFN,ITALICS)"  - geosoft GFN font, normal weight, italics
"Arial(TT,XBOLD)"  - TrueType font, bold
"Times(TT,ITALICS,_EastEurope)"
- TrueType font, italics, Eastern Europe charcters

Decorated name qualifiers take precedence over passed parameters.

If the font cannot be found, or if "Default" is used, the DEFAULT_MAP_FONT
specified in the [MONTAJ] section of GEOSOFT.INI
will be used.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.TextColor(System.Int32)">
            <summary>Set the Text color.</summary>
            <param name="i1">Color</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.TextAngle(System.Double)">
            <summary>Set the text angle.</summary>
            <param name="d1">Angle in degrees CCW from +X</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbSize(System.Double)">
            <summary>Set the Symb size.</summary>
            <param name="d1">Size in view units</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbNumber(System.Int32)">
            <summary>Set the Symbol number.</summary>
            <param name="i1">Symbol number</param>
            <remarks>
The lower 16 bits of the number is interpreted as UTF-16 with a valid Unicode character
code point. GFN fonts wil produce valid symbols depending on the font for 0x01-0x7f and the degree,
plus-minus and diameter symbol(latin small letter o with stroke) for 0xB0, 0xB1 and 0xF8 respectively.

It is possible to check if a character is valid using iIsValidUTF16Char_UNC. The high 16-bits are reserved
for future use. Also see: iValidSymbol_UNC and ValidateSymbols_UNC.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbFont(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Set the symbol font and style.</summary>
            <param name="str1">Face name</param>
            <param name="i2">Geosoft font?</param>
            <param name="i3">&amp;lt;define&amp;gt;MVIEW_FONT_WEIGHT&amp;lt;/define&amp;gt;</param>
            <param name="i4">Italic font?</param>
            <remarks>
If the font cannot be found, the DEFAULT_SYMBOL_FONT
specified in the [MONTAJ] section of GEOSOFT.INI
will be used.

See TextFont_MVIEW for the font name syntax.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbFillColor(System.Int32)">
            <summary>Set the Symbol color fill.</summary>
            <param name="i1">Color</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbColor(System.Int32)">
            <summary>Set the Symbol color.</summary>
            <param name="i1">Color</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SymbAngle(System.Double)">
            <summary>Set the Symb angle.</summary>
            <param name="d1">Angle in degrees CCW from +X</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PatThick(System.Double)">
            <summary>Sets the pattern line thickness</summary>
            <param name="d1">Line thickness as fraction of pattern size (ie. 0.05)</param>
            <remarks>See the IMPORTANT note for sPatNumber_MVIEW().</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PatStyle(System.Int32)">
            <summary>Sets the tiling method (i.e. rectangle, triangle)</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_TILE&amp;lt;/define&amp;gt;</param>
            <remarks>
Normally, the unit cell is duplicated across the fill area
like floor tiles (&amp;lt;define&amp;gt;MVIEW_TILE_RECTANGULAR&amp;lt;/define&amp;gt;).
DIAGONAL tiling rotates the tiling positions (but not the tiles)
by 45 degrees.
TRIANGULAR tiling
Offsets each succeeding row by half the unit cell size, and
lessens the vertical offset, so that the unit cell centers
form a triangular grid pattern.
RANDOM tiling adds small random offsets in both directions to give
the diffuse effect seen on many geological maps.

NOTE: Some patterns are designed to be interlocking and may only
work "correctly" with one tiling method.

See the IMPORTANT note for sPatNumber_MVIEW().
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PatSize(System.Double)">
            <summary>Sets the pattern unit cell size (X)</summary>
            <param name="d1">Pattern size in view units</param>
            <remarks>See the IMPORTANT note for sPatNumber_MVIEW().</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PatNumber(System.Int32)">
            <summary>Sets the pattern number</summary>
            <param name="i1">Pattern number</param>
            <remarks>
Pattern 0 is solid fill.(default)
Set the pattern color using FillColor_MVIEW.

Patterns are selected by ordinal value (pattern number)
from those defined in default.pat.  If default.pat does
not have a the pattern specified, the file user.pat is
searched.  If this file does not contain the pattern
solid is assumed.

Note that patterns from default.pat and user.pat are
read into the map at the time the map is created, not
at display time.

IMPORTANT: A call to this function resets all the various
pattern attributes to those defined for the selected pattern.
If you want to modify any attributes, call that function (e.g.
sPatSize_MVIEW(), AFTER you call sPatNumber_MVIEW().
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PatDensity(System.Double)">
            <summary>Sets the tiling density.</summary>
            <param name="d1">Relative density (default = 1).</param>
            <remarks>
This number is the ratio between the plotted unit cell size and the
distance between the plotted tile centers. The default value is 1.
A value larger than 1 increases the density of the pattern, while
values less than 1 make the pattern more "spread out".
This can be used along with sPatStyleMethod to create more complicated
fills from simple patterns.

See the IMPORTANT note for sPatNumber_MVIEW().
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PatAngle(System.Double)">
            <summary>Sets the pattern angle</summary>
            <param name="d1">Angle</param>
            <remarks>
Allows the user to apply a rotation to the basic
pattern. Care should be taken to ensure that the
tiling remains continuous; i.e. if the pattern
consists of horizontal lines, only angles of
-90, 0, 90, 180 (etc.) would give seamless tiling.
However, simple, closed figure, such as a star,
could be given any angle.
Rotations about the center point (0.5, 0.5) of the
unit cell are performed prior to applying PatSize.
The default value is 0.0.
Setting an angle of -999 inititates the random angle
feature, and each pattern tile is rotated to a different
angle. Using this along with PatStyle(View, &amp;lt;define&amp;gt;MVIEW_TILE_RANDOM&amp;lt;/define&amp;gt;)
can give a "hand-drawn" effect to geological fills.

See the IMPORTANT note for sPatNumber_MVIEW().
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LineThick(System.Double)">
            <summary>Set the line thickness.</summary>
            <param name="d1">Line thickness in view space units</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LineStyle(System.Int32,System.Double)">
            <summary>Set the style of a line.</summary>
            <param name="i1">Line Style #, see default.lpt</param>
            <param name="d2">Pitch in view units</param>
            <remarks>
Line styles are selected by ordinal value (line style #)
from those defined in default.lpt.  If default.lpt does
not have a the style specified, the file user.lpt is
searched.  If this file does not contain the line style
solid is assumed.

Note that line styles from default.lpt and user.lpt are
read into the map at the time the map is created, not
at display time.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LineSmooth(System.Int32)">
            <summary>Set the line edge smoothing.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_SMOOTH&amp;lt;/define&amp;gt;</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.LineColor(System.Int32)">
            <summary>Set the line color.</summary>
            <param name="i1">Color</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.FillColor(System.Int32)">
            <summary>Set the fill color.</summary>
            <param name="i1">Color</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipMode(System.Int32)">
            <summary>Set the view clipping mode on or off.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_CLIP&amp;lt;/define&amp;gt;</param>
            <remarks>
Entitles that follow in this group will be clipped
or not clipped depending on this mode.

The montaj editor cannot change the clip mode of
embedded clipped/unclipped enties that are controlled
by this call.  Use the Group clipping functions
instead.

It is highly recommended that you use the GroupClipMode_MVIEW
function to control clipping on a group-by-group basis, instead
of using ClipMode_MVIEW when inside a group, as it is impossible
to determine the  true visible extents of a group. In such cases, the
"zoom to full map extents" command may give incorrect results.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Drawing Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iColorRGB(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Return RGB color.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Red</param>
            <param name="i2">Green</param>
            <param name="i3">Blue</param>
            <remarks>Color component intensities must be in the range 0-255.</remarks>
            <returns>Color int based on color model.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Color</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iColorHSV(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Return HSV color.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Hue</param>
            <param name="i2">Saturation</param>
            <param name="i3">Color</param>
            <remarks>Color component intensities must be in the range 0-255.</remarks>
            <returns>Color int based on color model.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Color</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iColorCMY(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32)">
            <summary>Return CMY color.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Cyan</param>
            <param name="i2">Magenta</param>
            <param name="i3">Yellow</param>
            <remarks>Color component intensities must be in the range 0-255.</remarks>
            <returns>Color int based on color model.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Color</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iColor(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Get a color from a color string label</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Color name string</param>
            <remarks>
Color strings may be "R","G","B","C","M","Y",
"H","S","V", or "K" or a combination of these
characters, each followed by up to three digits
specifying a number between 0 and 255.
An empty string produce C_ANY_NONE.

You must stay in the same color model, RGB, CMY,
HSV or K.

For example "R", "R127G22", "H255S127V32"

Characters are not case sensitive.
</remarks>
            <returns>Color int</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Color</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ColorDescr(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String@)">
            <summary>Convert a color to a color string label</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">COL_ANY variable</param>
            <param name="str2">Color descriptor returned</param>
            <remarks>See iColor_MVIEW.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Color</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Color2RGB(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Convert to RGB values.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Color value</param>
            <param name="i2">Red</param>
            <param name="i3">Green</param>
            <param name="i4">Blue</param>
            <remarks>Color component intensities will be in the range 0-255.</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Color</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupExtClipPLY(System.String,System.Int32)">
            <summary>Sets extended clip information for group in view.</summary>
            <param name="str1">Group Name</param>
            <param name="i2">Extended PLY number (-1 to clear)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetClipPLY(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Set clipping region to a PLY</summary>
            <param name="oPLY1">Poly</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iSetExtClipPLY(System.Int32,System.String,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Set an extended clip PLY object used by this view.</summary>
            <param name="i1">Extended ClipPLY number, If greater or equal to the return value of iNumExtClipPLY_MVIEW it will be added to the end of the current list</param>
            <param name="str2">Name (Has to be unique, otherwise error will be returned)</param>
            <param name="oPLY3">PLY object to set, use a null PLY to rename an existing object</param>
            <returns>Index of new or changed PLY, -1 on error</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iNumExtClipPLY">
            <summary>Get the number of extended clip PLY objects in this view.</summary>
            <returns>Number of PLYs</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGetNameExtClipPLY(System.Int32,System.String@)">
            <summary>Get the name of the extended clip PLY object in this view.</summary>
            <param name="i1">Extended ClipPLY number</param>
            <param name="str2">Name</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GroupClipMode(System.Int32)">
            <summary>Set the Clipping mode on or off for new groups.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_CLIP&amp;lt;/define&amp;gt;</param>
            <remarks>All new groups will be clipped.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetPLY(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Get clipping polygons, in the base projection</summary>
            <param name="oPLY1">Poly</param>
            <remarks>
This should be used to get the clipping polygon for
oriented views (especially sections).
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetGroupExtClipPLY(System.String,System.Int32@)">
            <summary>Gets extended clip information for group in view.</summary>
            <param name="str1">Group Name</param>
            <param name="i2">Extended PLY number (returned, -1 if not set)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetExtClipPLY(System.Int32,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Get an extended clip PLY object used by this view.</summary>
            <param name="i1">Extended ClipPLY number</param>
            <param name="oPLY2">PLY object to get</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetClipPLY(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Get clipping polygons, in the user projection</summary>
            <param name="oPLY1">Poly</param>
            <remarks>
The returned PLY is recast into the User projection.
For oriented views (especially sections), use
GetPLY_MVIEW, which returns the Clip PLY in the view's native
projection (e.g. the one set using SetIPJ_MVIEW).
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ExtClipPLYList(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the names of existing extended clip PLY objects in this view as list.</summary>
            <param name="oLST1" />
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DeleteExtClipPLY(System.Int32)">
            <summary>Deletes an extended clip PLY object used by this view.</summary>
            <param name="i1">Extended ClipPLY number</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipRect(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Add a rectangle to the clip region.</summary>
            <param name="d1">X minimum</param>
            <param name="d2">Y minimum</param>
            <param name="d3">X maximum</param>
            <param name="d4">Y maximum</param>
            <param name="i5">&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt;</param>
            <remarks>The rectangle will be added to the current clip region.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipPoly(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Add a polygon to the clip region.</summary>
            <param name="oVV1">X VV</param>
            <param name="oVV2">Y VV</param>
            <param name="i3">&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt;</param>
            <remarks>
The polygon will be added to the current clip region.
The VV's cannot have any dummy elements.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipMarkedGroups(System.Int32)">
            <summary>Set the Clipping mode on/off for marked groups.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_CLIP&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipGroups(System.Int32)">
            <summary>Set the Clipping mode on/off for all groups.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_CLIP&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipClear">
            <summary>Remove/clear the view clip region.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipRectEx(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Add a rectangle to the clip region.</summary>
            <param name="d1">X minimum</param>
            <param name="d2">Y minimum</param>
            <param name="d3">X maximum</param>
            <param name="d4">Y maximum</param>
            <param name="i5">&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt;</param>
            <param name="i6">Exclude</param>
            <remarks>The rectangle will be added to the current clip region.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ClipPolyEx(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Add a polygon to the clip region.</summary>
            <param name="oVV1">X VV</param>
            <param name="oVV2">Y VV</param>
            <param name="i3">&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt;</param>
            <param name="i4">Exclude</param>
            <remarks>
The polygon will be added to the current clip region.
The VV's cannot have any dummy elements.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Clipping</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DefineViewerPlane3D(System.Double,System.Double,System.Double)">
            <summary>Define a 2D drawing plane based on the user's view.</summary>
            <param name="d1">Center point X</param>
            <param name="d2">Center point Y</param>
            <param name="d3">Center point Z</param>
            <remarks>
The plane is always facing the viewer. Otherwise the
this is identical to the previous
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Rendering 2D</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DefineViewerAxis3D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
Define a 2D drawing plane based on the user's view that
oriented around the vector.
</summary>
            <param name="d1">Center point X</param>
            <param name="d2">Center point Y</param>
            <param name="d3">Center point Z</param>
            <param name="d4">Directional Point X</param>
            <param name="d5">Directional Point Y</param>
            <param name="d6">Directional Point Z</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Rendering 2D</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DefinePlane3D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Define a 2D drawing plane based on point and normal</summary>
            <param name="d1">Center point X</param>
            <param name="d2">Center point Y</param>
            <param name="d3">Center point Z</param>
            <param name="d4">X Vector X</param>
            <param name="d5">X Vector Y</param>
            <param name="d6">X Vector Z</param>
            <param name="d7">Y Vector X</param>
            <param name="d8">Y Vector Y</param>
            <param name="d9">Y Vector Z</param>
            <remarks>
2D rendering commands are translated to 3D commands
based on the plane.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Rendering 2D</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetPlaneSurfInfo(System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the surface information</summary>
            <param name="i1">Plane index</param>
            <param name="i2">Sample rate (&gt;=1)</param>
            <param name="d3">Base</param>
            <param name="d4">Scale</param>
            <param name="d5">Min</param>
            <param name="d6">Max</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetPlaneSurface(System.Int32,System.String)">
            <summary>Set the surface image of a plane</summary>
            <param name="i1">Plane index</param>
            <param name="str2">Optional surface image/grid name, can be NULL</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetPlaneEquation(System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the equation of a plane</summary>
            <param name="i1">Plane index</param>
            <param name="d2">Rotation about X (Z toward Y +ve, between -360 and 360)</param>
            <param name="d3">Rotation about Y (Z toward X +ve, between -360 and 360)</param>
            <param name="d4">Rotation about Z (Y toward X +ve, between -360 and 360)</param>
            <param name="d5">X offset of plane</param>
            <param name="d6">Y offset of plane</param>
            <param name="d7">Z offset of plane</param>
            <param name="d8">X scale</param>
            <param name="d9">Y scale</param>
            <param name="d10">Z scale</param>
            <remarks>
For a grid with the "Y" axis giving elevation:
use rotations = (-90, 0, 0) for a section with azimuth 90 (E-W)
use rotations = (-90, 0, -90) for a section with azimuth 0 (N-S)
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetPlaneClipPLY(System.Int32,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Set the Plane Clip Region</summary>
            <param name="i1">Plane index</param>
            <param name="oPLY2">Clip Region</param>
            <remarks>By default it is the View's Clip Region</remarks>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Set3DPointOfView(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set 3D point of view (no effect on 2D views)</summary>
            <param name="d1">X center</param>
            <param name="d2">Y center</param>
            <param name="d3">Z center</param>
            <param name="d4">Distance from center</param>
            <param name="d5">Declination, 0 to 360 CW from Y</param>
            <param name="d6">Inclination, -90 to +90</param>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Get3DPointOfView(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get 3D point of view (values are will be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if view for 2D views)</summary>
            <param name="d1">X center</param>
            <param name="d2">Y center</param>
            <param name="d3">Z center</param>
            <param name="d4">Distance from center</param>
            <param name="d5">Declination, 0 to 360 CW from Y</param>
            <param name="d6">Inclination, -90 to +90</param>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetH3DN(GeoEngine.Core.GXNetX.C3DN)">
            <summary>Set the 3DN object for this view</summary>
            <param name="o3DN1">3DN to set (NULL for 2D view)</param>
            <remarks>To make the view a 2D view, set a 3DN of NULL.</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetGroupToPlane(System.Int32,System.String)">
            <summary>Set a group to a plane</summary>
            <param name="i1">Plane Index to set all groups to</param>
            <param name="str2">Name of group to set</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetDefPlane(System.String)">
            <summary>Set the default drawing plane.</summary>
            <param name="str1">Name</param>
            <remarks>
2D drawing to a 3D View will always be placed on the
default drawing plane.  If no default drawing plane
has been set, the first valid plane in the view is
used as the default drawing plane.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetAllNewGroupsToPlane(System.Int32)">
            <summary>Set all groups that are not in any plane to this plane</summary>
            <param name="i1">Plane Index to set all groups to</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetAllGroupsToPlane(System.Int32)">
            <summary>Set all groups to be within one plane</summary>
            <param name="i1">Plane Index to set all groups to</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ListPlanes(GeoEngine.Core.GXNetX.CLST)">
            <summary>List all planes in a 3D view</summary>
            <param name="oLST1">List of plane names and numbers</param>
            <remarks>
The plane names are placed in the list names, plane
numbers are placed in the list values.

Planes are added to the end of the LST.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.ListPlaneGroups(System.Int32,GeoEngine.Core.GXNetX.CLST)">
            <summary>List all groups in a specific plane of a 3D view</summary>
            <param name="i1">Plane number</param>
            <param name="oLST2">List of plane names and numbers</param>
            <remarks>
The group names are placed in the list names, group
numbers are placed in the list values.

Groups are added to the end of the LST.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsSection">
            <summary>Is the view a section view?</summary>
            <remarks>
Section views are recognized because their projection contains one of the following orientations:

&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION&amp;lt;/define&amp;gt; - Target-type sections with Z projection horizontally
&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION_NORMAL&amp;lt;/define&amp;gt; - Like &amp;lt;define&amp;gt;IPJ_ORIENT_SECTION&amp;lt;/define&amp;gt;, but Z projects
perpendicular to the secton plane.
&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION_CROOKED&amp;lt;/define&amp;gt; - Crooked sections
&amp;lt;define&amp;gt;IPJ_ORIENT_3D&amp;lt;/define&amp;gt; - Some Sections extracted from a voxel - e.g. VoxelToGrids,
as the voxel can have any orientation in 3D.
</remarks>
            <returns>TRUE if view is a section view.</returns>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iIsView3D">
            <summary>Is the view 3D?</summary>
            <returns>TRUE if view is 3D</returns>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGetDefPlane(System.String@)">
            <summary>Get the default drawing plane.</summary>
            <param name="str1">Name</param>
            <remarks>
2D drawing to a 3D View will always be placed on the
default drawing plane.  If no default drawing plane
has been set, the first valid plane in the view is
used as the default drawing plane.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iFindPlane(System.String)">
            <summary>Find a plane in a view</summary>
            <param name="str1">Name of the plane</param>
            <returns>Plane number, -1 if not found</returns>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.iCreatePlane(System.String)">
            <summary>Create a 3D Plane for 2D Groups</summary>
            <param name="str1">Name of Plane</param>
            <returns>x - Index of plane</returns>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetViewPlaneEquation(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the View's Plane Equation</summary>
            <param name="d1">Angle in X</param>
            <param name="d2">Angle in Y</param>
            <param name="d3">Angle in Z</param>
            <param name="d4">Offset in X</param>
            <param name="d5">Offset in Y</param>
            <param name="d6">Offset in Z</param>
            <param name="d7">Scale in X</param>
            <param name="d8">Scale in Y</param>
            <param name="d9">Scale in Z</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetPlaneEquation(System.Int32,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the equation of a plane</summary>
            <param name="i1">Plane index</param>
            <param name="d2">Rotation about X (Y toward Z +ve, between -360 and 360)</param>
            <param name="d3">Rotation about Y (Z toward X +ve, between -360 and 360)</param>
            <param name="d4">Rotation about Z (Y toward X +ve, between -360 and 360)</param>
            <param name="d5">X offset of plane</param>
            <param name="d6">Y offset of plane</param>
            <param name="d7">Z offset of plane</param>
            <param name="d8">X scale</param>
            <param name="d9">Y scale</param>
            <param name="d10">Z scale</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetPlaneClipPLY(System.Int32,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Get the Plane Clip Region</summary>
            <param name="i1">Plane index</param>
            <param name="oPLY2">Clip Region</param>
            <remarks>By default it is the View's Clip Region</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DeletePlane(System.Int32,System.Int32)">
            <summary>Delete a plane in a view</summary>
            <param name="i1">Plane number to delete</param>
            <param name="i2">TRUE to delete all groups on the plane</param>
            <remarks>
If the groups on the plane are not deleted, they will remain in the
3D view as "New" groups but will be unassigned to a plane.  The
SetAllNewGroupsToPlane  function can be used to assign these groups
to a different plane.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Plane</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.UpdateMETAfromGroup(System.String,GeoEngine.Core.GXNetX.CMETA)">
            <summary>Fill the META with group dataset information</summary>
            <param name="str1">Group Name</param>
            <param name="oMETA2">META object to fill</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Sphere3D(System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a 3D sphere</summary>
            <param name="d1">Center X</param>
            <param name="d2">Center Y</param>
            <param name="d3">Center Z</param>
            <param name="d4">Radius</param>
            <remarks>The Fill color is used to color the sphere.</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.SetMeta(System.String,GeoEngine.Core.GXNetX.CMETA,System.String)">
            <summary>Update the META in this group with the new meta object.</summary>
            <param name="str1">Group Name</param>
            <param name="oMETA2">META object</param>
            <param name="str3">Meta name of Object</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.RelocateGroup(System.String,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Re-locate a group in a view.</summary>
            <param name="str1">Group name</param>
            <param name="d2">Area X minimum</param>
            <param name="d3">Area Y minimum</param>
            <param name="d4">Area X maximum</param>
            <param name="d5">Area Y maximum</param>
            <param name="i6">&amp;lt;define&amp;gt;MVIEW_RELOCATE&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.PolyLine3D(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw a 3D polyline.</summary>
            <param name="oVV1">X coordinates.</param>
            <param name="oVV2">Y coordinates.</param>
            <param name="oVV3">Z coordinates.</param>
            <remarks>
Dummies are not allowed in the line.
Line Color, Thickness is supported on rendering
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Point3D(System.Double,System.Double,System.Double)">
            <summary>Draw a 3D point.</summary>
            <param name="d1">X</param>
            <param name="d2">Y</param>
            <param name="d3">Z</param>
            <remarks>The Line color and line thickness will affect rendering.</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.MeasureText(System.String,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Compute the bounding rectangle in view units of the text using the current attributes.</summary>
            <param name="str1">Text string</param>
            <param name="d2">X minimum</param>
            <param name="d3">Y minimum</param>
            <param name="d4">X maximum</param>
            <param name="d5">Y maximum</param>
            <remarks>
Area will be 0 if error occurred (does not fail).
This will return the bounding rectangle as if the text was placed at 0,0 and adjusted according to
the current text alignment and angle set for the view. Also see notes for TextSize_MVIEW.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.IGetMeta(System.String,System.String@)">
            <summary>Retrieves Metadata from a group</summary>
            <param name="str1">Group Name</param>
            <param name="str2">Meta name</param>
            <returns>META Object</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.GetAGGFileNames(System.String,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get the names of grid files stored in an AGG.</summary>
            <param name="str1">Group name</param>
            <param name="oVV2">Returned string VV of type -&amp;lt;define&amp;gt;STR_FILE&amp;lt;/define&amp;gt;</param>
            <remarks>
The group must be an AGG group. Check this using
iIsGroup_MVIEW and &amp;lt;define&amp;gt;MVIEW_IS_AGG&amp;lt;/define&amp;gt;.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.FontWeightLST(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST)">
            <summary>Fill a LST with the different font weights.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLST1">LST object</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DrawSurface3DFromFile(System.String,System.String)">
            <summary>Draw a 3D object from a surface file</summary>
            <param name="str1">Group name</param>
            <param name="str2">Surface file</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DrawSurface3DEx(System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Draw a 3D object built from triangles</summary>
            <param name="str1">Group name</param>
            <param name="oVV2">Vertices X (&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;)</param>
            <param name="oVV3">Vertices Y (&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;)</param>
            <param name="oVV4">Vertices Z (&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;)</param>
            <param name="oVV5">Normals X (&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;)</param>
            <param name="oVV6">Normals Y (&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;)</param>
            <param name="oVV7">Normals Z (&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;)</param>
            <param name="oVV8">Colors VV (&amp;lt;define&amp;gt;GS_INT&amp;lt;/define&amp;gt;) [can be NULL]</param>
            <param name="i9">Color used if above VV is NULL [0 for MVIEW's fill color]</param>
            <param name="oVV10">Triangles Point 1 (&amp;lt;define&amp;gt;GS_INT&amp;lt;/define&amp;gt;)</param>
            <param name="oVV11">Triangles Point 2 (&amp;lt;define&amp;gt;GS_INT&amp;lt;/define&amp;gt;)</param>
            <param name="oVV12">Triangles Point 3 (&amp;lt;define&amp;gt;GS_INT&amp;lt;/define&amp;gt;)</param>
            <param name="oIPJ13">Native IPJ of 3D object</param>
            <remarks>
Provide one normal per vertex.
Triangles are defined by indices into the set of vertices.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.DrawObject3D(System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Draw a 3D object optimized for rendering</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_DRAWOBJ3D_ENTITY&amp;lt;/define&amp;gt;</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_DRAWOBJ3D_MODE&amp;lt;/define&amp;gt;</param>
            <param name="i3">Number of Objects</param>
            <param name="i4">Default Count (if variable and not specified)</param>
            <param name="oVV5">Verticies X</param>
            <param name="oVV6">Verticies Y</param>
            <param name="oVV7">Verticies Z</param>
            <param name="oVV8">Normals X (can be NULL)</param>
            <param name="oVV9">Normals Y (can be NULL)</param>
            <param name="oVV10">Normals Z (can be NULL)</param>
            <param name="oVV11">Colors VV (can be NULL)</param>
            <param name="oVV12">Index  VV (can be NULL)</param>
            <param name="oVV13">Count  VV (can be NULL)</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Cylinder3D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Draw a 3D cylinder</summary>
            <param name="d1">Start X</param>
            <param name="d2">Start Y</param>
            <param name="d3">Start Z</param>
            <param name="d4">End X</param>
            <param name="d5">End Y</param>
            <param name="d6">End Z</param>
            <param name="d7">Start Radius (can be zero)</param>
            <param name="d8">End Radius (can be zero)</param>
            <param name="i9">&amp;lt;define&amp;gt;MVIEW_CYLINDER3D&amp;lt;/define&amp;gt;</param>
            <remarks>
The Fill color is used to color the cylinder.
The flags determine if the cylinder is open and what
end are closed. Note that you can create cones by
specifying a 0 radius for one of the ends.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CRCViewGroup(System.String,System.Int32@,System.String)">
            <summary>Generate an XML CRC of a Group</summary>
            <param name="str1">Name of Group</param>
            <param name="i2">CRC returned</param>
            <param name="str3">Name of xml to generate (.zip added)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.CRCView(System.Int32@,System.String)">
            <summary>Generate an XML CRC of a View</summary>
            <param name="i1">CRC returned</param>
            <param name="str2">Name of xml to generate (.zip added)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMVIEW.Box3D(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Draw a 3D box</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Min Z</param>
            <param name="d4">Max X</param>
            <param name="d5">Max Y</param>
            <param name="d6">Max Z</param>
            <remarks>The Fill color is used to color the box.</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D Entity</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMVIEW">
            <summary>

       A view (MVIEW class) has a 2-D/3-D translation matrix, a map
       projection and a clip region.  A view contains any number of
       "groups", and each "group" contains one or more graphics
       elements (entities).  Different types of groups will contain
       different types of entities:
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateSubsetFromRealExtents(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Create a new MULTIGRID3D that is a subset of the non-dummy extents.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name of the MULTIGRID3D that will be subset</param>
            <param name="str2">File Name of the MULTIGRID3D that will be created</param>
            <remarks>Creates a MULTIGRID3D object that is a subset with all dummy data regions removed.</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateSubset(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Create a new MULTIGRID3D that is a subset of an exisiting MULTIGRID3D.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name of the MULTIGRID3D that will be subset</param>
            <param name="str2">File Name of the MULTIGRID3D that will be created</param>
            <param name="i3">Starting location in X.</param>
            <param name="i4">Starting location in Y.</param>
            <param name="i5">Starting location in Z.</param>
            <param name="i6">Number of items to copy in X.</param>
            <param name="i7">Number of items to copy in Y.</param>
            <param name="i8">Number of items to copy in Z.</param>
            <remarks>Creates a MULTIGRID3D object that is a subset .</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.KrigFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Int32,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CREG)">
            <summary>A more compact and extensible form of LogGridPointsZExFromGDB_MULTIGRID3DUTIL.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="d2">Cell size (DUMMY for default)</param>
            <param name="i3">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oDB4">Database</param>
            <param name="i5">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i6">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i7">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i8">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="oIPJ9" />
            <param name="oREG10" />
            <remarks>
Optional Parameters.

If these values are not set in the REG, then default parameters will be used.

ERROR_VOXEL:		Output error grid3d filename ("" for none)
CELLSIZEZ:      Z Cell size string (space delimited, "" for default)
RADIUS_MIN:		Minimum Search Radius (REAL) (Default = 4) (Blanking Distance)
RADIUS_MAX:		Maximum Search Radius (REAL) (Default = 16)
SEARCH_MIN:		Minimum Search Points (INT) (Default = 16)
SEARCH_MAX:		Maximum Search Points (INT) (Default = 32)
VARIOGRAM_ONLY: Set to 1 to calculate the variogram only (INT) (Default = 0)
MODEL:				Variogram Model number 1-power, 2-sperical, 3-gaussian, 4-exponential  (INT) (Default = 2)
POWER:          Power (Default = DUMMY)
SLOPE:          Slope (REAL) (if input is DUMMY, value calculated and set on return)
RANGE:          Range (REAL) (if input is DUMMY, value calculated and set on return)
SILL :          Sill (REAL) (if input is DUMMY, value calculated and set on return)
STRIKE:				Strike (REAL) (Default = 0)
DIP:					Dip (REAL)	(Default = 90)
PLUNGE:				Plunge (REAL) (Default = 0)
STRIKE WEIGHT:	Along-Strike Weight (REAL) (Default = 1)
DIP_WEIGHT:      Down-Dip Weight (REAL) (Default = 1)
LOG_OPT:			One of &amp;lt;define&amp;gt;VOX_GRID_LOGOPT&amp;lt;/define&amp;gt; (Default = 0)
MIN_LOG:			Log Minimum (REAL)	(Default = 1)
MIN_X:				Minimum X (REAL) (default = DUMMY to determine from the data. If input, nearest lt. or eq. multiple of cell size chosen)
MAX_X:				Maximum X (REAL) (default = DUMMY to determine from the data. If input, nearest gt. or eq. multiple of cell size chosen)
MIN_Y:				Minimum Y (REAL) (default = DUMMY to determine from the data. If input, nearest lt. or eq. external multiple of cell size chosen)
MAX_Y:				Maximum Y (REAL) (default = DUMMY to determine from the data. If input, nearest gt. or eq. multiple of cell size chosen)
MIN_Z:				Minimum Z (REAL) (default = DUMMY to determine from the data. If input, nearest lt. or eq. multiple of cell size chosen)
MAX_Z:				Maximum Z (REAL) (default = DUMMY to determine from the data. If input, nearest gt. or eq. multiple of cell size chosen)A more compact and extensible form of LogGridPointsZEx_VOX. Only the most
basic parameters are entered directly. Optional parameters are passed via a REG object.
</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.LogGridPointsZExFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.String,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double@,System.Double@,System.Double,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Int32,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Log grid a grid3d from a database (using variable Z's)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="str2">Output error grid3d filename</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="str4">Cell size in Z ("" for default)</param>
            <param name="i5">Variogram Only</param>
            <param name="d6">Minimum Search Radius (DUMMY for none)</param>
            <param name="d7">Maximum Search Radius (DUMMY for none)</param>
            <param name="i8">Minimum Search Points</param>
            <param name="i9">Maximum Search Points</param>
            <param name="i10">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d11">Power</param>
            <param name="d12">Slope</param>
            <param name="d13">Range</param>
            <param name="d14">Nugget</param>
            <param name="d15">Sill</param>
            <param name="d16">Strike</param>
            <param name="d17">Dip</param>
            <param name="d18">Plunge</param>
            <param name="d19">Strike Weight</param>
            <param name="d20">Dip Plane Weight</param>
            <param name="i21">&amp;lt;define&amp;gt;VOX_GRID_LOGOPT&amp;lt;/define&amp;gt; Log Option</param>
            <param name="d22">Minimum log</param>
            <param name="i23">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oDB24">Database</param>
            <param name="i25">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i26">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i27">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i28">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="oIPJ29" />
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GridPointsZExFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.String,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double@,System.Double@,System.Double,System.Double@,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a grid3d from a database (using variable Z's)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="str2">Output error grid3d filename</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="str4">Cell size in Z ("" for default)</param>
            <param name="i5">Variogram Only</param>
            <param name="d6">Minimum Search Radius (DUMMY for none)</param>
            <param name="d7">Maximum Search Radius (DUMMY for none)</param>
            <param name="i8">Minimum Search Points</param>
            <param name="i9">Maximum Search Points</param>
            <param name="i10">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d11">Power</param>
            <param name="d12">Slope</param>
            <param name="d13">Range</param>
            <param name="d14">Nugget</param>
            <param name="d15">Sill</param>
            <param name="d16">Strike</param>
            <param name="d17">Dip</param>
            <param name="d18">Plunge</param>
            <param name="d19">Strike Weight</param>
            <param name="d20">Dip Plane Weight</param>
            <param name="i21">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oDB22">Database</param>
            <param name="i23">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i24">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i25">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i26">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="oIPJ27" />
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GridPointsZFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.String,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a grid3d from a database (using variable Z's)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="str2">Output error grid3d filename</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="str4">Cell size in Z ("" for default)</param>
            <param name="i5">Variogram Only</param>
            <param name="d6">Minimum Search Radius (DUMMY for none)</param>
            <param name="d7">Maximum Search Radius (DUMMY for none)</param>
            <param name="i8">Minimum Search Points</param>
            <param name="i9">Maximum Search Points</param>
            <param name="i10">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d11">Power</param>
            <param name="d12">Slope</param>
            <param name="d13">Range</param>
            <param name="d14">Nugget</param>
            <param name="d15">Sill</param>
            <param name="i16">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oDB17">Database</param>
            <param name="i18">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i19">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i20">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i21">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="oIPJ22" />
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GridPointsFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.Int32,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Grid a grid3d from a database using kriging.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="str2">Output error grid3d filename</param>
            <param name="d3">Cell size (DUMMY for default)</param>
            <param name="i4">Variogram Only</param>
            <param name="d5">Minimum Search Radius (DUMMY for none)</param>
            <param name="d6">Maximum Search Radius (DUMMY for none)</param>
            <param name="i7">Minimum Search Points</param>
            <param name="i8">Maximum Search Points</param>
            <param name="i9">Model number 1-power, 2-sperical, 3-gaussian, 4-exponential</param>
            <param name="d10">Power</param>
            <param name="d11">Slope</param>
            <param name="d12">Range</param>
            <param name="d13">Nugget</param>
            <param name="d14">Sill</param>
            <param name="i15">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oDB16">Database</param>
            <param name="i17">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i18">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i19">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i20">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="oIPJ21" />
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GetDataGroundExtents(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the voxel size in ground units that has non-dummy data.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">input filename</param>
            <param name="d2">Ground location of minimum valid data in X.</param>
            <param name="d3">Ground location of minimum valid data in Y.</param>
            <param name="d4">Ground location of minimum valid data in Z.</param>
            <param name="d5">Ground location of maximum valid data in X.</param>
            <param name="d6">Ground location of maximum valid data in Y.</param>
            <param name="d7">Ground location of maximum valid data in Z.</param>
            <remarks>
Find the non-dummy volume of a MULTIGRID3D object. If the voxel is all dummies,
returns &amp;lt;define&amp;gt;iMAX&amp;lt;/define&amp;gt; for the minima, and &amp;lt;define&amp;gt;iMIN&amp;lt;/define&amp;gt; for the maxima.
</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GetDataExtents(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Get the voxel size that has non-dummy data.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">input filename</param>
            <param name="i2">Index of minimum valid data in X.</param>
            <param name="i3">Index of minimum valid data in Y.</param>
            <param name="i4">Index of minimum valid data in Z.</param>
            <param name="i5">Index of maximum valid data in X.</param>
            <param name="i6">Index of maximum valid data in Y.</param>
            <param name="i7">Index of maximum valid data in Z.</param>
            <remarks>
Find the non-dummy volume of a MULTIGRID3D object. If the voxel is all dummies,
returns &amp;lt;define&amp;gt;iMAX&amp;lt;/define&amp;gt; for the minima, and &amp;lt;define&amp;gt;iMIN&amp;lt;/define&amp;gt; for the maxima.
</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GridIDWFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Double,System.Int32)">
            <summary>Create a grid3d using IDW gridding.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="d2">Voxel origin X</param>
            <param name="d3">Voxel origin Y</param>
            <param name="d4">Voxel origin Z</param>
            <param name="i5">Voxel cell count X</param>
            <param name="i6">Voxel cell count Y</param>
            <param name="i7">Voxel cell count Z</param>
            <param name="d8">Voxel cell size X</param>
            <param name="d9">Voxel cell size Y</param>
            <param name="d10">Voxel cell size Z</param>
            <param name="oDB11">Database</param>
            <param name="i12">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i13">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i14">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i15">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="d16">Weight Power (default 2)</param>
            <param name="d17">Weight Slope (default 1)</param>
            <param name="d18">Distance weighting limit (default = 4 * CUBE_ROOT(DX*DY*DZ))</param>
            <param name="d19">Dummy values farther from data than this distance. (default = 4 * CUBE_ROOT(DX*DY*DZ))</param>
            <param name="i20">Apply log transform to input data before gridding (0:No (default), 1:Yes)</param>
            <param name="d21">One of &amp;lt;define&amp;gt;VV_LOG_BASE_10&amp;lt;/define&amp;gt; (default) or :const:`VV_LOG_BASE_E</param>
            <param name="i22">One of &amp;lt;define&amp;gt;VV_LOG_NEGATIVE_NO&amp;lt;/define&amp;gt; (default) or &amp;lt;define&amp;gt;VV_LOG_NEGATIVE_YES&amp;lt;/define&amp;gt;</param>
            <remarks>
The Z and Data channels may be array channels. If they are, the array sizes must match.
                 3D cells take on the averaged values within a search radius, weighted inversely by distance.

              Weighting can be controlled using the power and slope properties;

              weighting = 1 / (distance^wtpower + 1/slope) where distance is in
              units of grid cells (X dimenstion). Default is 0.0,

              If the blanking distance is set, all cells whose center point is not within the blanking distance of
              at least one data point are set to dummy.
</remarks>
            <available_version>9.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GridDirectFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Create a grid3d using direct gridding.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Output grid3d filename</param>
            <param name="d2">Voxel origin X</param>
            <param name="d3">Voxel origin Y</param>
            <param name="d4">Voxel origin Z</param>
            <param name="i5">Voxel cell count X</param>
            <param name="i6">Voxel cell count Y</param>
            <param name="i7">Voxel cell count Z</param>
            <param name="d8">Voxel cell size X</param>
            <param name="d9">Voxel cell size Y</param>
            <param name="d10">Voxel cell size Z</param>
            <param name="i11">&amp;lt;define&amp;gt;MULTIGRID3D_DIRECTGRID_METHOD&amp;lt;/define&amp;gt;</param>
            <param name="oDB12">Database</param>
            <param name="i13">X channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i14">Y channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i15">Z channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <param name="i16">Data channel [&amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;]</param>
            <remarks>The Z and Data channels may be array channels. If they are, the array sizes must match.</remarks>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GenerateRBF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB,System.String,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Creates a VOXEL from an database using RBF.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Handle to a database</param>
            <param name="str2">Name of the output grid3d</param>
            <param name="str3">Channel to grid`</param>
            <param name="d4">Cell size</param>
            <param name="d5">Error Tolerance</param>
            <param name="i6">Maximum number of iterations (&gt;0)</param>
            <param name="i7">Desample data (1) or use as is (0)</param>
            <param name="i8">&amp;lt;define&amp;gt;RBFKERNEL&amp;lt;/define&amp;gt;</param>
            <param name="d9">Kernel Epsilon</param>
            <available_version>9.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ClipToPolygon(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CPLY,System.Int32)">
            <summary>Invert the Z values in the Grid3d.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the input grid3d</param>
            <param name="str2">Name of the output grid3d</param>
            <param name="oPLY3">Polygons to clip to</param>
            <param name="i4">Clip Dummies (1) or leave them (0)</param>
            <available_version>9.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExtractDEM(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Extract a DEM grid from a voxel.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the input grid3d</param>
            <param name="str2">Name of the output grid</param>
            <available_version>9.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.InvertZ(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Invert the Z values in the Grid3d.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the input grid3d</param>
            <param name="str2">Name of the output grid3d</param>
            <available_version>9.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.Filter(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
            <summary>Apply a 3D filter to a grid3d.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the input grid3d</param>
            <param name="str2">Name of the output grid3d</param>
            <param name="i3">&amp;lt;define&amp;gt;FILTER3D&amp;lt;/define&amp;gt;</param>
            <param name="str4">Filter file, if filter is &amp;lt;define&amp;gt;VOX_FILTER3D_FILE&amp;lt;/define&amp;gt;</param>
            <param name="i5">Number of filter passes</param>
            <param name="i6">(1: interpolate dummies)</param>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.rComputeDefaultCellSize(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Used if the user does not provide a default cell size.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">MinX</param>
            <param name="d2">MaxX</param>
            <param name="d3">MinY</param>
            <param name="d4">MaxY</param>
            <param name="d5">MinZ</param>
            <param name="d6">MaxZ</param>
            <remarks>Compute a default cell size for a grid3d given a data range.</remarks>
            <returns>Default Cell Size</returns>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromDATAMINE(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,System.String)">
            <summary>Create a Geosoft Voxel file from a Datamine block model file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Datamine file name</param>
            <param name="str2">Field to use for data</param>
            <param name="oIPJ3">Projection to set</param>
            <param name="str4">Output grid3d file name</param>
            <remarks>Create a Geosoft Voxel file from a Datamine block model file.</remarks>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromVoxel(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String@)">
            <summary>Import a Voxel directly into a Multi-Voxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Project file</param>
            <param name="str2">Input Voxel file</param>
            <param name="str3">Multi-Voxset attribute</param>
            <param name="str4">UUID string returned</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToVoxel(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String)">
            <summary>Exports a Multi-Voxset into a Voxel</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Project file</param>
            <param name="str2">Multi-Voxset UUID</param>
            <param name="str3">Multi-Voxset attribute</param>
            <param name="str4">Output Voxel file</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateVectorConstantVV(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a double MultiVoxset with a constant value and non-uniform cell sizes</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel</param>
            <param name="d2">The X contant Value to fill with - DUMMY for a trully sparse grid3d</param>
            <param name="d3">The Y contant Value to fill with - DUMMY for a trully sparse grid3d</param>
            <param name="d4">The Z contant Value to fill with - DUMMY for a trully sparse grid3d</param>
            <param name="d5">Origin X</param>
            <param name="d6">Origin Y</param>
            <param name="d7">Origin Z</param>
            <param name="oVV8">Cell Sizes X</param>
            <param name="oVV9">Cell Sizes Y</param>
            <param name="oVV10">Cell Sizes Z</param>
            <param name="oIPJ11">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateThematicConstantVV(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a double MultiVoxset with a constant value and non-uniform cell sizes</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel</param>
            <param name="i2">The contant Value to fill with - DUMMY for a trully sparse grid3d</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Origin Z</param>
            <param name="oVV6">Cell Sizes X</param>
            <param name="oVV7">Cell Sizes Y</param>
            <param name="oVV8">Cell Sizes Z</param>
            <param name="oIPJ9">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateDoubleConstantVV(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a double MultiVoxset with a constant value and non-uniform cell sizes</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel</param>
            <param name="d2">The contant Value to fill with - DUMMY for a trully sparse grid3d</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Origin Z</param>
            <param name="oVV6">Cell Sizes X</param>
            <param name="oVV7">Cell Sizes Y</param>
            <param name="oVV8">Cell Sizes Z</param>
            <param name="oIPJ9">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateVectorConstant(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a double MultiVoxset with a constant value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel File</param>
            <param name="d2">X Constant Value to use - DUMMY for a trully sparse grid3d</param>
            <param name="d3">Y Constant Value to use - DUMMY for a trully sparse grid3d</param>
            <param name="d4">Z Constant Value to use - DUMMY for a trully sparse grid3d</param>
            <param name="d5">Origin X</param>
            <param name="d6">Origin Y</param>
            <param name="d7">Origin Z</param>
            <param name="d8">Cell Size X</param>
            <param name="d9">Cell Size Y</param>
            <param name="d10">Cell Size Z</param>
            <param name="i11">Cell Count X</param>
            <param name="i12">Cell Count Y</param>
            <param name="i13">Cell Count Z</param>
            <param name="oIPJ14">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateThematicConstant(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a double MultiVoxset with a constant value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel File</param>
            <param name="i2">Constant Value to use - DUMMY for a trully sparse grid3d</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Origin Z</param>
            <param name="d6">Cell Size X</param>
            <param name="d7">Cell Size Y</param>
            <param name="d8">Cell Size Z</param>
            <param name="i9">Cell Count X</param>
            <param name="i10">Cell Count Y</param>
            <param name="i11">Cell Count Z</param>
            <param name="oIPJ12">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateDoubleConstantCopy(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.String)">
            <summary>Generate a double MultiVoxset with a constant value based on an input voxel</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel File</param>
            <param name="d2">Constant Value to use - DUMMY for a trully sparse grid3d</param>
            <param name="str3">Name of voxel to model</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CreateDoubleConstant(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Generate a double MultiVoxset with a constant value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel File</param>
            <param name="d2">Constant Value to use - DUMMY for a trully sparse grid3d</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Origin Z</param>
            <param name="d6">Cell Size X</param>
            <param name="d7">Cell Size Y</param>
            <param name="d8">Cell Size Z</param>
            <param name="i9">Cell Count X</param>
            <param name="i10">Cell Count Y</param>
            <param name="i11">Cell Count Z</param>
            <param name="oIPJ12">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.GetGOCADLocation(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the location of a grid3d with origin and scaled xyz vectors for use with GOCAD.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid3d filename</param>
            <param name="d2">Origin X</param>
            <param name="d3">Origin Y</param>
            <param name="d4">Origin Z</param>
            <param name="d5">VectX X</param>
            <param name="d6">VectX Y</param>
            <param name="d7">VectX Z</param>
            <param name="d8">VectY X</param>
            <param name="d9">VectY Y</param>
            <param name="d10">VectY Z</param>
            <param name="d11">VectZ X</param>
            <param name="d12">VectZ Y</param>
            <param name="d13">VectZ Z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertDensityToVelocity(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Convert Density MultiVoxset to Velocity MultiVoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid3d filename</param>
            <param name="d2">1.0, if this grid3d is in meters per second. Otherwise, a value by which each input cell is multiplied to convert it into meters per second.</param>
            <param name="d3">Lower bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is less than this value, the output cell value will be DUMMY.</param>
            <param name="d4">Upper bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is greater than this value, the output cell value will be DUMMY.</param>
            <param name="d5">Coefficient of fifth-order polynomial term.</param>
            <param name="d6">Coefficient of fourth-order polynomial term.</param>
            <param name="d7">Coefficient of third-order polynomial term.</param>
            <param name="d8">Coefficient of second-order polynomial term.</param>
            <param name="d9">Coefficient of first-order polynomial term.</param>
            <param name="d10">Constant offset of output.</param>
            <param name="d11">1.0, to produce an output grid3d that has units of g/cm^3. If different units are desired, pass in a different value, which will be multiplied into each output grid3d cell.</param>
            <param name="str12">Output grid3d filename</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertVelocityToDensity(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.String)">
            <summary>Convert Velocity MultiVoxset to Density MultiVoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid3d filename</param>
            <param name="d2">1.0, if this grid3d is in meters per second. Otherwise, a value by which each input cell is multiplied to convert it into meters per second.</param>
            <param name="d3">Lower bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is less than this value, the output cell value will be DUMMY.</param>
            <param name="d4">Upper bound on velocity values, in meters per second. If the input value (after being pre-multiplied by dInputScalingFactor) is greater than this value, the output cell value will be DUMMY.</param>
            <param name="d5">Coefficient of fifth-order polynomial term.</param>
            <param name="d6">Coefficient of fourth-order polynomial term.</param>
            <param name="d7">Coefficient of third-order polynomial term.</param>
            <param name="d8">Coefficient of second-order polynomial term.</param>
            <param name="d9">Coefficient of first-order polynomial term.</param>
            <param name="d10">Constant offset of output.</param>
            <param name="d11">1.0, to produce an output grid3d that has units of g/cm^3. If different units are desired, pass in a different value, which will be multiplied into each output grid3d cell.</param>
            <param name="str12">Output grid3d filename</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertDoubleToThematic(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CTPAT,System.String)">
            <summary>Convert Double MultiVoxset to Thematic MultiVoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid3d filename</param>
            <param name="oVV2">Translation VV handle</param>
            <param name="oTPAT3">TPAT object</param>
            <param name="str4">Output grid3d filename</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertThematicToDouble(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Convert Thematic MultiVoxset to Double MultiVoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid3d filename</param>
            <param name="oVV2">Translation VV handle</param>
            <param name="str3">Output grid3d filename</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertVectorToDoubleUsingRotation(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Double,System.Double)">
            <summary>Convert a Vector Voxel to 3 double Voxels using an external rotation. Internal rotations are ignored.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Vector Voxel file</param>
            <param name="str2">Output X Voxel file</param>
            <param name="str3">Output Y Voxel file</param>
            <param name="str4">Output Z Voxel file</param>
            <param name="d5">Inclination</param>
            <param name="d6">Declination</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertVectorToDouble(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Convert a Vector Voxel to 3 double Voxels</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Vector Voxel file</param>
            <param name="str2">Output X Voxel file</param>
            <param name="str3">Output Y Voxel file</param>
            <param name="str4">Output Z Voxel file</param>
            <param name="i5">Rotated?</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ConvertDoubleToVector(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Double,System.Double,System.Int32)">
            <summary>Convert 3 Double Voxels to a Vector Voxel</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input X Voxel file</param>
            <param name="str2">Input Y Voxel file</param>
            <param name="str3">Input Z Voxel file</param>
            <param name="str4">Output Vector Voxel file</param>
            <param name="d5">Inclination</param>
            <param name="d6">Declination</param>
            <param name="i7">Rotated?</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToWA(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CWA,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Export To GDB</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Voxel file</param>
            <param name="oWA2">WA File</param>
            <param name="i3">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X?</param>
            <param name="i5">Reverse Y?</param>
            <param name="i6">Reverse Z?</param>
            <param name="str7">The Dummy string to write</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export To GDB</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Voxel file</param>
            <param name="oDB2">Database</param>
            <param name="str3">Channel Name</param>
            <param name="i4">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i5">Reverse X?</param>
            <param name="i6">Reverse Y?</param>
            <param name="i7">Reverse Z?</param>
            <param name="i8">Write Dummies?</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToSEGY(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double)">
            <summary>Export To SEGY</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Voxel file</param>
            <param name="str2">Output Segy file</param>
            <param name="d3">Sampling Internal</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromVectorGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Imports from a Vector Geosoft Database</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel Name</param>
            <param name="oDB2">DB To import from</param>
            <param name="i3">VECTOR_IMPORTImport XYZ, UVW or Amplitude/Inclination/Declination channels</param>
            <param name="i4">Symbol to import X, U or Amplitude data from</param>
            <param name="i5">Symbol to import Y, V or Inclination data from</param>
            <param name="i6">Symbol to import Z, W or Declination data from</param>
            <param name="d7">Inclination value for &amp;lt;define&amp;gt;VOX_VECTORVOX_UVW&amp;lt;/define&amp;gt; (-90Â° to 90Â°)</param>
            <param name="d8">Declination value for &amp;lt;define&amp;gt;VOX_VECTORVOX_UVW&amp;lt;/define&amp;gt; (-180Â° to 180Â°)</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromGDB(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CDB,System.Int32)">
            <summary>Imports from a Geosoft Database</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel file</param>
            <param name="oDB2">DB To import from</param>
            <param name="i3">Symbol to import data from</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromSegy(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Imports a MultiVoxset from a SEG Y File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of input SEG Y file</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ListPropertiesGOCAD(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>List all the properties available in this GOCAD file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of GOCAD Voxel file</param>
            <param name="oLST2">List object to populate</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromGOCAD(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Int32)">
            <summary>Imports a MultiVoxset from a GOCAD File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of GOCAD Voxel file</param>
            <param name="str3">Propert name to import</param>
            <param name="oIPJ4" />
            <param name="i5">&amp;lt;define&amp;gt;GOCAD_ORIENTATION&amp;lt;/define&amp;gt;</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromUBC(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.Double,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Import UBC file into a MultiVoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output VOX</param>
            <param name="str2">Name of UBC Mesh File</param>
            <param name="str3">Name of UBC Mod File</param>
            <param name="d4">Dummy Value</param>
            <param name="oIPJ5">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.CheckEqualToLegacyVoxel(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Compare MULTIGRID3D to Legacy Voxel</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel file</param>
            <param name="str2">Legacy Voxel file</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToXML(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Export a MULTIGRID3D to XML</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Voxel file</param>
            <param name="str2">XML file</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToBinary(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export contents of MULTIGRID3D to a Binary File.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Voxel file</param>
            <param name="str2">Binary file to write to</param>
            <param name="i3">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X?</param>
            <param name="i5">Reverse Y?</param>
            <param name="i6">Reverse Z?</param>
            <param name="i7">Swap Bytes?</param>
            <param name="i8">Output Type (Geosoft Type)</param>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ExportToXYZ(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export a MULTIGRID3D to an XYZ File</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Voxel file</param>
            <param name="str2">File Name</param>
            <param name="i3">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X?</param>
            <param name="i5">Reverse Y?</param>
            <param name="i6">Reverse Z?</param>
            <param name="i7">Write Dummies?</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL.ImportFromXYZ(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CRA,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Import XYZ file into a Multi-Voxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of output Voxel file</param>
            <param name="oRA2">RA To import from</param>
            <param name="i3">Data Type &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="oIPJ4">Projection</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMULTIGRID3DUTIL">
            <summary>

       High Performance 3D Grid.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetDataGroundExtents(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the voxel size in ground units that has non-dummy data.</summary>
            <param name="d1">Ground location of minimum valid data in X.</param>
            <param name="d2">Ground location of minimum valid data in Y.</param>
            <param name="d3">Ground location of minimum valid data in Z.</param>
            <param name="d4">Ground location of maximum valid data in X.</param>
            <param name="d5">Ground location of maximum valid data in Y.</param>
            <param name="d6">Ground location of maximum valid data in Z.</param>
            <remarks>
Find the non-dummy volume of a MULTIGRID3D object. If the voxel is all dummies,
returns &amp;lt;define&amp;gt;iMAX&amp;lt;/define&amp;gt; for the minima, and &amp;lt;define&amp;gt;iMIN&amp;lt;/define&amp;gt; for the maxima.
</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetDataExtents(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Get the voxel size that has non-dummy data.</summary>
            <param name="i1">Index of minimum valid data in X.</param>
            <param name="i2">Index of minimum valid data in Y.</param>
            <param name="i3">Index of minimum valid data in Z.</param>
            <param name="i4">Index of maximum valid data in X.</param>
            <param name="i5">Index of maximum valid data in Y.</param>
            <param name="i6">Index of maximum valid data in Z.</param>
            <remarks>
Find the non-dummy volume of a MULTIGRID3D object. If the voxel is all dummies,
returns &amp;lt;define&amp;gt;iMAX&amp;lt;/define&amp;gt; for the minima, and &amp;lt;define&amp;gt;iMIN&amp;lt;/define&amp;gt; for the maxima.
</remarks>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.ExportToPG">
            <summary>Export a MULTIGRID3D To a PG</summary>
            <returns>PG Object</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.ExportToGDB(GeoEngine.Core.GXNetX.CDB,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export To GDB</summary>
            <param name="oDB1">Database</param>
            <param name="str2">Channel Name</param>
            <param name="i3">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i4">Reverse X?</param>
            <param name="i5">Reverse Y?</param>
            <param name="i6">Reverse Z?</param>
            <param name="i7">Write Dummies?</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.ExportToWA(GeoEngine.Core.GXNetX.CWA,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Export To GDB</summary>
            <param name="oWA1">WA File</param>
            <param name="i2">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i3">Reverse X?</param>
            <param name="i4">Reverse Y?</param>
            <param name="i5">Reverse Z?</param>
            <param name="str6">The Dummy string to write</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.ExportToXML(System.String)">
            <summary>Export a MULTIGRID3D to XML</summary>
            <param name="str1">XML file</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.ExportToBinary(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export contents of MULTIGRID3D to a Binary File.</summary>
            <param name="str1">Binary file to write to</param>
            <param name="i2">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i3">Reverse X?</param>
            <param name="i4">Reverse Y?</param>
            <param name="i5">Reverse Z?</param>
            <param name="i6">Swap Bytes?</param>
            <param name="i7">Output Type (Geosoft Type)</param>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.ExportToXYZ(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export a MULTIGRID3D to an XYZ File</summary>
            <param name="str1">File Name</param>
            <param name="i2">&amp;lt;define&amp;gt;DIRECTION3D&amp;lt;/define&amp;gt;</param>
            <param name="i3">Reverse X?</param>
            <param name="i4">Reverse Y?</param>
            <param name="i5">Reverse Z?</param>
            <param name="i6">Write Dummies?</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the projection of the multigrid3d.</summary>
            <param name="oIPJ1">IPJ object</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the projection of the multigrid3d.</summary>
            <param name="oIPJ1">IPJ object</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.Fill(System.String,System.Int32,System.Double)">
            <summary>Fill a grid3d.</summary>
            <param name="str1">Name of the output grid3d</param>
            <param name="i2">&amp;lt;define&amp;gt;PGU_INTERP_ORDER&amp;lt;/define&amp;gt;</param>
            <param name="d3">Fill Value</param>
            <available_version>9.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetVectorOrientation(System.Double@,System.Double@,System.Int32@)">
            <summary>Get the vector voxel orientation</summary>
            <param name="d1">inclination</param>
            <param name="d2">declination</param>
            <param name="i3">rotated</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetSectionCellSizes(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>Get the cell sizes of a section</summary>
            <param name="d1">azimuth</param>
            <param name="d2">scale</param>
            <param name="d3">x origin</param>
            <param name="d4">y origin</param>
            <param name="d5">z origin</param>
            <param name="d6">cell size in x</param>
            <param name="d7">cell size in y</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetOrientedDataExtents(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the data extents based on an orientation</summary>
            <param name="d1">oriented_origin_x</param>
            <param name="d2">oriented_origin_y</param>
            <param name="d3">oriented_origin_z</param>
            <param name="d4">X Vector x</param>
            <param name="d5">X Vector y</param>
            <param name="d6">X Vector z</param>
            <param name="d7">Y Vector x</param>
            <param name="d8">Y Vector y</param>
            <param name="d9">Y Vector z</param>
            <param name="d10">Z Vector x</param>
            <param name="d11">Z Vector y</param>
            <param name="d12">Z Vector z</param>
            <param name="d13">Point1 x</param>
            <param name="d14">Point1 y</param>
            <param name="d15">Point1 z</param>
            <param name="d16">Point2 x</param>
            <param name="d17">Point2 y</param>
            <param name="d18">Point2 z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetVolumeVectors(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the direction of the volume</summary>
            <param name="d1">origin_x</param>
            <param name="d2">origin_y</param>
            <param name="d3">origin_z</param>
            <param name="d4">X Vector x</param>
            <param name="d5">X Vector y</param>
            <param name="d6">X Vector z</param>
            <param name="d7">Y Vector x</param>
            <param name="d8">Y Vector y</param>
            <param name="d9">Y Vector z</param>
            <param name="d10">Z Vector x</param>
            <param name="d11">Z Vector y</param>
            <param name="d12">Z Vector z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetBoundingBox(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the bounding box</summary>
            <param name="d1">minx</param>
            <param name="d2">miny</param>
            <param name="d3">minz</param>
            <param name="d4">maxx</param>
            <param name="d5">maxy</param>
            <param name="d6">maxz</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetOrigin(System.Double,System.Double,System.Double)">
            <summary>Set the origin</summary>
            <param name="d1">x</param>
            <param name="d2">y</param>
            <param name="d3">z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetOrigin(System.Double@,System.Double@,System.Double@)">
            <summary>Get the origin</summary>
            <param name="d1">x</param>
            <param name="d2">y</param>
            <param name="d3">z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetUniformCellSizeZ(System.Double)">
            <summary>Get the uniform cell size in the Z direction</summary>
            <param name="d1">cell size</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetUniformCellSizeY(System.Double)">
            <summary>Get the uniform cell size in the Y direction</summary>
            <param name="d1">cell size</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetUniformCellSizeX(System.Double)">
            <summary>Set the uniform cell size in the X direction</summary>
            <param name="d1">cell size</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.rGetUniformCellSizeZ">
            <summary>Get the uniform cell size in the Z direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.rGetUniformCellSizeY">
            <summary>Get the uniform cell size in the Y direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.rGetUniformCellSizeX">
            <summary>Get the uniform cell size in the X direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetCellSizesZ(GeoEngine.Core.GXNetX.CVV)">
            <summary>Set the cell sizes in the Z direction</summary>
            <param name="oVV1">Z VV</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetCellSizesY(GeoEngine.Core.GXNetX.CVV)">
            <summary>Set the cell sizes in the Y direction</summary>
            <param name="oVV1">Y VV</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.SetCellSizesX(GeoEngine.Core.GXNetX.CVV)">
            <summary>Set the cell sizes in the X direction</summary>
            <param name="oVV1">X VV</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetCellSizesZ(GeoEngine.Core.GXNetX.CVV)">
            <summary>Get the cell sizes in the Z direction</summary>
            <param name="oVV1">Z VV</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetCellSizesY(GeoEngine.Core.GXNetX.CVV)">
            <summary>Get the cell sizes in the Y direction</summary>
            <param name="oVV1">Y VV</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetCellSizesX(GeoEngine.Core.GXNetX.CVV)">
            <summary>Get the cell sizes in the X direction</summary>
            <param name="oVV1">X VV</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetSizeZ">
            <summary>Get the number of cells in the X direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetSizeY">
            <summary>Get the number of cells in the X direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetSizeX">
            <summary>Get the number of cells in the X direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.iIsUniformCellSizeZ">
            <summary>Is the cell uniform in the Z direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.iIsUniformCellSizeY">
            <summary>Is the cell uniform in the Y direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.iIsUniformCellSizeX">
            <summary>Is the cell uniform in the X direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.CreateDefault(System.Int32)">
            <summary>Get the default voxset</summary>
            <param name="i1">&amp;lt;define&amp;gt;GRID3D_TYPE&amp;lt;/define&amp;gt;</param>
            <returns>GRID3D handle, terminates if creation fails</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.GetDefault">
            <summary>Get the default voxset</summary>
            <returns>GRID3D handle, terminates if creation fails</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.Duplicate(System.String)">
            <summary>Creates an MULTIGRID3D with identical geometry to the input</summary>
            <param name="str1">File Name</param>
            <returns>MULTIGRID3D handle, terminates if creation fails</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Creates a new Multivoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <param name="i2">Size in X.</param>
            <param name="i3">Size in Y.</param>
            <param name="i4">Size in Z.</param>
            <returns>MULTIGRID3D handle, terminates if creation fails</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.Modify(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Opens an existing Multivoxset with an plan to modify it</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>MULTIGRID3D handle, terminates if creation fails</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMULTIGRID3D.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Opens an existing Multivoxset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>MULTIGRID3D handle, terminates if creation fails</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMULTIGRID3D">
            <summary>

       High Performance 3D Grid.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMPLY.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates a Multi Polygon Object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>MPLY Handle</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMPLY">
            <summary>

       The MPLY object contains the definitions for one or more
       PPLY.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.ResolveUMN(System.String)">
            <summary>Resolve a Unique Meta Name (UMN) and find the token</summary>
            <param name="str1">Unique Meta Name (UMN)</param>
            <returns>
x                    - Token
&amp;lt;define&amp;gt;H_META_INVALID_TOKEN&amp;lt;/define&amp;gt; - Not found
</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>UMN</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.IGetObjName(System.Int32,System.String@)">
            <summary>Get the name of this item.</summary>
            <param name="i1">Object</param>
            <param name="str2">Name of object</param>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>UMN</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.DeleteType(System.Int32)">
            <summary>Delete Type from META.</summary>
            <param name="i1">Type to delete</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Type</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.DeleteData(System.Int32)">
            <summary>Delete Data from META.</summary>
            <param name="i1">Data to delete</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Type</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.CreateType(System.String,System.Int32,System.Int32)">
            <summary>Create an attribute</summary>
            <param name="str1">Attribute Name</param>
            <param name="i2">Parent Class or &amp;lt;define&amp;gt;META_CORE_CLASS&amp;lt;/define&amp;gt;</param>
            <param name="i3">Parent Type or &amp;lt;define&amp;gt;META_CORE_TYPE&amp;lt;/define&amp;gt;</param>
            <returns>x - Type Token</returns>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Type</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.MoveDatasAcross(GeoEngine.Core.GXNetX.CMETA,System.Int32,System.Int32)">
            <summary>Moves data items from one META to another</summary>
            <param name="oMETA1">Source META Object</param>
            <param name="i2">Object to copy data from</param>
            <param name="i3">Object to copy data to</param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Transfer</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hCopyAcrossType(GeoEngine.Core.GXNetX.CMETA,System.Int32)">
            <summary>Copy a Type from one META to another</summary>
            <param name="oMETA1">Source META object.</param>
            <param name="i2">Type to copy</param>
            <remarks>Classes and parent types will also be copied.</remarks>
            <returns>
x                  - Handle of type
META_INVALID_TOKEN - No visible data anywhere
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Transfer</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hCopyAcrossItem(GeoEngine.Core.GXNetX.CMETA,System.Int32)">
            <summary>Copy an Item from one META to another</summary>
            <param name="oMETA1">Source META object.</param>
            <param name="i2">Item to copy</param>
            <returns>
x                  - Handle of Item
META_INVALID_TOKEN - No visible data
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Transfer</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hCopyAcrossData(GeoEngine.Core.GXNetX.CMETA,System.Int32)">
            <summary>Copy a Data value from one META to another</summary>
            <param name="oMETA1">Source META object.</param>
            <param name="i2">Data value to copy</param>
            <returns>
x                  - Handle of Data value
META_INVALID_TOKEN - No visible data
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Transfer</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hCopyAcrossClass(GeoEngine.Core.GXNetX.CMETA,System.Int32)">
            <summary>Copy a Class from one META to another</summary>
            <param name="oMETA1">Source META object.</param>
            <param name="i2">Class to copy</param>
            <remarks>This will copy all parent classes as well.</remarks>
            <returns>
x                  - Handle of Class
META_INVALID_TOKEN - No visible data anywhere
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Transfer</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hCopyAcrossAttribute(GeoEngine.Core.GXNetX.CMETA,System.Int32)">
            <summary>Copy an Attribute from one META to another</summary>
            <param name="oMETA1">Source META object.</param>
            <param name="i2">Attribute to copy</param>
            <returns>
x                  - Handle of Attribute
META_INVALID_TOKEN - No visible data
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Transfer</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetEmptyAttrib(System.Int32,System.Int32)">
            <summary>Set an empty attribute data holder</summary>
            <param name="i1">MetaObject to set</param>
            <param name="i2">Attribute MetaObject to set</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Set Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttribString(System.Int32,System.Int32,System.String)">
            <summary>Set a string value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="str3">String value to set</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Set Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttribReal(System.Int32,System.Int32,System.Double)">
            <summary>Set an integer value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="d3">Value to set</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Set Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttribInt(System.Int32,System.Int32,System.Int32)">
            <summary>Set an integer value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Value to set</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Set Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttribEnum(System.Int32,System.Int32,System.Int32)">
            <summary>Set an enum value to an attribute (as an integer)</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Value to set</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Set Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttribBool(System.Int32,System.Int32,System.Int32)">
            <summary>Set a boolean value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Value to set</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Set Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttribOBJ(System.Int32,System.Int32,System.Int32)">
            <summary>Set an object to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Object to set</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.GetAttribOBJ(System.Int32,System.Int32,System.Int32)">
            <summary>Get an object from an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Object to get info into</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Object</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hGetNextItem(System.Int32,System.Int32)">
            <summary>Count the number of items in a class</summary>
            <param name="i1">Class</param>
            <param name="i2">Starting Item (must &amp;lt;define&amp;gt;H_META_INVALID_TOKEN&amp;lt;/define&amp;gt; for first item)</param>
            <returns>
x                    - Next Item
&amp;lt;define&amp;gt;H_META_INVALID_TOKEN&amp;lt;/define&amp;gt; - No more items
</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Item</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.hCreatItem(System.String,System.Int32)">
            <summary>Creates item in Class.</summary>
            <param name="str1">Unique item Name</param>
            <param name="i2">Class (can be root)</param>
            <returns>
x                    - Next Item
&amp;lt;define&amp;gt;H_META_INVALID_TOKEN&amp;lt;/define&amp;gt; - Error
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Item</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.DeleteItem(System.Int32)">
            <summary>Delete item from META.</summary>
            <param name="i1">Item to delete</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Item</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.DeleteAllItems(System.Int32)">
            <summary>Delete all items in this class.</summary>
            <param name="i1">Class of items to delete</param>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Item</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.WriteText(GeoEngine.Core.GXNetX.CWA)">
            <summary>Write the entire meta as a text file</summary>
            <param name="oWA1">WA to write to</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Import/Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.ImportTableCSV(System.Int32,System.String)">
            <summary>Import a CSV into a class as items.</summary>
            <param name="i1">Class to import into</param>
            <param name="str2">Name of CSV file to load</param>
            <remarks>
Field names in the CSV file that match attribute names in the class will be
imported into table entries in the class.  Usually this will be used with
a class created using the hCreateTable_SCHEMA method so that the contents of
class can be viewed as a table.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Import/Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.ExportTableCSV(System.Int32,System.String)">
            <summary>Export all items in a class as a CSV</summary>
            <param name="i1">Class of items to export</param>
            <param name="str2">Name of CSV file to produce</param>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Import/Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.iHasValue(System.Int32,System.Int32)">
            <summary>Does this meta/attribute have a value set?</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.IGetAttribString(System.Int32,System.Int32,System.String@)">
            <summary>Get a string value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="str3">String value to get</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.GetAttribReal(System.Int32,System.Int32,System.Double@)">
            <summary>Get an integer value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="d3">Value to set</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.GetAttribInt(System.Int32,System.Int32,System.Int32@)">
            <summary>Get an integer value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Value to set</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.GetAttribEnum(System.Int32,System.Int32,System.Int32@)">
            <summary>Get an enum value to an attribute (as an integer)</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Value to set</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.GetAttribBool(System.Int32,System.Int32,System.Int32@)">
            <summary>Get a boolean value to an attribute</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <param name="i3">Value to set</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.FindData(System.Int32,System.Int32)">
            <summary>Does this meta/attribute have a value ?</summary>
            <param name="i1">Object</param>
            <param name="i2">Attribute</param>
            <returns>
x  - Data Value
&amp;lt;define&amp;gt;H_META_INVALID_TOKEN&amp;lt;/define&amp;gt; - No
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Get Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize an META to a BF</summary>
            <param name="oBF1">BF to serialize to</param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Core</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create a META Object from a BF</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1">BF to serialize from</param>
            <returns>META Object</returns>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Core</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>META Object</returns>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Core</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.Copy(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Copy a META to another</summary>
            <param name="oMETA1">Source META object.</param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Core</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.DeleteClass(System.Int32)">
            <summary>Delete Class from META.</summary>
            <param name="i1">Class to delete</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Class</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.CreateClass(System.String,System.Int32)">
            <summary>Create a class</summary>
            <param name="str1">Class Name</param>
            <param name="i2">Parent class or &amp;lt;define&amp;gt;META_CORE_CLASS_Base&amp;lt;/define&amp;gt;</param>
            <returns>x - Class Token</returns>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Class</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttributeVisible(System.Int32,System.Int32)">
            <summary>Allow/disallow an attribute to be visible in the browser</summary>
            <param name="i1">Attribute or &amp;lt;define&amp;gt;META_CORE_ATTRIB&amp;lt;/define&amp;gt;</param>
            <param name="i2">Editable Flag</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Browser</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.SetAttributeEditable(System.Int32,System.Int32)">
            <summary>Allow/disallow an attribute to be editable in the browser</summary>
            <param name="i1">Attribute or &amp;lt;define&amp;gt;META_CORE_ATTRIB&amp;lt;/define&amp;gt;</param>
            <param name="i2">Editable Flag</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Browser</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.DeleteAttrib(System.Int32)">
            <summary>Delete Attrib from META.</summary>
            <param name="i1">Attrib to delete</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Attribute</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMETA.CreateAttrib(System.String,System.Int32,System.Int32)">
            <summary>Create an attribute</summary>
            <param name="str1">Attribute Name</param>
            <param name="i2">Parent class or &amp;lt;define&amp;gt;META_CORE_CLASS&amp;lt;/define&amp;gt;</param>
            <param name="i3">Type of Attribute or &amp;lt;define&amp;gt;META_CORE_TYPE&amp;lt;/define&amp;gt;</param>
            <returns>x - Attribute Token</returns>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Attribute</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMETA">
            <summary>

       A META object contains hierarchical organized metadata
       of any type, including other objects.  META information
       is organized in an XML-like structure based on a data
       schema that describes the data hierarchy.   META objects
       are used by many entities that need to store metadata
       specific to the entities or to the application.

       Metadata can be saved in databases and maps, as well as in
       channels, lines, views and groups.  Oasis montaj objects
       can be queried for their associated metadata, and if it
       exists, the metadata can be retrieved and utilized by
       other Oasis montaj processes.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.DoesSurfaceIntersect(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String)">
            <summary>Checks if the two surfaces intersect at all</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Primary Geosurface file</param>
            <param name="str2">Primary Surface Name within Geosurface File</param>
            <param name="str3">Secondary Geosurface file</param>
            <param name="str4">Secondary Surface Name within Geosurface File</param>
            <returns>Returns 1 if intersects, 0 if surfaces do not intersect</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ComputeSurfaceSubdivision(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String)">
            <summary>Smooths a surface by applying a loop subdivision algorithm</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Geosurface file</param>
            <param name="str2">Input Surface Name within Geosurface File</param>
            <param name="str3">Output Geosurface file</param>
            <param name="str4">Output Surface Name within Geosurface File</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ComputeSurfaceSimplification(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String)">
            <summary>Simplifies a surface by reducing the number of edges by half</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Geosurface file</param>
            <param name="str2">Input Surface Name within Geosurface File</param>
            <param name="str3">Output Geosurface file</param>
            <param name="str4">Output Surface Name within Geosurface File</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ComputeSurfaceIntersection(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Computes and outputs the intersection of two closed surfaces</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Primary Geosurface file</param>
            <param name="str2">Primary Surface Name within Geosurface File</param>
            <param name="str3">Secondary Geosurface file</param>
            <param name="str4">Secondary Surface Name within Geosurface File</param>
            <param name="str5">Output surface file</param>
            <param name="str6">Output surface name</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ComputeSurfaceClip(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Clip a surface with another surface, and output the clipped surfaces</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Primary Geosurface file</param>
            <param name="str2">Primary Surface Name within Geosurface File</param>
            <param name="str3">Secondary Geosurface file</param>
            <param name="str4">Secondary Surface Name within Geosurface File</param>
            <param name="str5">Output surface file</param>
            <param name="str6">Output surface name</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ComputeSurfaceUnion(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Compute union of two surfaces</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Primary Geosurface file</param>
            <param name="str2">Primary Surface Name within Geosurface File</param>
            <param name="str3">Secondary Geosurface file</param>
            <param name="str4">Secondary Surface Name within Geosurface File</param>
            <param name="str5">Output surface file</param>
            <param name="str6">Output surface name</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ClipSurfaceWithPolygon2d(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Clip a Surface a specified Polygon file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Geosurface file</param>
            <param name="str2">Input Surface name within Geosurface file</param>
            <param name="str3">Polygon File</param>
            <param name="str4">Output Surface file</param>
            <param name="i5">Set true if the values inside polygon are to be masked</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ClipSurfaceWithExtents(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Clip a Surface with X,Y,Z extents</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Geosurface file</param>
            <param name="str2">Input Surface name within Geosurface file</param>
            <param name="str3">Output Surface file</param>
            <param name="d4">Min value of X</param>
            <param name="d5">Max value of X</param>
            <param name="d6">Min value of Y</param>
            <param name="d7">Max value of Y</param>
            <param name="d8">Min value of Z</param>
            <param name="d9">Max value of Z</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESHUTIL.ClipSurfaceWithGrid(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>Clip a Surface with a Grid Surface (grid converted to surface)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Geosurface file</param>
            <param name="str2">Input Surface name within Geosurface file</param>
            <param name="str3">Grid Surface file name</param>
            <param name="str4">Grid surface name within file</param>
            <param name="str5">Output Surface file</param>
            <param name="str6">Name of Surface Item above grid - required for mode=CLIP_ABOVE and CLIP_BOTH</param>
            <param name="str7">Name of Surface Item below grid - required for mode=CLIP_BELOW and CLIP_BOTH</param>
            <param name="i8">&amp;lt;define&amp;gt;SURFACE_CLIP_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMESHUTIL">
            <summary>

       Mesh utility methods.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.Save">
            <summary>Saves Mesh to the Project Cache and Geosurface file</summary>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.ImportGridToMesh(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>Imports a Grid to a Surface. Creates a new Geosurface file for the surface</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid File Name</param>
            <param name="str2">Surface File Name</param>
            <param name="str3">Surface Item Name within the file</param>
            <returns>MESH handle, terminates if creation fails</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.GetAttributeValues(System.String,System.String,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Inserts an attribute set to a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="str2">Attribute Name</param>
            <param name="i3">&amp;lt;define&amp;gt;ATTRIBUTE_DATA_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;ATTRIBUTE_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i5">Patch ID</param>
            <param name="oVV6">Attributes VV VV</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.SetAttributeValues(System.String,System.String,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Inserts an attribute set to a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="str2">Attribute Name</param>
            <param name="i3">&amp;lt;define&amp;gt;ATTRIBUTE_DATA_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;ATTRIBUTE_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i5">Patch ID</param>
            <param name="oVV6">Attributes VV VV</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.InsertAttributes(System.String,System.String,System.Int32,System.Int32)">
            <summary>Inserts an attribute set to a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="str2">Attribute Name</param>
            <param name="i3">&amp;lt;define&amp;gt;ATTRIBUTE_DATA_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;ATTRIBUTE_TYPE&amp;lt;/define&amp;gt;</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.GetFaces(System.String,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Returns all the faces comprising of vertex indices in a patch</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <param name="oVV3">Face vertex 1</param>
            <param name="oVV4">Face vertex 2</param>
            <param name="oVV5">Face vertex 3</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.GetVertices(System.String,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Returns all the vertices in a patch</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <param name="oVV3">Vertices X</param>
            <param name="oVV4">Vertices Y</param>
            <param name="oVV5">Vertices Z</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.GetVertexPoint(System.String,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>Number of faces in a patch in mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <param name="i3">Vertex Index</param>
            <param name="d4">X coordinate</param>
            <param name="d5">Y coordinate</param>
            <param name="d6">Z coordinate</param>
            <returns>Returns the number of faces in a patch</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.NumFaces(System.String,System.Int32)">
            <summary>Number of faces in a patch in mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <returns>Returns the number of faces in a patch</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.AddFace(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Adds a face to a patch in a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <param name="i3">Vertex index 0 for the face</param>
            <param name="i4">Vertex index 1 for the face</param>
            <param name="i5">Vertex index 2 for the face</param>
            <returns>Returns the face index of the added face</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.NumVertices(System.String,System.Int32)">
            <summary>Number of vertices in a patch in mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <returns>Returns the number of vertices in a patch</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.AddVertex(System.String,System.Int32,System.Double,System.Double,System.Double)">
            <summary>Adds a vertex to a patch in a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <param name="d3">x coordinate of the vertex</param>
            <param name="d4">y coordinate of the vertex</param>
            <param name="d5">z coordinate of the vertex</param>
            <returns>Returns the vertex index of the added vertex</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.NumPatches(System.String)">
            <summary>Returns the number of patches added to the mesh</summary>
            <param name="str1">Mesh Name</param>
            <returns>The number of patches added to the mesh</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.PatchExists(System.String,System.Int32)">
            <summary>Checks if a patch specified by a patch ID exists in a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <returns>TRUE if patch exists</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.DeletePatch(System.String,System.Int32)">
            <summary>Deletes a patch specified by Patch ID from a mesh</summary>
            <param name="str1">Mesh Name</param>
            <param name="i2">Patch ID</param>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.InsertPatch(System.String)">
            <summary>Inserts a new surface patch to the mesh specified by a unique ID</summary>
            <param name="str1">Mesh Name</param>
            <returns>Patch ID of the inserted patch</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Opens an existing Mesh</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <param name="oLST2">LST to fill with Mesh Names</param>
            <returns>MESH handle, terminates if creation fails</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMESH.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Creates a new Mesh</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Mesh Name</param>
            <returns>MESH handle, terminates if creation fails</returns>
            <available_version>9.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMESH">
            <summary>

       High Performance Surface API.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.SRand(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Seed the random-number generator with current time</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
Use the rRand_MATH function to create a random number between  0 and 1.
The standard "C" function srand() is called.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rUnLogZ(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Int32,System.Double)">
            <summary>Inverse of rLogZ</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Log value</param>
            <param name="i2">Log Mode (0 - Log, 1 - LogLinearLog)</param>
            <param name="d3">Log Minimum (must be greater than 0)</param>
            <remarks>See Notes for rLogZ.</remarks>
            <returns>The original value</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rTan(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the tangent</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Angle in radians</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rSqrt(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the square root</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rSin(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the sin</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Angle in radians</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rSign(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>Determine return value based on value of Z1</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Z1</param>
            <param name="d2">Z2</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>|Z2| if Z1 &gt; 0, -|Z2| if Z1 &lt; 0, 0 if Z1 = 0, and Z2 if Z1 = Dummy</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rRound(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Int32)">
            <summary>Round to n significant digits</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <param name="i2">Number of significant digits to round to</param>
            <remarks>
Negative values ending in 5XXX to n sig digits round down
Positive values ending in 5XXX to n sig digits round up
Dummy values return dummy
</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rRand(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Get a  random number between 0 and 1</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
Use SRand_MATH to seed the random number generator before a series of
calls to this function are made.
The standard "C" function rand() is called.
</remarks>
            <returns>A real number</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rPow(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>Calculate X raised to the power of Y</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X</param>
            <param name="d2">Y</param>
            <remarks>If either X or Y is a dummy, returns dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.RotateVector(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>Rotate a vector about an axis.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X1 component (vector to rotate)</param>
            <param name="d2">Y1 component</param>
            <param name="d3">Z1 component</param>
            <param name="d4">Angle to rotate, CW in radians</param>
            <param name="d5">X2 component (axis of rotation)</param>
            <param name="d6">Y2 component</param>
            <param name="d7">Z2 component</param>
            <param name="d8">X3 component  (rotated vector, can</param>
            <param name="d9">Y3 component   be the same as input)</param>
            <param name="d10">Z3 component</param>
            <remarks>
Rotates a vector by the input angle around an arbitrary axis.
Angles are measured clockwise looking along the axis (away from the origin).
Assumes a right hand coordinate system.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rMod(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>Calculates the modulus of two reals (A mod B)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">A</param>
            <param name="d2">B (must not be zero)</param>
            <remarks>
The modulus of A with respect to B is defined
as the difference of A with the largest integral multiple of B
smaller than or equal to A.

e.g.   A  mod B
20 mod 10 = 0
20 mod 9 = 2

f A or B is a dummy, returns dummy.
</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rLogZ(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Int32,System.Double)">
            <summary>
Given a Z value and the Log style and Log Minimum this
function will return the log value.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Z Value</param>
            <param name="i2">Log Mode (0 - Log, 1 - LogLinearLog)</param>
            <param name="d3">Log Minimum (must be greater than 0)</param>
            <remarks>
Mode = 0 (regular log mode) returns:

::

   Log10(Z)  for Z &gt; minimum
   Log10(minimum) for Z &lt;= minimum


Mode = 1 (log / linear / negative log mode) returns:

::

   minimum * ( log10( |Z| / minimum) + 1 )   for Z &gt; minimum
   Z for |Z| &lt;= minimum   (the linear part of the range)
   -minimum * ( log10( |Z| / minimum) + 1 )   for Z &lt; -minimum
</remarks>
            <returns>The Log Value.</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rLog10(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the base 10 log</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rLog(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the natural log</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rLambdaTransRev(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>Performs a reverse lambda transform on a value.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Lambda transformed Z Value</param>
            <param name="d2">Lambda value</param>
            <remarks>See rLambdaTrans.</remarks>
            <returns>The original non-lambda transformed value</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rLambdaTrans(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>Performs lambda transform on a value.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Z Value</param>
            <param name="d2">Lambda value</param>
            <remarks>
Returns 0 for input Z = 0.
returns log10(Z) for lambda = 0.
returns (Z^lambda - 1)/lambda for Z &gt; 0.
returns dummy for Z = dummy.
</remarks>
            <returns>The lambda transformed value</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rHypot(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>sqrt(X*X + Y*Y)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X</param>
            <param name="d2">Y</param>
            <remarks>If either X or Y is a dummy, the returned value is dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rFloor(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculates the floor of the value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rExp(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate e raised to the power of X</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rDotProduct3D(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Compute Dot product of two vectors.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X1 component</param>
            <param name="d2">Y1 component</param>
            <param name="d3">Z1 component</param>
            <param name="d4">X2 component</param>
            <param name="d5">Y2 component</param>
            <param name="d6">Z2 component</param>
            <returns>Dot product</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rCos(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the cosine</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Angle in radians</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rCeil(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculates the ceiling of the value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rArcTan2(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double)">
            <summary>Calculate ArcTan(Y/X)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Y</param>
            <param name="d2">X</param>
            <remarks>If either X or Y is a dummy, returns dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rArcTan(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the arctan</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rArcSin(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the arcsin</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values or values &lt; -1 or &gt; 1 return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rArcCos(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate the arccosine</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values or values &lt; -1 or &gt; 1 return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.rAbs(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Calculate absolute value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Real</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Real</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.Normalise3D(GeoEngine.Core.GXNetX.CGXNETCore,System.Double@,System.Double@,System.Double@)">
            <summary>Scale a vector to unit length.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X component (altered)</param>
            <param name="d2">Y component (altered)</param>
            <param name="d3">Z component (altered)</param>
            <remarks>
Divides each component by the vector
magnitude.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.NicerScale(GeoEngine.Core.GXNetX.CGXNETCore,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>Compute a nicer scale for a given min and max.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Min value (changed)</param>
            <param name="d2">Max value (changed)</param>
            <param name="d3">Inc value (returned)</param>
            <param name="i4">Power value (returned)</param>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.NicerLogScale(GeoEngine.Core.GXNetX.CGXNETCore,System.Double@,System.Double@,System.Int32)">
            <summary>Finds nicer min, max values for logarithmic plot scales.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Min value (changed)</param>
            <param name="d2">Max value (changed)</param>
            <param name="i3">Fine flag</param>
            <remarks>
Will fail if the input upper bound is less than the lower
bound, but will work if the two values are equal.
The input bounds are overwritten.

Input lower and upper bounds, returns "nicer" values.
If the Fine flag is set to TRUE, the values will have the
form N x 10^Y, where N is a value from 1 to 9, and 10^Y
is an integral power of 10. If the Fine flag is set to
FALSE, the scaling is coarse, and the bounding exact
powers of 10 are returned.
For example,  the values (.034, 23) return (.03, 30) for
fine scaling, and (0.01, 100) for coarse scaling.
</remarks>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.iXor(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>
Return the unary operation result of A ^ B

Returns			an integer number

If A or B is a dummy, returns dummy.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">A</param>
            <param name="i2">B</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.iRound(GeoEngine.Core.GXNetX.CGXNETCore,System.Double)">
            <summary>Round to the nearest whole number</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Round</param>
            <remarks>
Negative values with decimal parts larger than .5 round down (-1.5 -&gt; 2.0)
Positive values with decimal parts larger than .5 round up (1.5 -&gt; 2.0)
Dummy values return dummy
</remarks>
            <returns>Integer</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.iOr(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>
Return the unary operation result of A | B

Returns			an integer number

If A or B is a dummy, returns dummy.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">A</param>
            <param name="i2">B</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.iMod(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>Calculates the modulus of two integers</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">A</param>
            <param name="i2">B (must not be zero)</param>
            <remarks>If A or B is a dummy, returns dummy.</remarks>
            <returns>Int</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.iAnd(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32)">
            <summary>
Return the unary operation result of A &amp; B

Returns			an integer number

If A or B is a dummy, returns dummy.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">A</param>
            <param name="i2">B</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.iAbs(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Calculate absolute value</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Integer</param>
            <remarks>Dummy values return dummy</remarks>
            <returns>Integer</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMATH.CrossProduct(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>Cross product of two vectors.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">X1 component</param>
            <param name="d2">Y1 component</param>
            <param name="d3">Z1 component</param>
            <param name="d4">X2 component</param>
            <param name="d5">Y2 component</param>
            <param name="d6">Z2 component</param>
            <param name="d7">X3 component (output)</param>
            <param name="d8">Y3 component (output)</param>
            <param name="d9">Z3 component (output)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMATH">
            <summary>

       This is not a class. This is a collection of standard
       mathematical functions, including most of the common
       logarithmic and geometric functions.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.RenderPreviewMapProduction(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Render a preview for map sheet production purposes</summary>
            <param name="d1">DC Handle (pass 0 to just query the Data view pixel location)</param>
            <param name="i2">Left value of the render rect in Windows coordinates (bottom&gt;top)</param>
            <param name="i3">Bottom value</param>
            <param name="i4">Right value</param>
            <param name="i5">Top value</param>
            <remarks>
This method can also be used to get the data view pixel location
by passing a null DC handle. This help to plot the view contents
preview from another location.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Render/Preview</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.RenderPreview(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
Create a preview of the map template onto a
Windows DC handle
</summary>
            <param name="d1">DC Handle</param>
            <param name="i2">Left value of the render rect in Windows coordinates (bottom&gt;top)</param>
            <param name="i3">Bottom value</param>
            <param name="i4">Right value</param>
            <param name="i5">Top value</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Render/Preview</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.Refresh">
            <summary>Refresh the map template with any newly saved items</summary>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Render/Preview</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.CreateMap(System.String,System.String)">
            <summary>Create a map from the map template</summary>
            <param name="str1">New map file name (if it exists it will be overwritten)</param>
            <param name="str2">Group name to use for settings</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Map Making</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.GetFileName(System.String@)">
            <summary>Get the file name of the map template.</summary>
            <param name="str1">Returned map template file name</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>File Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.Discard">
            <summary>Discard all changes made to the map template and reload from disk.</summary>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>File Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Create a MAPTEMPLATE from an existing file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Map Template file name</param>
            <param name="str2">Map Template base template to create from</param>
            <param name="i3">&amp;lt;define&amp;gt;MAPTEMPLATE_OPEN&amp;lt;/define&amp;gt;</param>
            <remarks>
The base template name should be the file name part of a geosoft_maptemplate
file in the &lt;geosoft&gt;\maptemplate or &lt;geosoftuser&gt;\maptemplate folders. A base file
in the user folder will override any in the Geosoft install dir.
</remarks>
            <returns>MAPTEMPLATE Object</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>File Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.Commit">
            <summary>Commit any changes to the map template to disk</summary>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>File Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.UpdateFromTmpCopy(System.String)">
            <summary>Update the object contents from a temporary XML file that may have bee manipulated externally.</summary>
            <param name="str1">Temporary map template file name</param>
            <remarks>
This method will not modify the original contents of the file until a call to the
the Commit method is made or the object is destroyed. A call to the Discard method
will restore the contents to that of the original file. The temporary file is not deleted
and should be to not leak file resources.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Content Manipulation Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPTEMPLATE.GetTmpCopy(System.String@)">
            <summary>Get a temporary XML file for manipulation of the map template.</summary>
            <param name="str1">Returned temporary map template file name</param>
            <remarks>
After manipulating contents the object may be updated by a call to
the UpdateFromTmpCopy method.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Content Manipulation Methods</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMAPTEMPLATE">
            <summary>

       A MAPTEMPLATE wraps and provides manipulation and usage for the XML content in map template files.
       See the annotated schema file maptemplate.xsd in the &lt;GEOSOFT&gt;\maptemplate folder and the accompanying
       documentation in that folder for documentation on the file format.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPL.ReplaceString(System.String,System.String)">
            <summary>Adds a replacement string to a mapplot control file.</summary>
            <param name="str1">Variable</param>
            <param name="str2">Replacement</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPL.Process(GeoEngine.Core.GXNetX.CMAP)">
            <summary>Process a MAPL</summary>
            <param name="oMAP1" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPL.CreateREG(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32,GeoEngine.Core.GXNetX.CREG)">
            <summary>Create a MAPL with REG.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">MAPL file name</param>
            <param name="str2">Map base reference name</param>
            <param name="i3">Start line number in file (0 is first)</param>
            <param name="oREG4" />
            <remarks>
The default map groups will use the reference name with
"_Data" and "_Base" added.  If no reference name is specified,
the name "MAPL" is used
</remarks>
            <returns>MAPL, aborts if creation fails</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAPL.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Create a MAPL.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">MAPL file name</param>
            <param name="str2">Map base reference name</param>
            <param name="i3">Start line number in file (0 is first)</param>
            <remarks>
The default map groups will use the reference name with
"_Data" and "_Base" added.  If no reference name is specified,
the name "MAPL" is used
</remarks>
            <returns>MAPL, aborts if creation fails</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMAPL">
            <summary>

       The MAPL class is the interface with the MAPPLOT program,
       which reads a MAPPLOT control file and plots graphical
       entities to a map. The MAPL object is created for a given
       control file, then passed to the MAPPLOT program, along
       with the target MAP object on which to do the drawing
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GetDataProj">
            <summary>Get the projection type of the Data view of a map.</summary>
            <returns>Project type as an integer</returns>
            <available_version>8.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ViewListEx(GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>Get a list of views of certain types in this map</summary>
            <param name="oLST1">List to hold the views.  View names may be up to 2080 characters in length.</param>
            <param name="i2">&amp;lt;define&amp;gt;MAP_LIST_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ViewList(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get a list of all views in this map.</summary>
            <param name="oLST1">List to hold the views.  View names may be up to 2080 characters in length.</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.UnPackFiles">
            <summary>UnPack all files from map to workspace.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Sync(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Syncronize the Metadata</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geosoft map file name</param>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetREG(GeoEngine.Core.GXNetX.CREG)">
            <summary>Write a REG to a map.</summary>
            <param name="oREG1">REG to write to map</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Write a META to a map.</summary>
            <param name="oMETA1">META to write to map</param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetMapSize(System.Double,System.Double,System.Double,System.Double)">
            <summary>Set the size of the Map.</summary>
            <param name="d1">X minimum in mm</param>
            <param name="d2">Y minimun in mm</param>
            <param name="d3">X maximum in mm</param>
            <param name="d4">Y maximum in mm</param>
            <remarks>
The map size is area on the MAP that contains graphics
to be plotted.  The area can be bigger or smaller that
the current views.  In the absense of any other information
only the area defined by the map size is plotted.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetMapScale(System.Double)">
            <summary>Set the current map scale</summary>
            <param name="d1">New map scale (must be &gt; 0).</param>
            <remarks>
All views in the map will be resized for the new
map scale.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetMapName(System.String)">
            <summary>Set the Map Name of the Map.</summary>
            <param name="str1">Map Name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetCurrent">
            <summary>Sets the current map to this map.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SetClassName(System.String,System.String)">
            <summary>Set a class name.</summary>
            <param name="str1">Class</param>
            <param name="str2">Name</param>
            <remarks>
Map class names are intended to be used to record the
names of certain view classes in the map, such as the
"Data", "Base" and "Section" views.

There can only be one name for each class, but it can
be changed.  This lets the "Data" class name change,
for example, so plotting can select which class to plot
to.

If a name is not set, the class name is set and
returned.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.SaveAsMXD(System.String)">
            <summary>Save as ArcGIS MXD</summary>
            <param name="str1">Geosoft map file name</param>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.rGetMapScale">
            <summary>Get the current map scale</summary>
            <remarks>
If there is a "Data" view, the scale is derived from
this view.

If their is no data view, the scale is derived
from the first view that is not scaled in mm.
otherwise, the scale is 1000 (mm).

All views must be closed, or open read-only.
</remarks>
            <returns>The current map scale</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ResizeAllEx(System.Int32)">
            <summary>ResizeAll_MAP with selection of view extent type selection.</summary>
            <param name="i1">&amp;lt;define&amp;gt;MVIEW_EXTENT&amp;lt;/define&amp;gt;</param>
            <remarks>
&amp;lt;define&amp;gt;MVIEW_EXTENT_VISIBLE&amp;lt;/define&amp;gt; gives a more "reasonable" map size, and won't
clip off labels outside a graph window.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ResizeAll">
            <summary>Resize a map to the extents of all views.</summary>
            <remarks>
This is the same as ResizeAllEx_MAP with
&amp;lt;define&amp;gt;MVIEW_EXTENT_CLIP&amp;lt;/define&amp;gt;.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Render(System.String)">
            <summary>Render a map to file/device.</summary>
            <param name="str1">Plot file/device</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.PackFiles">
            <summary>Pack all files in the map so that it can be mailed.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.IUnPackFilesToFolder(System.Int32,System.String,System.String@)">
            <summary>UnPack all files from map to workspace.</summary>
            <param name="i1">(0 - Produce errors, 1 - Force overwrites)</param>
            <param name="str2">Directory to place unpacked files in.</param>
            <param name="str3">List of files that are problematic returned</param>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.IUnPackFilesEx(System.Int32,System.String@)">
            <summary>UnPack all files from map to workspace.</summary>
            <param name="i1">(0 - Produce errors, 1 - Force overwrites)</param>
            <param name="str2">List of files that are problematic returned</param>
            <remarks>
The option to force will simply overwrite the files.
When the non-force option is in effect the method will
stop if any files are going to be overwritting. These
file names will end up in the Errors string.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.iPackedFiles">
            <summary>The number of packed files in the current map.</summary>
            <returns>The number of packed files in map.</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.IGetMapName(System.String@)">
            <summary>Get the Map Name of the Map.</summary>
            <param name="str1">Returned map name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.IGetFileName(System.String@)">
            <summary>Get the name of the map.</summary>
            <param name="str1">Returned map file name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.IGetClassName(System.String,System.String@)">
            <summary>Get a class name.</summary>
            <param name="str1">Class</param>
            <param name="str2">Name</param>
            <remarks>
Map class names are intended to be used to record the
names of certain view classes in the map, such as the
"Data", "Base" and "Section" views.

There can only be one name for each class, but it can
be changed.  This lets the "Data" class name change,
for example, so plotting can select which class to plot
to.

If a name is not set, the class name is set and
returned.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.iExistView(System.String)">
            <summary>Checks to see if a view exists.</summary>
            <param name="str1">View name</param>
            <returns>
0 view does not exist.
1 view exists.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.IDuplicateView(System.String,System.String@,System.Int32)">
            <summary>Duplicate an entire view</summary>
            <param name="str1">Name of view to duplicate</param>
            <param name="str2">Name of new view created (pass in "" and the new name is returned)</param>
            <param name="i3">Copy all groups</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GroupListEx(GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>Get a list of views/groups in this map for this mode</summary>
            <param name="oLST1">List to hold the views.  View names may be up to 2080 characters in length.</param>
            <param name="i2">&amp;lt;define&amp;gt;MAP_LIST_MODE&amp;lt;/define&amp;gt;</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GroupList(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get a list of all views/groups in this map.</summary>
            <param name="oLST1">List to hold the view/groups.  Names may be up to 2080 characters in length.</param>
            <remarks>
Returns all groups in the form "ViewName\GroupName"
To get a LST of groups in a specific map view, use
the iListGroups_MVIEW function.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GetREG">
            <summary>Get the map's REG</summary>
            <remarks>If the map has no REG, an empty REG will be created.</remarks>
            <returns>REG Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GetMETA">
            <summary>Get the map's META</summary>
            <remarks>If the map has no META, an empty META will be created.</remarks>
            <returns>META Object</returns>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GetMapSize(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the size of the Map.</summary>
            <param name="d1">X minimum in mm</param>
            <param name="d2">Y minimun in mm</param>
            <param name="d3">X maximum in mm</param>
            <param name="d4">Y maximum in mm</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.GetLPT">
            <summary>Get the LPT Object of a MAP.</summary>
            <returns>LPT Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.DupMap(GeoEngine.Core.GXNetX.CMAP,System.Int32)">
            <summary>Duplicate copy of current map.</summary>
            <param name="oMAP1">Destination MAP object</param>
            <param name="i2">&amp;lt;define&amp;gt;DUPMAP&amp;lt;/define&amp;gt;</param>
            <remarks>
Before version 6.2 text in maps were displayed with a character set
defining how characters above ASCII 127 would be displayed. 6.2 introduced
Unicode in the core montaj engine that eliminated the need for such a setting and
greatly increased the number of symbols that can be used. The only caveat
of the new system is that text may appear corrupted (especially with GFN fonts) in
versions prior to 6.2 that render maps created in version 6.2 and later.
The constant &amp;lt;define&amp;gt;DUPMAP_COPY_PRE62&amp;lt;/define&amp;gt; provides a way to create maps that can be
distributed to versions prior to 6.2.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Discard">
            <summary>Discard all changes made to the map.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.DeleteView(System.String)">
            <summary>Deletes a view in this map.</summary>
            <param name="str1">View Name to delete</param>
            <remarks>If the view does not exist, nothing happens.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Current(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>This method returns the Current map opened.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
If there is no current map, and running interactively,
the user is prompted to open a map.
</remarks>
            <returns>MAP Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>yes</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Create a MAP.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">MAP file name</param>
            <param name="i2">&amp;lt;define&amp;gt;MAP_OPEN&amp;lt;/define&amp;gt;</param>
            <returns>MAP Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.CRCMap(System.Int32@,System.String)">
            <summary>Generate an XML CRC of a MAP</summary>
            <param name="i1">CRC returned</param>
            <param name="str2">Name of xml to generate (.zip added)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.CopyMapToView(System.String,System.String)">
            <summary>Copy entire map into one view in output map.</summary>
            <param name="str1">Destination MAP name</param>
            <param name="str2">Name of View</param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Commit">
            <summary>Commit any changes to a map.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.Clean">
            <summary>Clean up empty groups in all views in map.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.AGGListEx(GeoEngine.Core.GXNetX.CLST,System.Int32,System.Int32)">
            <summary>Get a list of aggregates in this map based on a mode</summary>
            <param name="oLST1">List to hold the views (allow up to 96 characters)</param>
            <param name="i2">0 - view/agg only 1 - view/agg/layer</param>
            <param name="i3">&amp;lt;define&amp;gt;MAP_LIST_MODE&amp;lt;/define&amp;gt;</param>
            <remarks>
List items are returned as view/agg/layer.
The layer name is optional
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.AGGList(GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>Get a list of all aggregates in this map.</summary>
            <param name="oLST1">List to hold the views (allow up to 96 characters)</param>
            <param name="i2">0 - view/agg only 1 - view/agg/layer</param>
            <remarks>
List items are returned as view/agg/layer.
The layer name is optional
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.CreateLinked3DView(GeoEngine.Core.GXNetX.CMVIEW,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>Create a 3D View in this map that is linked to a MVIEW in a 3D View file.</summary>
            <param name="oMVIEW1">3DV's 3D MVIEW</param>
            <param name="str2">New view name</param>
            <param name="d3">X minimum in mm</param>
            <param name="d4">Y minimun in mm</param>
            <param name="d5">X maximum in mm</param>
            <param name="d6">Y maximum in mm</param>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>3D View</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.RenderBitmap(System.String,System.Double,System.Double,System.Double,System.Double,System.String,System.Int32)">
            <summary>Render a map to a bitmap.</summary>
            <param name="str1">View we exporting units in</param>
            <param name="d2">MinX</param>
            <param name="d3">MinY</param>
            <param name="d4">MaxX</param>
            <param name="d5">MaxY</param>
            <param name="str6">File to generate (BMP or PNG, otherwise extension forced to BMP)</param>
            <param name="i7">Maximum resolution in either direction, -1 for none (will change the pixel density of image if exceeded)</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ExportAreaRaster(System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Int32,System.Int32,System.String,System.String)">
            <summary>Export an area of a map to a non-geo raster format.</summary>
            <param name="str1">File Name To Export</param>
            <param name="str2">View to export coordinates in</param>
            <param name="d3">Area To Export Min X location in view units</param>
            <param name="d4">Area To Export Min Y location in view units</param>
            <param name="d5">Area To Export Max X location in view units</param>
            <param name="d6">Area To Export Max Y location in view units</param>
            <param name="i7">Number of Pixels in X (X or Y should be specified the other should be 0 and computed by export, or both can be 0 and DPI defined)</param>
            <param name="i8">Number of Pixels in Y (X or Y should be specified the other should be 0 and computed by export, or both can be 0 and DPI defined)</param>
            <param name="d9">Resolution in DPI (will override X and Y if not dummy, map page size will be used to determine pixel size of output)</param>
            <param name="i10">&amp;lt;define&amp;gt;MAP_EXPORT_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i11">&amp;lt;define&amp;gt;MAP_EXPORT_METHOD&amp;lt;/define&amp;gt;</param>
            <param name="str12">&amp;lt;define&amp;gt;MAP_EXPORT_RASTER_FORMAT&amp;lt;/define&amp;gt;</param>
            <param name="str13">Extended Options String (format specific)</param>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ExportAreaInView(System.String,System.String,System.Double,System.Double,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Double,System.String,System.String)">
            <summary>Export an area of a map in view units to an external format</summary>
            <param name="str1">File Name To Export</param>
            <param name="str2">View to export coordinates in</param>
            <param name="d3">Resolution in view units of one pixel (or dummy, will be used if DPI is dummy)</param>
            <param name="d4">Resolution in DPI (will override view resolution if not dummy, map page size will be used to determine pixel size of output)</param>
            <param name="i5">&amp;lt;define&amp;gt;MAP_EXPORT_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;MAP_EXPORT_METHOD&amp;lt;/define&amp;gt;</param>
            <param name="d7">Area To Export Min X location in view units</param>
            <param name="d8">Area To Export Min Y location in view units</param>
            <param name="d9">Area To Export Max X location in view units</param>
            <param name="d10">Area To Export Max Y location in view units</param>
            <param name="str11">&amp;lt;define&amp;gt;MAP_EXPORT_FORMAT&amp;lt;/define&amp;gt;</param>
            <param name="str12">Extended Options String (format specific)</param>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ExportAllRaster(System.String,System.String,System.Int32,System.Int32,System.Double,System.Int32,System.Int32,System.String,System.String)">
            <summary>Export the entire map to map to a non-geo raster format.</summary>
            <param name="str1">File Name To Export</param>
            <param name="str2">View to export coordinates in</param>
            <param name="i3">Number of Pixels in X (X or Y should be specified the other should be 0 and computed by export, or both can be 0 and DPI defined)</param>
            <param name="i4">Number of Pixels in Y (X or Y should be specified the other should be 0 and computed by export, or both can be 0 and DPI defined)</param>
            <param name="d5">Resolution in DPI (will override X and Y if not dummy, map page size will be used to determine pixel size of output)</param>
            <param name="i6">&amp;lt;define&amp;gt;MAP_EXPORT_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i7">&amp;lt;define&amp;gt;MAP_EXPORT_METHOD&amp;lt;/define&amp;gt;</param>
            <param name="str8">&amp;lt;define&amp;gt;MAP_EXPORT_RASTER_FORMAT&amp;lt;/define&amp;gt;</param>
            <param name="str9">Extended Options String (format specific)</param>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Export</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CMAP.ExportAllInView(System.String,System.String,System.Double,System.Double,System.Int32,System.Int32,System.String,System.String)">
            <summary>Export the entire map in view units to an external format. View and Group names are removed and plane spatial coordinates will be in the units of the map.</summary>
            <param name="str1">File Name To Export</param>
            <param name="str2">View to export coordinates in</param>
            <param name="d3">Resolution in view units of one pixel (or dummy, will be used if DPI is dummy)</param>
            <param name="d4">Resolution in DPI (will override view resolution if not dummy, map page size will be used to determine pixel size of output)</param>
            <param name="i5">&amp;lt;define&amp;gt;MAP_EXPORT_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;MAP_EXPORT_METHOD&amp;lt;/define&amp;gt;</param>
            <param name="str7">&amp;lt;define&amp;gt;MAP_EXPORT_FORMAT&amp;lt;/define&amp;gt;</param>
            <param name="str8">Extended Options String (format specific)</param>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Export</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CMAP">
            <summary>

       MAPs are containers for MVIEW objects. A view is a 3-D translation
       and a clip window on a map. Graphic entities can be drawn in an MVIEW.
       It is recommended that the MAP class be instantiated by first creating
       an EMAP object and calling the Lock_EMAP function.
       (See the explanation on the distinction between the MAP and EMAP classes).
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.SetString(System.Int32,System.Int32,System.String)">
            <summary>Set an entry</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <param name="str3">Entry</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.SetReal(System.Int32,System.Int32,System.Double)">
            <summary>Set a double entry</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <param name="d3">Entry</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.SetInt(System.Int32,System.Int32,System.Int32)">
            <summary>Set a long entry</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <param name="i3">Entry</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.SaveCrypt(System.String,System.String)">
            <summary>Save LTB to a new file using encryption</summary>
            <param name="str1">File name, .csv assumed.  If "", save to original file.</param>
            <param name="str2">Encryption key  &amp;lt;define&amp;gt;SYS_CRYPT_KEY&amp;lt;/define&amp;gt;</param>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.Save(System.String)">
            <summary>Save LTB changes to existing or new file</summary>
            <param name="str1">File name, .csv assumed.  If "", save to original file.</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.rGetReal(System.Int32,System.Int32)">
            <summary>Get a real entry from the LTB</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <returns>
If the record or field are out of range,
an empty string or dummy value is returned.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.Merge(GeoEngine.Core.GXNetX.CLTB)">
            <summary>Merge the contents of two same-key tables.</summary>
            <param name="oLTB1">Child LTB</param>
            <remarks>
Merging takes place as follows:

1. The "Key" of the child must be the same as the "Key" of the Master.
2. The fields of the Master LTB are collected in-order.
3. Any new fields of the Child LTB are added to the end of the list.
4. A new LTB is created to contain the new field list (in-order).
5. The Child table contents are added to the New LTB.
6. The Master table contents are added/replace the New LTB.
7. The New LTB is returned.

If the fields of the Master and Child are the same, steps 4, 5, 6 are
replaced by:

4. The Master LTB is copied to the New LTB.
5. Any New records found in the child are added to the New LTB
</remarks>
            <returns>
x    - Handle to LTB object
NULL - Error of some kind
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.iSearch(System.Int32,System.Int32,System.String)">
            <summary>Search for a record containing field value</summary>
            <param name="i1">Search start record</param>
            <param name="i2">Field number</param>
            <param name="str3">Search string (case sensitive)</param>
            <returns>
-1 if search failed.
record number if search succeeds
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.iRecords">
            <summary>Get number of records in LTB.</summary>
            <returns>Number of records in the LTB.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.IGetEnglishString(System.Int32,System.Int32,System.String@)">
            <summary>Get the English entry from the LTB</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <param name="str3">Returned field token</param>
            <remarks>
If the record or field are out of range,
an empty string or dummy value is returned.
</remarks>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.IGetString(System.Int32,System.Int32,System.String@)">
            <summary>Get an entry from the LTB</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <param name="str3">Returned field token</param>
            <remarks>
If the record or field are out of range,
an empty string or dummy value is returned.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.iGetInt(System.Int32,System.Int32)">
            <summary>Get a int entry from the LTB</summary>
            <param name="i1">Record number</param>
            <param name="i2">Field number</param>
            <returns>
If the record or field are out of range,
an empty string or dummy value is returned.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.IGetField(System.Int32,System.String@)">
            <summary>Get a field name by index.</summary>
            <param name="i1">Field number</param>
            <param name="str2">Returned field name</param>
            <remarks>If the record or field are out of range, an empty string is returned.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.iFindKey(System.String)">
            <summary>Return the key index of a record.</summary>
            <param name="str1">Key name</param>
            <returns>
-1 if key does not exist.
record number if key does exist.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.iFindField(System.String)">
            <summary>Return the field number for the specified field.</summary>
            <param name="str1">Field name</param>
            <returns>
-1 if field does not exist.
field number if field does exist.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.iFields">
            <summary>Get number of fields.</summary>
            <returns>Number of fields in the LTB.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.GetLST2(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CLST)">
            <summary>Populate an LST with LTB names and values</summary>
            <param name="i1">Field for names, 0 for key field</param>
            <param name="i2">Field for values, 0 for key field</param>
            <param name="oLST3">List to populate</param>
            <remarks>
The LST object will be in the order of the file.
The LST names will come from the LTB name field and the
LST values will come from value field specified.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.GetLST(System.Int32,GeoEngine.Core.GXNetX.CLST)">
            <summary>Populate an LST with LTB names</summary>
            <param name="i1">Field to get, 0 for key field</param>
            <param name="oLST2">List to populate</param>
            <remarks>
The LST object will be in the order of the file.
The LST names will be the LTB fields and the
LST values will be the LTB record numbers.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.GetConLST(System.Int32,System.String,System.Int32,GeoEngine.Core.GXNetX.CLST)">
            <summary>Populate a LST with LTB names from matching fields.</summary>
            <param name="i1">Field</param>
            <param name="str2">String to match to field, must be lower-case</param>
            <param name="i3">&amp;lt;define&amp;gt;LTB_CONLST&amp;lt;/define&amp;gt;</param>
            <param name="oLST4">List to populate</param>
            <remarks>
The LST object will be in the order of the file.
The LST names will be the LTB key fields and the
LST values will be the LTB record numbers.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.DeleteRecord(System.Int32)">
            <summary>Delete a record.</summary>
            <param name="i1">Record number to delete</param>
            <remarks>
Record numbers after the deleted record will be reduced
by 1.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.CreateEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Creates a LTB object from a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name, .csv assumed, searched locally then in GEOSOFT.</param>
            <param name="i2">&amp;lt;define&amp;gt;LTB_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;LTB_DELIM&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;LTB_CASE&amp;lt;/define&amp;gt;</param>
            <param name="str5">Key to find if only one record required, "" to read entire table.</param>
            <remarks>If the file has no header, field names are assumed to be "0", "1", etc.</remarks>
            <returns>
x    - Handle to LTB object
NULL - Error of some kind
</returns>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.CreateCrypt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>Creates a LTB object from an encrypted file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name, .csv assumed, searched locally then in GEOSOFT.</param>
            <param name="i2">&amp;lt;define&amp;gt;LTB_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;LTB_DELIM&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;LTB_CASE&amp;lt;/define&amp;gt;</param>
            <param name="str5">Key to find if only one record required, "" to read entire table.</param>
            <param name="str6">Decryption Key &amp;lt;define&amp;gt;SYS_CRYPT_KEY&amp;lt;/define&amp;gt;</param>
            <remarks>If the file has no header, field names are assumed to be "0", "1", etc.</remarks>
            <returns>
x    - Handle to LTB object
NULL - Error of some kind
</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.String)">
            <summary>Creates a LTB object from a file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name, .csv assumed, searched locally then in GEOSOFT.</param>
            <param name="i2">&amp;lt;define&amp;gt;LTB_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;LTB_DELIM&amp;lt;/define&amp;gt;</param>
            <param name="str4">Key to find if only one record required, "" to read entire table.</param>
            <remarks>If the file has no header, field names are assumed to be "0", "1", etc.</remarks>
            <returns>
x    - Handle to LTB object
NULL - Error of some kind
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.Contract(GeoEngine.Core.GXNetX.CLTB)">
            <summary>Contract the contents of two same-key and same-fields tables.</summary>
            <param name="oLTB1">Contract LTB</param>
            <remarks>
The "Key" of the child must be the same as the "Key" of the Master.
The fields of two LTB must be the same.

Contracting takes place as follows:

1. The Master LTB is copied to the New LTB.
2. All records in the contract LIB are deleted from the New LTB (if there are any)
3. The New LTB is returned.
</remarks>
            <returns>
x    - Handle to LTB object
NULL - Error of some kind
</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLTB.AddRecord(System.String,System.Int32@)">
            <summary>Add a new record.</summary>
            <param name="str1">Key name</param>
            <param name="i2">Returned record number</param>
            <remarks>
If the record exists, the existing record is cleared
and the record number is returned.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CLTB">
            <summary>

       An LTB object is typically created from a CSV (comma-separated values)
       file, and is a table of information that may be accessed by row
       or column. The LTB class is recommended for use with small tables
       produced from short lists (of the order of 1000's or records) such
       as the different geographic projections and their defining parameters.
       Large tables, such as those required for table-lookup functions, should
       be accessed using the TB class.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Sort(System.Int32,System.Int32)">
            <summary>Sorts a list.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to sort on</param>
            <param name="i2">0 - Ascending, 1 - Decending</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.SetItem(System.Int32,System.Int32,System.String)">
            <summary>Place an item at a specified point in the LST.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to insert</param>
            <param name="i2">Item Number to Set</param>
            <param name="str3">Item to Set</param>
            <remarks>The existing item at the given index will be replaced.</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize LST to a BF.</summary>
            <param name="oBF1" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.SelectCSVStringItems(System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with items from a second LST found in a CSV string.</summary>
            <param name="str1">Comma separated item names</param>
            <param name="oLST2">LST to add selected items to</param>
            <remarks>
Items in the input string must be separated with
commas. Parsing uses the sCommaTokens_GS function.
Both the name and value of the input LST items whose
name matches an item in the input string are
copied to the output LST.
Items are copied in the same order they appear in the
input string. Items in the string not found in the input LST
are ignored, and no error is registered.
Item matches are case-tolerant.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.SaveFile(System.String)">
            <summary>Save a list to a file.</summary>
            <param name="str1">Name of the file</param>
            <remarks>
A list file is an ASCII file that contains list entries.
Each line for the file contains a list item name and an
optional list item value.  The name and value must be
delimited by a space, tab or comma.
If the item name or value contains spaces, tabs or commas,
it must be contined in quotes.
blank lines and lines that begin with a '/' character are
ignored.

The default extension is .lst.  If the file has a full path
it will be created as specified.  Otherwise we look for the
file in the local then the GEOSOFT\etc directory.  If the file
does not exist it will be created in the GEOSOFT\etc directory.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.rGetReal(System.Int32,System.Int32)">
            <summary>Get a real item.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to retrieve</param>
            <param name="i2">Item Number to Get</param>
            <returns>Real, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if conversion fails or string is empty.</returns>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Resource(System.String)">
            <summary>
Load a GX List Resource into this list object.  The
entries are placed at the end of the list and are not
sorted.
</summary>
            <param name="str1">Name of the Resource</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.LoadFile(System.String)">
            <summary>Set up a list from a list file.</summary>
            <param name="str1">Name of the file</param>
            <remarks>
A list file is an ASCII file that contains list entries.
Each line for the file contains a list item name and an
optional list item value.  The name and value must be
delimited by a space, tab or comma.
If the item name or value contains spaces, tabs or commas,
it must be contined in quotes.
blank lines and lines that begin with a '/' character are
ignored.

The default extension is .lst.  If the file cannot
be found in the local directory, the GEOSOFT\etc directory
is searched.
If it cannot be found, the list will be
empty.  Not finding a file is not an error.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.LoadCSV(System.String,System.String,System.String)">
            <summary>Load a list with data from a CSV file</summary>
            <param name="str1">The CSV file</param>
            <param name="str2">Column label for the item name</param>
            <param name="str3">Column label for the item value</param>
            <remarks>
Both the Item and Value fields must be specified.
The CSV file must be comma delimited, and have
a header line with the field names.
Leading and trailing spaces are removed in the names and values.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.iSize">
            <summary>Get the number of items in the list.</summary>
            <returns>x - Number of items in the list.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.InsertItem(System.Int32,System.String,System.String)">
            <summary>Adds an item at a given location in the list.</summary>
            <param name="i1">Item index</param>
            <param name="str2">Name of the Item</param>
            <param name="str3">Value of the Item</param>
            <remarks>
Index must be 0 &gt;= index &gt;= list size.
Items above the list index are shifted up one index value.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.iGetInt(System.Int32,System.Int32)">
            <summary>Get an integer item.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to retrieve</param>
            <param name="i2">Item Number to Get</param>
            <returns>Integer, &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; if conversion fails or string is empty.</returns>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.iFindItemMask(System.Int32,System.String)">
            <summary>Searches the list for a specified item, list contains masks.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to search</param>
            <param name="str2">String to try LST mask items on Search For</param>
            <remarks>
Comparsions are case-intolerant (unlike iFindItem_LST).
This means items in the list such as "*(ppm)" will be
found if the input search string is "Ni (ppm)" or "Ni(ppm)",
but not if it is "Ni (PPM)", so you should include
both "*ppm*" and "*PPM*".

It is NOT the input string that should be the mask, but
the LST items themselves

This function was designed originally for geochemical
processes in order to identify if a given channel name
indicates that the channel should be given the "Assay" class.
</remarks>
            <returns>
x  - Item Number
-1 - Not Found
</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.iFindItem(System.Int32,System.String)">
            <summary>Searches the list for a specified item.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to do the search on</param>
            <param name="str2">String to Search For</param>
            <remarks>Comparisons are case-tolerant.</remarks>
            <returns>
x  - Item Number
-1 - Not Found
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.IConvertToCSVString(System.String@)">
            <summary>Load a string with names from a LST.</summary>
            <param name="str1">Buffer to add items to</param>
            <remarks>
The list name values are put into a string,
items separated by commas.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.GtSymbItem(System.Int32,System.String@,System.Int32@)">
            <summary>Returns a channel/line/blob name and symbol from a list.</summary>
            <param name="i1">Item number to get</param>
            <param name="str2">Buffer to Place Symbol name into</param>
            <param name="i3">Symbol handle</param>
            <remarks>
A number of DB functions return LSTs with the channel
or line name in the "Name" part of a LST, and the
handle (DB_SYMB) in the value part. This function lets
you quickly retrieve both the name and symbol handle
for a given item, which needing to convert between types.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.GtItem(System.Int32,System.Int32,System.String@)">
            <summary>This places the specified item into the buffer provided.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to retrieve</param>
            <param name="i2">Item Number to Get</param>
            <param name="str3">Buffer to Place Item Into</param>
            <remarks>If item number is not in the list, the buffer will be "".</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.FindItems(System.Int32,GeoEngine.Core.GXNetX.CLST,GeoEngine.Core.GXNetX.CVV)">
            <summary>Searches a LST for items in a second LST, returns indices of those found.</summary>
            <param name="i1">&amp;lt;define&amp;gt;LST_ITEM&amp;lt;/define&amp;gt; data to do the search on</param>
            <param name="oLST2">Items to search for</param>
            <param name="oVV3">&amp;lt;define&amp;gt;GS_LONG&amp;lt;/define&amp;gt; VV of returned indices into the first LST.</param>
            <remarks>
This is a much more efficient way of determining if items in
one LST are found in a second, than by calling iFindItem_LST
repeatedly in a loop.
The returned INT VV contains the same number of items as
the "search items" LST, and contains -1 for items where the
value is not found, and the index of items that are found.
Comparisons are case-tolerant.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.DelItem(System.Int32)">
            <summary>
Removes an item from the list. All items below
it are shifted up one.
</summary>
            <param name="i1">Item Number to Delete</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create LST from serialized source.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1" />
            <returns>LST object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>
creates a user controllable list. The list
is empty when created.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Width of the list to make. This number should be large enough for both the item name and the item value.  Must be &gt; 2 and &lt;= 4096.</param>
            <returns>Handle to the List Object.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Copy(GeoEngine.Core.GXNetX.CLST)">
            <summary>Copy one LST object to another.</summary>
            <param name="oLST1">Source List to Copy from</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.ConvertFromCSVString(System.String)">
            <summary>Load a LST with items from a string.</summary>
            <param name="str1">Comma separated items</param>
            <remarks>
Items in the input buffer must be separated with
commas.
Both the Name and Value in the list are set to the
item.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Clear">
            <summary>Clear a list object.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.AssayChannel(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create a LST of assay channel mask strings from file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <remarks>
Searches the local directory, then user\etc, then \etc to see
if the file "assaylist.csv" exists.
The file contains strings of those channel names which are
to be interpreted as assay channels for geochemical processes.
Items can be on the same line, separated by commas, or on
separate lines (and combinations of both).
If this function is used in combination with the lFindItemMask_LST
function, then you can use mask-strings such as "*ppm"
The following is a sample file:

*ppm, *(ppm), *PPM, *(PPM), FeCl, MnO2
"Fe %"
FeO

If the file is not found, or if no items are parsed, the list
is returned with zero size.

See the "assaylist.csv" file in the oasismontaj\etc directory
for more details.
</remarks>
            <returns>LST Object</returns>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.Append(GeoEngine.Core.GXNetX.CLST)">
            <summary>Add the items in one list to another list.</summary>
            <param name="oLST1">List to append to the above LST.</param>
            <remarks>
Item names and values are added using "AddUniqueItem_LST",
so that existing items with the same name are replaced, and if
items are duplicated in the appended LST, the last one will be
the one to remain after the process is complete.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.AddUniqueItem(System.String,System.String)">
            <summary>Adds a unique item to the end of the list.</summary>
            <param name="str1">Name of the Item</param>
            <param name="str2">Value of the Item</param>
            <remarks>Existing items that match the name are first removed.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.AddSymbItem(System.String,System.Int32)">
            <summary>Adds a channel/line/blob name and symbol to a list.</summary>
            <param name="str1">Name of the channel, line or blob symbol</param>
            <param name="i2">Symbol handle</param>
            <remarks>
A number of DB functions return LSTs with the channel
or line name in the "Name" part of a LST, and the
handle (DB_SYMB) in the value part. This function lets
you quickly add a new item without the need of coverting
the handle into a string value.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLST.AddItem(System.String,System.String)">
            <summary>Adds an item to the end of the list.</summary>
            <param name="str1">Name of the Item</param>
            <param name="str2">Value of the Item</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CLST">
            <summary>

       The LST class is used to create and retrieve lists,
       and to perform specific actions on lists, including
       retrieving list items, sorting lists and adding or
       removing list items.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLPT.GetStandardLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Copies the six standard line types into a LST object.</summary>
            <param name="oLST1">LST Handle</param>
            <remarks>The six standard line types are "solid", "long dash", "dotted", "short dash", "long, short dash" and "dash dot".</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLPT.GetLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Copies all pattern names into a LST object.</summary>
            <param name="oLST1">LST Handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLPT.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates a line pattern object with current default patterns.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>LPT Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CLPT">
            <summary>

       This class allows access to the current default line patterns.
       It does not allow the definition of individual patterns. It is
       is used primarily with MAP class functions.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLL2.SetRow(System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Define a row of the LL2</summary>
            <param name="i1">The row to set</param>
            <param name="oVV2">Longitude corrections</param>
            <param name="oVV3">Latitude corrections</param>
            <remarks>
The correction data is in degrees, added to the input
datum to product output datum results.

The VV lengths must be equal to #longitudes defined
by Create_LL2.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLL2.Save(System.String)">
            <summary>Save an LL2 to a named resource</summary>
            <param name="str1">Named resource</param>
            <remarks>
The named resource is the name of the datum transform define
inside square brackets in the datum transform name in the
datumtrf table.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLL2.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Create an empty LL2 table to be filled</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Longitude origin</param>
            <param name="d2">Latitude origin</param>
            <param name="d3">Longitude increment</param>
            <param name="d4">Latitude increment</param>
            <param name="i5"># longitudes</param>
            <param name="i6"># latitudes</param>
            <param name="oIPJ7">Input projection</param>
            <param name="oIPJ8">Output projection</param>
            <returns>LL2 Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CLL2">
            <summary>

       local datum lookup creator
       ll2 methods are used to create LL2 objects.  LL2 objects contain
       latitude, longitude correction lookup tables to convert between datums.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.SetRectangleName(System.Int32,System.String)">
            <summary>Sets an optional name the current info for a rectangle or the parent layout</summary>
            <param name="i1">Rectangle to set info for (-1 for parent)</param>
            <param name="str2">Name</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.SetRectangle(System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sets the current bounds for a rectangle previously added to the layout</summary>
            <param name="i1">Rectangle to set info for (-1 for parent)</param>
            <param name="d2">Rectangle Min X</param>
            <param name="d3">Rectangle Min Y</param>
            <param name="d4">Rectangle Max X</param>
            <param name="d5">Rectangle Max Y</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.iNumRectangles">
            <summary>Returns the number of children in the list.</summary>
            <returns>Number of rectangles not counting the parent</returns>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.iAddRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>Adds a rectangle as one of the layout's children (Higer.</summary>
            <param name="d1">Rectangle Min X   (All 0's for undefined allowed)</param>
            <param name="d2">Rectangle Min Y</param>
            <param name="d3">Rectangle Max X</param>
            <param name="d4">Rectangle Max Y</param>
            <returns>Rectangle number, -1 on error</returns>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.iAddConstraint(System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Add a constraint between any two rectangles or to one with absolute positioning</summary>
            <param name="i1">From rectangle (Or -1 for parent)</param>
            <param name="i2">&amp;lt;define&amp;gt;LAYOUT_CONSTR&amp;lt;/define&amp;gt; From constraint flag</param>
            <param name="i3">To rectangle (Or -1 for parent Or -2 for absolute positioning)</param>
            <param name="i4">&amp;lt;define&amp;gt;LAYOUT_CONSTR&amp;lt;/define&amp;gt; To constraint flag</param>
            <param name="d5">Offset modifier</param>
            <param name="d6">Multiplicative modifier</param>
            <remarks>
Constraints can be applied between 2 rectangles in the layout, or to 1 rectangle with
absolute positioning. Use the constraints to control left, right, bottom, top,
width, height, or centering configurations. Examples:

(ordered as rectangle from, constraint from, rectangle to, constraint to, offset modifier, multiplicative modifier)

A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, 0, 0, 1.0 		               Set left position of A equal to left pos of B
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_RIGHT&amp;lt;/define&amp;gt;, 0, 0, 1.0		               Set left pos of A equal to right of B

The offset modifier is used for additive manipulation of constraints
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, 10, 0, 1.0		               Set left pos of A equal to left of B, plus 10
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_BOTTOM&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_TOP&amp;lt;/define&amp;gt;, -20, 0, 1.0	               Set bottom of A equal to top of B, minus 20

Multiplicative manipulation of constraints
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, 0, 0.5	                  Set the width of A equal to 0.5 times the width of B
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_HEIGHT&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, 0, 1.2	                  Set the height of A equal to 1.2 times the width of B

You can use BOTH the multiplicative and offset modifiers in conjunction (multiplicative gets precedence)
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, 10, 0.5 	                  A(width) = (0.5 * B(width)) + 10
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, -20, 0.1	                  A(left) = (0.1 * B(width)) + (-20)

If second node is -2, use absolute positioning
A,&amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;,-2,&lt;ignored&gt;,25,&lt;ignored&gt;,&lt;ignored&gt; 	               Position left of A at position 25
A,&amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;,-2,&lt;ignored&gt;,30,&lt;ignored&gt;,&lt;ignored&gt;	               Set width of A to 30

Use the MOVE constraints to move an entire window without resizing
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_MOVEL&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_LEFT&amp;lt;/define&amp;gt;, 0, 0, 1.0	                  Move node A, align left with left side of B
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_MOVEL&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_RIGHT&amp;lt;/define&amp;gt;, 0, 0, 1.0	               Move node A, align left with right side of B
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_MOVET&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_WIDTH&amp;lt;/define&amp;gt;, 0, 0, 1.0	               Move node A, align bottom to position equal to width of B
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_MOVER&amp;lt;/define&amp;gt;, B, &amp;lt;define&amp;gt;LAYOUT_CONSTR_RIGHT&amp;lt;/define&amp;gt;, 10, 1.1	                  Move node A, align right to 1.1*right of B, plus 10
A, &amp;lt;define&amp;gt;LAYOUT_CONSTR_MOVEL&amp;lt;/define&amp;gt;, NULL, 10, 0, 1.0	                                 Move node A, align left at position 10
</remarks>
            <returns>
0 - OK
1 - Error
</returns>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.GetRectName(System.Int32,System.String@)">
            <summary>Gets an optional name the current info for a rectangle or the parent layout</summary>
            <param name="i1">Rectangle to get info for (-1 for parent)</param>
            <param name="str2">Buffer for name of the rectangle</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.GetRectangle(System.Int32,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Gets the current bounds for a rectangle or the parent layout</summary>
            <param name="i1">Rectangle to get info for (-1 for parent)</param>
            <param name="d2">Rectangle Min X</param>
            <param name="d3">Rectangle Min Y</param>
            <param name="d4">Rectangle Max X</param>
            <param name="d5">Rectangle Max Y</param>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String)">
            <summary>Creates a layout calculation object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Initial number of objects (may be 0)</param>
            <param name="str2">Optional name of parent layout (may be empty)</param>
            <returns>LAYOUT object.</returns>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.ClearConstraints">
            <summary>Remove all constraints from layout</summary>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.ClearAll">
            <summary>Remove all children and constraints from layout</summary>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CLAYOUT.CalculateRects(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Calculate new positions based on initial conditions and constraints</summary>
            <param name="d1">Parent Rectangle Min X after calculation</param>
            <param name="d2">Parent Rectangle Min Y after calculation</param>
            <param name="d3">Parent Rectangle Max X after calculation</param>
            <param name="d4">Parent Rectangle Max Y after calculation</param>
            <remarks>
Use iGetRectangle to obtain the results for the other rectangles. Depending
on the constraints set the parent rectangle may also change
after the calculation (returned here for convenience).
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CLAYOUT">
            <summary>

       Layout class for generic relative layout calculation

       The relative layout algorithm allows a logical organization of layout rectangles.
       You can set constraints with English-like semantics. For example:

       "Set the left side of rectangle 1 equal to the right side of rectangle 2 plus 10 pixels."
       "Set the bottom of rectangle 1 to 25 percent of the height of rectangle 2."
       "Move node 1 such that its bottom is equal to the top of rectangle 2 minus 10 pixels."

       The last constraint set would enjoy priority over any others as it would be
       the last one that would influence the rectangle calculations. See the notes for iSetConstraint
       for more details.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetZoneValue(System.Int32,System.Double)">
            <summary>Set the value in a zone of the ITR</summary>
            <param name="i1">Number of the zone to set.</param>
            <param name="d2">The value to set</param>
            <remarks>Valid indices are 0 to N-2, where N is the size of the ITR.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetZoneColor(System.Int32,System.Int32)">
            <summary>Set the color in a zone of the ITR</summary>
            <param name="i1">Number of the zone to set.</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_COLOR&amp;lt;/define&amp;gt;</param>
            <remarks>Valid indices are 0 to N-1, where N is the size of the ITR.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetSize(System.Int32)">
            <summary>Set the number of zones in an ITR</summary>
            <param name="i1">Number of zones to set ITR to.</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetDataLimits(System.Double,System.Double)">
            <summary>Set ITR max/min data limits.</summary>
            <param name="d1">Data minimum value</param>
            <param name="d2">Data maximum value</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.iDefaultColorMethod(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Return the user-defined global default color method.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>One of &amp;lt;define&amp;gt;ITR_ZONE_EQUALAREA&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;ITR_ZONE_LINEAR&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;ITR_ZONE_NORMAL&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;ITR_ZONE_LOGLINEAR&amp;lt;/define&amp;gt;</returns>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetColorModel(System.Int32)">
            <summary>Set the color model of an ITR.</summary>
            <param name="i1">&amp;lt;define&amp;gt;ITR_COLOR_MODEL&amp;lt;/define&amp;gt;</param>
            <available_version>5.0.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetBrightContrast(System.Double,System.Double)">
            <summary>Set the brightness of the ITR colors</summary>
            <param name="d1">0.0 - black; 0.5 normal; 1.0 white</param>
            <param name="d2">0.0 - flat; 1.0 normal</param>
            <remarks>
Brightness settings:
0.0   - black
0.5   - normal (no change)
1.0   - white

Contrast
0.0   - flat
1.0   - full contrast (normal)
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SetAggMap(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String,GeoEngine.Core.GXNetX.CITR)">
            <summary>Set ITR to an AGG in map</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP on which to place the view</param>
            <param name="str2">AGG group name</param>
            <param name="oITR3">ITR object to set</param>
            <remarks>See the CreateMap_ITR function</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize an ITR to a BF</summary>
            <param name="oBF1">BF to serialize to</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SaveFile(System.String)">
            <summary>Save to any type (based on the extension of the input file name).</summary>
            <param name="str1">File name</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.SaveA(System.String)">
            <summary>Save to an ASCII file, ZON, TBL or ER-Mapper LUT</summary>
            <param name="str1">File name</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.rGetZoneValue(System.Int32)">
            <summary>Get the value in a zone of the ITR</summary>
            <param name="i1">Number of the zone to set.</param>
            <remarks>Valid indices are 0 to N-2, where N is the size of the ITR.</remarks>
            <returns>The value of the specified zone.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.rGetBrightness">
            <summary>Get the brightness setting of the ITR</summary>
            <remarks>
Brightness can range from -1.0 (black) to 1.0 (white).
This brightness control is relative to the normal color
when the ITR is created.
</remarks>
            <returns>The brightness setting of the ITR</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.PowerZone(System.Int32)">
            <summary>Modified ITR zone values to 10 (or e) raized to the power of the values</summary>
            <param name="i1">&amp;lt;define&amp;gt;ITR_POWER&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.Normal(System.Double,System.Double,System.Double,System.Double)">
            <summary>Calculate a normal distribution transform.</summary>
            <param name="d1">Standard deviation</param>
            <param name="d2">Mean</param>
            <param name="d3">Expansion, normally 1.0</param>
            <param name="d4">Color contour interval or dummy for none</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.LogLinear(System.Double,System.Double,System.Double)">
            <summary>Calculate a log transform.</summary>
            <param name="d1">Minimum ( &gt; 0)</param>
            <param name="d2">Maximum ( &gt; minimum)</param>
            <param name="d3">Color contour interval or dummy for none</param>
            <remarks>The function name is a misnomer. This is a pure log transform.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.LoadA(System.String)">
            <summary>Load to an ASCII file, ZON, TBL or ER-Mapper LUT</summary>
            <param name="str1">File name</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.Linear(System.Double,System.Double,System.Double)">
            <summary>Calculate a linear transform.</summary>
            <param name="d1">Minimum</param>
            <param name="d2">Maximum</param>
            <param name="d3">Color contour interval or dummy for none</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.iGetZoneModelType">
            <summary>Get the ITR zone model (e.g. Linear, LogLin, Equal Area).</summary>
            <remarks>
This function may be used to determine if a color
transform is included in an ITR.
</remarks>
            <returns>&amp;lt;define&amp;gt;ITR_ZONE_MODEL&amp;lt;/define&amp;gt;</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.iGetSize">
            <summary>Get the number of zones in an ITR</summary>
            <returns>The number of zones.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.iColorValue(System.Double)">
            <summary>Transform single data value to color</summary>
            <param name="d1">Data value</param>
            <returns>&amp;lt;define&amp;gt;MVIEW_COLOR&amp;lt;/define&amp;gt;</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.GetZoneColor(System.Int32,System.Int32@)">
            <summary>Get the color in a zone of the ITR</summary>
            <param name="i1">Number of the zone to set.</param>
            <param name="i2">&amp;lt;define&amp;gt;MVIEW_COLOR&amp;lt;/define&amp;gt;</param>
            <remarks>Valid indices are 0 to N-1, where N is the size of the ITR.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.GetREG">
            <summary>Get the ITR's REG</summary>
            <returns>REG object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.GetDataLimits(System.Double@,System.Double@)">
            <summary>Get ITR max/min data limits.</summary>
            <param name="d1">Data minimum value (or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not set)</param>
            <param name="d2">Data maximum value (or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not set)</param>
            <remarks>
In some ITRs, especially those defined and
embedded inside grid (IMG) objects, the
actual data minimum and maximum values are
stored. This function retrieves those values.
This is NOT true of all ITR objects, and in
those cases dummy values will be returned.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.EqualArea(GeoEngine.Core.GXNetX.CST,System.Double)">
            <summary>Calculate an equal area transform.</summary>
            <param name="oST1">Stat object with a histogram</param>
            <param name="d2">Color contour interval or dummy for none</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create an ITR object from a BF</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1">BF to serialize from</param>
            <returns>ITR object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.CreateMap(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String)">
            <summary>Create ITR from Map with AGG Group name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP on which to place the view</param>
            <param name="str2">AGG Group name</param>
            <returns>ITR object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.CreateIMG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String,System.Int32,System.Double)">
            <summary>Create an ITR for an image.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1" />
            <param name="str2">Color table name, NULL for default</param>
            <param name="i3">&amp;lt;define&amp;gt;ITR_ZONE&amp;lt;/define&amp;gt;</param>
            <param name="d4">Color contour interval or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;</param>
            <remarks>
The &amp;lt;define&amp;gt;ITR_ZONE_DEFAULT&amp;lt;/define&amp;gt; model will ask the IMG to provide
a model if it can.

If a shaded relief model is selected, a shaded image
will be created and a shaded image file will be created with
the same name as the original grid but with the suffux "_s"
added to the name part of the grid.
</remarks>
            <returns>ITR object</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.CreateFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create an ITR object from an itr, tbl, zon, lut file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name, type determined from extension</param>
            <returns>ITR object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create an ITR object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>ITR object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.Copy(GeoEngine.Core.GXNetX.CITR)">
            <summary>Copies ITRs</summary>
            <param name="oITR1">ITR Source</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.ColorVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get color transform of a VV.</summary>
            <param name="oVV1">Input VV of values (none-string)</param>
            <param name="oVV2">Output VV of colors (type INT)</param>
            <remarks>
If the input value is a dummy, then the output color
is 0 (no color).
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CITR.ChangeBrightness(System.Double)">
            <summary>Change the brightness.</summary>
            <param name="d1">-1.0 - black; 0.0 no change; 1.0 white</param>
            <remarks>
0.0 brightness does nothing.
-1.0 to 0.0 makes colors darker, -1.0 is black
0.0 to 1.0 makes colors lighter, 1.0 is white
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CITR">
            <summary>

       The ITR class provides access to ITR files. An ITR file maps
       ranges of values to specific colors. The ITR object is typically
       used in conjunction with MVIEW objects (see MVIEW and MVU).
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.ReprojectSectionGrid(GeoEngine.Core.GXNetX.CIPJ,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Reproject a section grid</summary>
            <param name="oIPJ1">
Reprojected IPJ on input (need not include an orientation). On output contains the same
					type of orientation as the initial IPJ, adjusted to be in the same location.
</param>
            <param name="d2">X origin of grid (input initial value, output new value)</param>
            <param name="d3">Y origin of grid (input initial value, output new value)</param>
            <param name="d4">X cell size of grid (input initial value, output new value)</param>
            <param name="d5">Y cell size of grid (input initial value, output new value)</param>
            <param name="d6">Grid rotation (degrees CCW) (input initial value, output new value)</param>
            <remarks>
Reproject a section grid to a new IPJ, adjusting its orientation and registration so that
it remains in the same location.
</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Set3DMatrixOrientation(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Apply a 3D orientation directly using matrix coefficients.</summary>
            <param name="d1">Row 0 Element 0</param>
            <param name="d2">Row 0 Element 1</param>
            <param name="d3">Row 0 Element 2</param>
            <param name="d4">Row 0 Element 3</param>
            <param name="d5">Row 1 Element 0</param>
            <param name="d6">Row 1 Element 1</param>
            <param name="d7">Row 1 Element 2</param>
            <param name="d8">Row 1 Element 3</param>
            <param name="d9">Row 2 Element 0</param>
            <param name="d10">Row 2 Element 1</param>
            <param name="d11">Row 2 Element 2</param>
            <param name="d12">Row 2 Element 3</param>
            <param name="d13">Row 3 Element 0</param>
            <param name="d14">Row 3 Element 1</param>
            <param name="d15">Row 3 Element 2</param>
            <param name="d16">Row 3 Element 3</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Get3DMatrixOrientation(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Gets the coefficients of a 3D matrix orientation.</summary>
            <param name="d1">Row 0 Element 0</param>
            <param name="d2">Row 0 Element 1</param>
            <param name="d3">Row 0 Element 2</param>
            <param name="d4">Row 0 Element 3</param>
            <param name="d5">Row 1 Element 0</param>
            <param name="d6">Row 1 Element 1</param>
            <param name="d7">Row 1 Element 2</param>
            <param name="d8">Row 1 Element 3</param>
            <param name="d9">Row 2 Element 0</param>
            <param name="d10">Row 2 Element 1</param>
            <param name="d11">Row 2 Element 2</param>
            <param name="d12">Row 2 Element 3</param>
            <param name="d13">Row 3 Element 0</param>
            <param name="d14">Row 3 Element 1</param>
            <param name="d15">Row 3 Element 2</param>
            <param name="d16">Row 3 Element 3</param>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.GetFromBinaryAsString(System.String@)">
            <summary>Get IPJ from binary-as-string</summary>
            <param name="str1">Binary as string returned</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetFromBinaryAsString(System.String)">
            <summary>Set IPJ from binary-as-string</summary>
            <param name="str1">Binary as string</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetXML(System.String)">
            <summary>Set an IPJ from a Geosoft Metadata XML string</summary>
            <param name="str1">XML string to set</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetWMSCoordSys(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set coordinate system from a WMS coordsys string.</summary>
            <param name="str1">WMS style coordinate string</param>
            <param name="d2">Minimum X bounding box</param>
            <param name="d3">Minimum Y</param>
            <param name="d4">Maximum X</param>
            <param name="d5">Maximum Y</param>
            <remarks>
WMS coordinate strings supported:


EPSG:code

where "code" is the EPSG code number
"EPSG:4326"  is geographic "WGS 84" (see datum.csv)
"EPSG:25834" is projected "ETRS89 / UTM zone 34N"
(see ipj_pcs.csv)

The bounding box for EPSG systems must be defined in the
EPSG coordinate system.  If a bounding box is provided,
it will not be changed.


AUTO:wm_id,epsg_units,lon,lat (see OGC documentation)

for "AUTO" coordinates, the "epsg_units" is the units
of the bounding box.  This procedure will transform
the supplied bounding box from these units to the
units of the projection.  Normally, this is from
long/lat (9102) to metres (9001).
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetSectionView(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set section orientation parameters</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Section azimuth - degrees CCW from north</param>
            <param name="d5">Section swing -90 &lt; swing &lt; 90.</param>
            <remarks>
This sets up the orientation of an IPJ for section view plots,
for instance in Wholeplot. In addition, when viewed in a map,
a view with this IPJ will give a status bar location (X, Y, Z)
of the actual location in space, as opposed to just the X, Y of
the view plane itself.
Swung sections are tricky because they are set up for section
plots in such a way that the vertical axis remains "true"; points
are projected horizontally to the viewing plane, independent of the
swing angle. In other words, all locations in 3D space viewed using this
projection will plot on the same horizontal line in the map view.
This function is NOT suitable for simply creating
an orientation for a dipping grid or view.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetPlanView(System.Double,System.Double,System.Double,System.Double)">
            <summary>Set plan orientation parameters.</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Rotation CCW from normal XY coords</param>
            <remarks>
This sets up the orientation of an IPJ for plan view plots,
for instance in Wholeplot. These differ from regular plan
map views in that the elevation of the view plane is set, and
the view may be rotated. In addition, when viewed in a map,
a view with this IPJ will give a status bar location (X, Y, Z)
of the actual location in space, as opposed to just the X, Y of
the view plane itself.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetNormalSectionView(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set normal section orientation parameters</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Section azimuth - degrees CCW from north</param>
            <param name="d5">Section swing -90 &lt; swing &lt; 90.</param>
            <remarks>
This section is the type where values are projected
normal to the section, and the "Y" values in a grid
do not necessarily correspond to the elvations for a swung section.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetMICoordSys(System.String,System.String)">
            <summary>Set coordinate system from a MapInfo coordsys command</summary>
            <param name="str1">MapInfo Coordinate System</param>
            <param name="str2">MapInfo Units</param>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetMethodParm(System.Int32,System.Double)">
            <summary>Set projection method parameter</summary>
            <param name="i1">&amp;lt;define&amp;gt;IPJ_CSP&amp;lt;/define&amp;gt;</param>
            <param name="d2">Parameter value</param>
            <remarks>If parameter is not valid, nothing happens.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetGXF(System.String,System.String,System.String,System.String,System.String)">
            <summary>Set coordinate system from GXF style strings.</summary>
            <param name="str1">"projection name" or PCS_NAME from ipj_pcs.csv (datum / projection) or EPSG coordinate system code number or "&lt;file.prj&gt;" projection file name or "&lt;file.wrp&gt;" warp file name</param>
            <param name="str2">"datum name"[, major axis, elipticity, prime meridian] or DATUM from datum.csv or EPSG datum code number</param>
            <param name="str3">"method name", parameters (P1 through P8) or "projection name"[,"method name","Units",P1,P2...] or TRANSFORM from transform.csv or EPSG transform method code number</param>
            <param name="str4">"unit name", convertion to metres or UNIT_LENGTH from units.csv</param>
            <param name="str5">"local transform name"[,dX,dY,dZ,rX,rY,rZ,Scale] or DATUM_TRF from datumtrf.csv or AREA_OF_USE from ldatum.csv or EPSG local datum transform code number</param>
            <remarks>
Simplest Usage:

The coordinate system can be resolved from the "coordinate system name"
if the name is specified using an EPSG number or naming convention such as:

"datum / projection"  (example: "Arc 1960 / UTM zone 37S")

Where:
"datum" is the EPSG datum name (eg. NAD83).  All supported datums are
listed in ...usercsvdatum.csv.
"projection" is the EPSG coordinate system map projection.
datum name (eg. "UTM zone 10N").  All supported coordinate
system projections are listed in ...user/csv/transform.csv.
All EPSG known combined coordinate systems of the earth are
listed in ...user/csv/ipj_pcs.csv.

To define a geographic (longitude, latitude) oordinate system, specify
the datum name alone (ie "Arc 1960").  EPSG numbers can also be used, so in
the example above the name can be "21037".

The coordinate system may also be oriented arbitrarily in 3D relative to
the base coordinate system by specifying the orientation as a set of
6 comma-separated values between angled brackets after the coordinate 
system name, e.g:

::

    "datum / projection"&lt;oX,oY,oZ,rX,rY,rZ&gt;
    21037&lt;oX,oY,oZ,rX,rY,rZ&gt;

where:

oX,oY,oZ    is the location of the local origin on the CS

rX,rY,rZ    are rotations in degrees azimuth (clockwise) of
           the local axis frame around the X, Y and Z axis
           respectively.  A simple plane rotation will only have
           a rotation around Z.  

For example:

::

    "Arc 1960 / UTM zone 37S"&lt;525000,2500000,0,0,0,15&gt;

defines a local system with origin at (525000,2500000)
with a rotation of 15 degrees azimuth.

Orientation parameters not defined will default to align with the
base CS,  Note that although allowed, it does not make sense to have
an orientation on a geographic coordinate system (long,lat).

Complete usage:

A coordinate system can also be fully described by providing an additional
four strings that define the datum, map projection, length units and
prefered local datum transform.  Refer to GXF revision 3 for further detail:
http://www.geosoft.com/resources/goto/GXF-Grid-eXchange-File

Note that coordinate system reference tables sre maintained in csv files
located in the .../user/csv folder found with the Geosoft installation files,
which will usually be located here:
C:\Program Files (x86)\Geosoft\Oasis montaj\user\csv

The "datum" string can use a datum name defined in the "datum.csv" file,
or the local datum name from datumtrf.csv, or the local datum description
from ldatum.csv.
For a non-EPSG datum, you can define your own datum parameters in the
Datum stringfield as follows:

::

    "*YourDatumName",major_axis,flattening(or eccentricity)[,prime_meridian]

where
The * before "YourDatumName" indicates this is a non-EPSG name.
major_axis is in metres.
flattening less than 0 is interpreted as eccentricity (0 indicates a sphere).
prime_meridian is optional, specified in degrees of longitude relative to
Greenwich.

The "Projection" can contain a projection system defined in the
"transform.csv" file, or the name of a projection type followed by projection
parameters.  Geographic coordinates systems (long/lat only) must leave
"projection" blank.

Projection names not defined in "transform.csv" can be defined in the
"projection" string as follows:

::

    method,length_units,P1,P2,...

where:

   method
        is a method from the table "transform_parameters.csv".

   length_units
        is a "Unit_length" from units.csv.
        P1 through P8 (or fewer) are the projection parameters for the method
        as defined in "transform_parameters.csv", and in the order defined.
        Parameters that are blank in "transform_parameters.csv" are omitted
        from the list so that each method will have a minimum list of
        parameters.

Angular parameters must always be degrees, and may be defined a
decimal degree fromat, or "DEG.MM.SS.ssss".
Distance parameters (False Northing and False Easting) must be
defined in the "length_units" (string 4).

Examples:

::

   Geographic long,lat on datum "Arc 1960":
   "4210","","","",""
   "Arc 1960","","","",""
   "","Arc 1960","","",""

   Projected Coordinate System, UTM zone 37S
   "21037","","","",""
   "","4210","16137","",""
   ""Arc 1960 / UTM zone 37S"","","","",""
   "",""Arc 1960"","UTM zone 37S","",""
   "",""Arc 1960"","UTM zone 37S","m",""
   "",""Arc 1960"","UTM zone 37S","m,1.0",""
   "",""Arc 1960"","UTM zone 37S","m,1.0","");
   "",""Arc 1960"","UTM zone 37S","m","Arc 1960 to WGS 84 (1)"

   Locally oriented coordinate system (origin at 525000,2500000, rotated 15 deg):
   "21037&lt;525000,2500000,0,0,0,15&gt;","","","",""
   "&lt;525000,2500000,0,0,0,15&gt;","4210","16137","",""
   ""Arc 1960 / UTM zone 37S"&lt;525000,2500000,0,0,0,15&gt;","","","",""
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetESRI(System.String)">
            <summary>Set coordinate system from an ESRI prj coordinate string</summary>
            <param name="str1">ESRI prj format projection string</param>
            <remarks>
If the projection is not supported in Geosoft, the
IPJ will be unknown.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetDepthSectionView(System.Double)">
            <summary>Set depth section orientation parameters</summary>
            <param name="d1">View Y value for Depth = 0.0.</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetCrookedSectionView(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Set up the crooked section view.</summary>
            <param name="oVV1">Section X locations (e.g. distance along the curve)</param>
            <param name="oVV2">True X</param>
            <param name="oVV3">True Y</param>
            <param name="i4">Use logarithmic Y-axis (usually for data profiles) 0:No, 1:Yes</param>
            <remarks>
A non-plane section. It is a vertical section which curves along a path in
(X, Y).
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Set3DViewFromAxes(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set 3D orientation parameters</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">X axis X component</param>
            <param name="d5">X axis Y component</param>
            <param name="d6">X axis Z component</param>
            <param name="d7">Y axis X component</param>
            <param name="d8">Y axis Y component</param>
            <param name="d9">Y axis Z component</param>
            <param name="d10">Scaling in X</param>
            <param name="d11">Scaling in Y</param>
            <param name="d12">Scaling in Z</param>
            <remarks>
Sets up translation, scaling and rotation in all three directions
for 3D objects, based on input origin and X and Y axis vectors.
</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Set3DViewEx(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Set 3D orientation parameters with new flags</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Rotation in X</param>
            <param name="d5">Rotation in Y</param>
            <param name="d6">Rotation in Z</param>
            <param name="d7">Scaling in X</param>
            <param name="d8">Scaling in Y</param>
            <param name="d9">Scaling in Z</param>
            <param name="i10">&amp;lt;define&amp;gt;IPJ_3D_ROTATE&amp;lt;/define&amp;gt;</param>
            <param name="i11">&amp;lt;define&amp;gt;IPJ_3D_FLAG&amp;lt;/define&amp;gt;</param>
            <remarks>
Sets up translation, scaling and rotation in all three directions
for 3D objects.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Set3DView(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Set 3D orientation parameters</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Rotation in X</param>
            <param name="d5">Rotation in Y</param>
            <param name="d6">Rotation in Z</param>
            <param name="d7">Scaling in X</param>
            <param name="d8">Scaling in Y</param>
            <param name="d9">Scaling in Z</param>
            <remarks>
Sets up translation, scaling and rotation in all three directions
for 3D objects.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Set3DInvertedAngles(System.Int32)">
            <summary>Set whether the angles in this view are inverted (must be 3D already)</summary>
            <param name="i1">Inverted (0 or 1)</param>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Set3DInverted(System.Int32)">
            <summary>Set whether a view is inverted (must be 3D already)</summary>
            <param name="i1">Inverted (0 or 1)</param>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SerialXML(System.String)">
            <summary>Write the IPJ as a Geosoft MetaData XML object</summary>
            <param name="str1">Name of file to export to</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SerialISOXML(System.String)">
            <summary>Write the IPJ as a ISO MetaData XML object</summary>
            <param name="str1">Name of file to export to</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SerialFGDCXML(System.String)">
            <summary>Write the IPJ as a FDGC MetaData XML object</summary>
            <param name="str1">Name of file to export to</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Serial(GeoEngine.Core.GXNetX.CBF)">
            <summary>Serialize IPJ to a BF.</summary>
            <param name="oBF1" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.rUnitScale(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double)">
            <summary>Get a unit scale (m/unit) given a name</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Unit name, abbreviation or full name</param>
            <param name="d2">Default to return if name not found</param>
            <remarks>If name cannot be found, returns default.</remarks>
            <returns>Scale factor m/unit</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.rGetNorthAzimuth(System.Double,System.Double)">
            <summary>Return the azimuth of geographic North at a point.</summary>
            <param name="d1">Input X location</param>
            <param name="d2">Input Y location</param>
            <remarks>
If the IPJ is not a projected coordinate system
then the returned azimuth is &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;;
</remarks>
            <returns>Azimuth (degrees CW) of geographic north from grid north at a location.</returns>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.rGetMethodParm(System.Int32)">
            <summary>Get projection method parameter</summary>
            <param name="i1">&amp;lt;define&amp;gt;IPJ_CSP&amp;lt;/define&amp;gt;</param>
            <returns>Parameter setting, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if dot used</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Read(System.Int32,System.String,System.String,System.String)">
            <summary>Read and define an IPJ from a standard file.</summary>
            <param name="i1">&amp;lt;define&amp;gt;IPJ_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="str2">String 1</param>
            <param name="str3">String 2</param>
            <param name="str4">String 3</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.NewBoxResolution(GeoEngine.Core.GXNetX.CIPJ,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>Determine a data resolution in a new coordinate system</summary>
            <param name="oIPJ1">New IPJ</param>
            <param name="d2">Data resolution in original IPJ</param>
            <param name="d3">X minimum of bounding box in new IPJ</param>
            <param name="d4">Y minimum</param>
            <param name="d5">X maximum</param>
            <param name="d6">Y maximum</param>
            <param name="d7">Minimum data resolution in new IPJ,</param>
            <param name="d8">Maximum data resolution in new IPJ</param>
            <param name="d9">Diagonal data resolution in new IPJ</param>
            <remarks>
if there are any problems reprojecting, new resolutions will
dummy.  The conversion to new resolution is based on measurements
along the four edges and two diagonals.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.MakeProjected(System.Double,System.Double,System.Double,System.Double)">
            <summary>Create a default projected coordinate system from lat-long ranges.</summary>
            <param name="d1">Minimum longitude</param>
            <param name="d2">Minimum latitude</param>
            <param name="d3">Maximum longitude</param>
            <param name="d4">Maximum latitude</param>
            <remarks>
Terminates with invalid or unsupported ranges.
If the map crosses the equator, or if map is within 20 degrees of the
equator, uses an equatorial mercator projection centered at the central
longitude. Otherwise, uses a Lambert Conic Conformal (1SP) projection
for the map. Global maps outside of +/- 70 degrees latitude are not
supported.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iWarpType">
            <summary>Obtain the warp type of an IPJ.</summary>
            <returns>&amp;lt;define&amp;gt;IPJ_WARP&amp;lt;/define&amp;gt;</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iWarpsAreTheSameWithinASmallTolerance(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Same as iWarpsAreTheSame_IPJ, but allows for small numerical differences</summary>
            <param name="oIPJ1">IPJ 2</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iWarpsAreTheSame(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Are these two warps the same?</summary>
            <param name="oIPJ1">IPJ 2</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iWarped">
            <summary>Does IPJ contain a warp?</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IUnitName(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Int32,System.String@)">
            <summary>Get a unit name given a scale factor</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Factor to meters</param>
            <param name="i2">&amp;lt;define&amp;gt;IPJ_UNIT&amp;lt;/define&amp;gt;</param>
            <param name="str3">Name returned, "" if cannot find unit</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iSupportDatumTransform(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Can we transform between these two datums?</summary>
            <param name="oIPJ1">IPJ 2</param>
            <remarks>
To transform between different datums requires the use of a local
datum transform.  The local datum transform can be defined when
a coordinate system is created, but the definition is optional.
This function will test that the local datum transforms are defined.
Note that a coordinate transformation between datums without a
local datum transform is still possible, but only the effect of
ellipsoid shape will be modelled in the transform.
</remarks>
            <returns>
0 - No
1 - Yes, either because both CS are on the same datum,
or because a local datum transform is defined
for each coordinate system.
</returns>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iSourceType">
            <summary>Get IPJ source type</summary>
            <returns>&amp;lt;define&amp;gt;IPJ_TYPE&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iSetGXF(System.String,System.String,System.String,System.String,System.String)">
            <summary>Same as SetGXF_IPJ, but fails gracefully.</summary>
            <param name="str1">"projection name" or PCS_NAME from ipj_pcs.csv (datum / projection) or EPSG coordinate system code number or "&lt;file.prj&gt;" projection file name or "&lt;file.wrp&gt;" warp file name</param>
            <param name="str2">"datum name"[, major axis, elipticity, prime meridian] or DATUM from datum.csv or EPSG datum code number</param>
            <param name="str3">"method name", parameters (P1 through P8) or "projection name"[,"method name","Units",P1,P2...] or TRANSFORM from transform.csv or EPSG transform method code number</param>
            <param name="str4">"unit name", convertion to metres or UNIT_LENGTH from units.csv</param>
            <param name="str5">"local transform name"[,dX,dY,dZ,rX,rY,rZ,Scale] or DATUM_TRF from datumtrf.csv or AREA_OF_USE from ldatum.csv or EPSG local datum transform code number</param>
            <remarks>
SetGXF_IPJ will fail and terminate the GX if anything goes wrong (e.g. having a wrong
parameter). If this function fails, it simply returns 0 and leaves the
IPJ unchanged.
</remarks>
            <returns>
0 - error in setting IPJ, input IPJ unchanged.
1 - success: IPJ set using input values.
</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iProjectionTypeIsFullySupported">
            <summary>Is the projection type fully supported?</summary>
            <remarks>
This function checks only the projected coordinated system
in the IPJ object, so should only be used with projections
of type &amp;lt;define&amp;gt;IPJ_TYPE_PCS&amp;lt;/define&amp;gt;.
This function does not test the validity of datums or local
datum transforms.
</remarks>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iHasSectionOrientation">
            <summary>Does this projection contain an orientation used by section plots?</summary>
            <remarks>
Returns     1 if there is a section orientation

The following orientations can be used to orient sections or section views:

&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION&amp;lt;/define&amp;gt; - Target-type sections with Z projection horizontally
&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION_NORMAL&amp;lt;/define&amp;gt; - Like &amp;lt;define&amp;gt;IPJ_ORIENT_SECTION&amp;lt;/define&amp;gt;, but Z projects
perpendicular to the secton plane.
&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION_CROOKED&amp;lt;/define&amp;gt; - Crooked sections
&amp;lt;define&amp;gt;IPJ_ORIENT_3D&amp;lt;/define&amp;gt; - Some Sections extracted from a voxel - e.g. VoxelToGrids,
as the voxel can have any orientation in 3D.

It is sometimes important to ignore the section orientation, for instance
when rendering a grid in 3D where it has been located on a plane.
</remarks>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>8.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iOrientationsAreTheSameWithinASmallTolerance(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Same as iOrientationsAreTheSame_IPJ, but allows for small numerical differences</summary>
            <param name="oIPJ1">IPJ 2</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iOrientationsAreTheSame(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Are these two orientations the same?</summary>
            <param name="oIPJ1">IPJ 2</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iIsGeographic">
            <summary>See if this projection is geographic</summary>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iIs3DInvertedAngles">
            <summary>Are the angles in this 3D View inverted ?</summary>
            <returns>
0 - No
1 - Yes (inverted)
</returns>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iIs3DInverted">
            <summary>Is this 3D View inverted ?</summary>
            <returns>
0 - No
1 - Yes (inverted)
</returns>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iHasProjection">
            <summary>Does the IPJ object contain a projection?</summary>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetXML(System.String@)">
            <summary>Get an Geosoft Metadata XML string from an IPJ</summary>
            <param name="str1">XML string returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetUnits(System.Double@,System.String@)">
            <summary>Get unit parameters</summary>
            <param name="d1">Factor to meters</param>
            <param name="str2">Abbreviation</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetOrientationName(System.String@)">
            <summary>Get a name for display purposes from IPJ</summary>
            <param name="str1">Name returned</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iGetOrientation">
            <summary>Get IPJ orientation in space.</summary>
            <remarks>
Projections can be created oriented horizontally (e.g. in plan maps)
or vertically (in section maps - Wholeplot and IP).
</remarks>
            <returns>&amp;lt;define&amp;gt;IPJ_ORIENT&amp;lt;/define&amp;gt;</returns>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetVCS(System.String)">
            <summary>Set the Vertical Coordinate System in the IPJ name string</summary>
            <param name="str1">New name (See Valid inputs above).</param>
            <remarks>
The vertical coordinate system (vcs) describes the datum used for vertical coordinates. The vcs name, if
known, will appear in square brackets as part of the coordinate system name.

Examples:

::

   "WGS 84 [geoid]"
   "WGS 84 / UTM zone 12S" - the vcs is not known.
   "WGS 84 / UTM zone 12S [NAVD88]"

Valid inputs:

    "NAVD88"          - Clears existing vcs, if any, and sets the VCS name to "NAVD88".
    ""                - Clears the vcs
</remarks>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetName(System.Int32,System.String@)">
            <summary>Get an IPJ name</summary>
            <param name="i1">&amp;lt;define&amp;gt;IPJ_NAME&amp;lt;/define&amp;gt;</param>
            <param name="str2">Name returned</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetMICoordSys(System.String@,System.String@)">
            <summary>Store coordinate system in MapInfo coordsys pair</summary>
            <param name="str1">MapInfo coordsys string returned</param>
            <param name="str2">MapInfo unit string returned</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetGXF(System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>Store coordinate system in GXF style strings.</summary>
            <param name="str1">Projection name</param>
            <param name="str2">Datum name, major axis, elipticity</param>
            <param name="str3">Method name, parameters</param>
            <param name="str4">Unit name, factor</param>
            <param name="str5">Local transform name,dX,dY,dZ,rX,rY,rZ,Scale</param>
            <remarks>
See GXF revision 3 for string descriptions
All strings must be the same length, 160 (&amp;lt;define&amp;gt;STR_GXF&amp;lt;/define&amp;gt;) recommended.
Strings too short will be truncated.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetESRI(System.String@)">
            <summary>Store coordinate system in an ESRI prj coordinate string</summary>
            <param name="str1">ESRI projection string returned</param>
            <remarks>
If the projection is not supported in ESRI, the projection
string will be empty.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.IGetDisplayName(System.String@)">
            <summary>Get a name for display purposes from IPJ</summary>
            <param name="str1">Name returned</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iCoordinateSystemsAreTheSameWithinASmallTolerance(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Same as iCoordinateSystemsAreTheSame_IPJ, but allows for small numerical differences</summary>
            <param name="oIPJ1">IPJ 2</param>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iCoordinateSystemsAreTheSame(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Are these two coordinate systems the same?</summary>
            <param name="oIPJ1">IPJ 2</param>
            <remarks>This does not compare LDT information (use iCompareDatums_IPJ for that).</remarks>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iConvertWarpVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Converts a set of X &amp; Y VVs to the new IPJ plane. The Z is assumed to be 0</summary>
            <param name="oVV1">X VV coordinates converted on output</param>
            <param name="oVV2">Y VV coordinates converted on output</param>
            <param name="i3">1 -  Forward (raw -&gt; coordinate) , 0 - (coordinate -&gt; raw)</param>
            <returns>0 if ok - 1 otherwise</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iConvertWarp(System.Double@,System.Double@,System.Double@,System.Int32)">
            <summary>Converts a point X, Y, Z to the new IPJ plane.</summary>
            <param name="d1">X coordinates converted on output</param>
            <param name="d2">Y coordinates converted on output</param>
            <param name="d3">Z coordinates converted on output</param>
            <param name="i4">1 -  Forward (raw -&gt; coordinate) , 0 - (coordinate -&gt; raw)</param>
            <returns>0 if ok - 1 otherwise</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.iCompareDatums(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Compare the datums of two coordinate systems?</summary>
            <param name="oIPJ1">IPJ 2</param>
            <remarks>
To transform between different datums requires the use of a local
datum transform.  The local datum transform can be defined when
a coordinate system is created, but the definition is optional.
This function will test that the local datum transforms are defined.
Note that a coordinate transformation between datums without a
local datum transform is still possible, but only the effect of
ellipsoid shape will be modelled in the transform.
</remarks>
            <returns>
0 - Datums are different
1 - Datums are the same, but different LDT
2 - Datums and LTD are the same
</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.GetPlaneEquation2(GeoEngine.Core.GXNetX.CIPJ,System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the equation of a plane with reprojection.</summary>
            <param name="oIPJ1">IPJ object for the output values</param>
            <param name="d2">Min X of surface (in grid coords)</param>
            <param name="d3">Min Y of surface</param>
            <param name="d4">Max X of surface</param>
            <param name="d5">Max Y of surface</param>
            <param name="d6">Pitch angle (between -360 and 360) (in view coords)</param>
            <param name="d7">Yaw angle (between -360 and 360)</param>
            <param name="d8">Roll angles (between -360 and 360)</param>
            <param name="d9">X offset of plane (in view coords)</param>
            <param name="d10">Y offset of plane</param>
            <param name="d11">Z offset of plane</param>
            <param name="d12">X scale (in view coords)</param>
            <param name="d13">Y scale</param>
            <param name="d14">Z scale</param>
            <remarks>
This is the same as GetPlaneEquation_IPJ, but the
input projected coordinate system (PCS) may
be different from that of the IPJ you want the
plane equation values described in. This may be
required, for instance, when a 3D view has been created
in one PCS, and an oriented grid from a different PCS is
to be displayed in that view.

If the two input IPJs share the same PCS then the GetPlaneEquation_IPJ
function is called directly, using the input IPJ.
</remarks>
            <available_version>6.4.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.GetPlaneEquation(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the equation of a plane</summary>
            <param name="d1">Min X of surface</param>
            <param name="d2">Min Y of surface</param>
            <param name="d3">Max X of surface</param>
            <param name="d4">Max Y of surface</param>
            <param name="d5">Pitch angle (between -360 and 360)</param>
            <param name="d6">Yaw angle (between -360 and 360)</param>
            <param name="d7">Roll angles (between -360 and 360)</param>
            <param name="d8">X offset of plane</param>
            <param name="d9">Y offset of plane</param>
            <param name="d10">Z offset of plane</param>
            <param name="d11">X scale</param>
            <param name="d12">Y scale</param>
            <param name="d13">Z scale</param>
            <remarks>
Two opposite corners of the plane are required.
Because the origin of the plane does not necessarily
have a stable back-projection into true 3d coordinates.
In practice, use the current view extents, or the corners
of a grid.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.GetOrientationInfo(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get IPJ orientation parameters.</summary>
            <param name="d1">Plane Origin X</param>
            <param name="d2">Plane Origin Y</param>
            <param name="d3">Plane Origin Z</param>
            <param name="d4">Plane Azimuth (section) or Rotation (plan)</param>
            <param name="d5">Plane Swing   (section)</param>
            <remarks>
IPJ_ORIENT_TYPE:
&amp;lt;define&amp;gt;IPJ_ORIENT_DEFAULT&amp;lt;/define&amp;gt; - no special orientation - plan view.
This is equivalent to &amp;lt;define&amp;gt;IPJ_ORIENT_PLAN&amp;lt;/define&amp;gt; with
dXo = dYo = dZo = dRotation = 0.0.

&amp;lt;define&amp;gt;IPJ_ORIENT_PLAN&amp;lt;/define&amp;gt;      Azimuth = Rotation CCW degrees
The plan differs from the default view in that
a reference level is set, and the axes can be
rotated and offset from the local X,Y.

&amp;lt;define&amp;gt;IPJ_ORIENT_SECTION&amp;lt;/define&amp;gt;   Azimuth - CW degrees from North
-360 &lt;= azimuth &lt;= 360
Swing - degrees bottom towards viewer
-90 &lt; swing &lt; 90
The section view projects all plotted objects
HORIZONTALLY onto the viewing plan in order to
preserve elevations, even if the section has a swing.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.GetList(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get a list of parameters.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">&amp;lt;define&amp;gt;IPJ_PARM_LST&amp;lt;/define&amp;gt;</param>
            <param name="str2">Datum filter, "" for no filter</param>
            <param name="oLST3">List returned</param>
            <remarks>
The datum filter string, if specified, will limit the requested
list to those valid for the spacified datum.
</remarks>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.GetCrookedSectionViewVVs(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32@)">
            <summary>Get the crooked section path.</summary>
            <param name="oVV1">Section X locations (e.g. distance along the curve)</param>
            <param name="oVV2">True X</param>
            <param name="oVV3">True Y</param>
            <param name="i4">Use logarithmic Y-axis (usually for data profiles) 0:No, 1:Yes</param>
            <remarks>Returns the orignal VVs used to set up the crooked section path.</remarks>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Get3DViewEx(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32@,System.Int32@)">
            <summary>Get 3D orientation parameters with new flags</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Rotation in X</param>
            <param name="d5">Rotation in Y</param>
            <param name="d6">Rotation in Z</param>
            <param name="d7">Scaling in X</param>
            <param name="d8">Scaling in Y</param>
            <param name="d9">Scaling in Z</param>
            <param name="i10">&amp;lt;define&amp;gt;IPJ_3D_ROTATE&amp;lt;/define&amp;gt;</param>
            <param name="i11">&amp;lt;define&amp;gt;IPJ_3D_FLAG&amp;lt;/define&amp;gt;</param>
            <remarks>The view must have a 3D orientation</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Get3DView(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get 3D orientation parameters</summary>
            <param name="d1">X location of view origin</param>
            <param name="d2">Y location of view origin</param>
            <param name="d3">Z location of view origin</param>
            <param name="d4">Rotation in X</param>
            <param name="d5">Rotation in Y</param>
            <param name="d6">Rotation in Z</param>
            <param name="d7">Scaling in X</param>
            <param name="d8">Scaling in Y</param>
            <param name="d9">Scaling in Z</param>
            <remarks>The view must have a 3D orientation</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.CreateXML(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create an IPJ from serialized Geosoft MetaData XML file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>IPJ Object</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.CreateS(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CBF)">
            <summary>Create IPJ from serialized source.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oBF1" />
            <returns>IPJ Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>This method creates a projection object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>IPJ Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.CopyProjection(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Copy the projection from one IPJ to another</summary>
            <param name="oIPJ1">Source</param>
            <remarks>
Copies the projection parameters, while leaving the rest
(e.g. Datum, Local Datum Transform) unchanged.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.Copy(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Copy IPJs</summary>
            <param name="oIPJ1">Destination IPJ</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.ConvertOrientationWarpVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Convert X,Y and Z VVs using the orientation warp from an IPJ.</summary>
            <param name="oVV1">X VV coordinates converted on output</param>
            <param name="oVV2">Y VV coordinates converted on output</param>
            <param name="oVV3">Z VV coordinates converted on output</param>
            <param name="i4">1 -  Forward (raw -&gt; coordinate) , 0 - (coordinate -&gt; raw)</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.ClearOrientation">
            <summary>Clear an orientation warp from an IPJ.</summary>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.ClearCoordinateSystem">
            <summary>Clear coordinate sytsem, except for units</summary>
            <remarks>
Clears the Datum, Local Datum and Projection info.
Leaves units, any warp or orientation warp unchanged.
</remarks>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.AddWarp(System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Add a warp to IPJ.</summary>
            <param name="i1">&amp;lt;define&amp;gt;IPJ_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="oVV2">Old X VV (real)</param>
            <param name="oVV3">Old Y VV (real)</param>
            <param name="oVV4">New X VV (real)</param>
            <param name="oVV5">New Y VV (real)</param>
            <remarks>
There must be at least "warp type" points in the
warp point VV's.
All point VV's must have the same number of points.
If there are more points than required by the warp,
the warp will be determined by least-square fitting
to the warp surface for all but the 4-point warp.
The 4-point ward requires exactly 4 points.

Cannot be used with WARP_MATRIX or WARP_LOG
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.AddMatrixWarp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Add a warp to IPJ using a matrix</summary>
            <param name="d1">Row 0 Element 0</param>
            <param name="d2">Row 0 Element 1</param>
            <param name="d3">Row 0 Element 2</param>
            <param name="d4">Row 0 Element 3</param>
            <param name="d5">Row 1 Element 0</param>
            <param name="d6">Row 1 Element 1</param>
            <param name="d7">Row 1 Element 2</param>
            <param name="d8">Row 1 Element 3</param>
            <param name="d9">Row 2 Element 0</param>
            <param name="d10">Row 2 Element 1</param>
            <param name="d11">Row 2 Element 2</param>
            <param name="d12">Row 2 Element 3</param>
            <param name="d13">Row 3 Element 0</param>
            <param name="d14">Row 3 Element 1</param>
            <param name="d15">Row 3 Element 2</param>
            <param name="d16">Row 3 Element 3</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.AddLogWarp(System.Int32,System.Int32)">
            <summary>Add a warp to IPJ to log one or both coordinantes</summary>
            <param name="i1">Log in X?</param>
            <param name="i2">Log in Y?</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.AddExaggWarp(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Add a warp to IPJ to exaggerate X, Y and Z.</summary>
            <param name="d1">X exaggeration, must be &gt; 0.0</param>
            <param name="d2">Y exaggeration, must be &gt; 0.0</param>
            <param name="d3">Z exaggeration, must be &gt; 0.0</param>
            <param name="d4">X reference origin</param>
            <param name="d5">Y reference origin</param>
            <param name="d6">Z reference origin</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.SetUnits(System.Double,System.String)">
            <summary>Set unit parameters</summary>
            <param name="d1">Factor to meters, must be &gt;= 0.0</param>
            <param name="str2">Abbreviation, can be ""</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.MakeWGS84">
            <summary>Make a WGS 84 geographic projection</summary>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.MakeGeographic">
            <summary>Remove a projected coordinate system from an IPJ</summary>
            <remarks>This function does nothing if the IPJ is not a projected coordinate system.</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIPJ.ClearWarp">
            <summary>Clear warp parameters (if any) from an IPJ.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CIPJ">
            <summary>

       The IPJ class describes a single spatial reference in the world,
       defined under a coordinate system, an orientation,
       and a warp (which can be used to distort the projected object
       to a particular shape or boundary).
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.UpdatePLY(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CPLY)">
            <summary>Update the grid boundary in the grid metadata</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">The Grid</param>
            <param name="oPLY2">PLY containing the edges.</param>
            <remarks>
You can call the GridEdgePLY function to get an edge,
perhaps alter the edge, such as thin it to a reasonable
resolution, then put set it as the grid boundary by
calling this funtion.  This is similar to the
GridPLYEx function except that you get to alter the
PLY before it is placed back in the IMG.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.StatWindow(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Double,System.Double,System.Double,System.Double,System.Int32,GeoEngine.Core.GXNetX.CST)">
            <summary>Calculate grid statistics in a window</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Name of the grid to get stats from</param>
            <param name="d2">Min X window</param>
            <param name="d3">Min Y window</param>
            <param name="d4">Max X window</param>
            <param name="d5">Max Y window</param>
            <param name="i6">Maximum values needed, 0 for all</param>
            <param name="oST7">ST object, stats are accumulated</param>
            <remarks>
The maximum values needed will beused to
decimate the sampling of the grid in order to
improve performance.  100000 is often a good
number when absolute precision is not
required.
</remarks>
            <available_version>5.0.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.RangeLL(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Determine the range in lat. and long. of a projected grid</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input image</param>
            <param name="d2">Min latitude</param>
            <param name="d3">Min longitude</param>
            <param name="d4">Max latitude</param>
            <param name="d5">Max longitude</param>
            <remarks>
This routine determines the latitude and longitudes along the
edge of a grid and returns the minimal and maximal values.
It scans each row and and column and finds the first non-dummy
position at the start and end, and then determines the coordinates
at those points.
If the grid has no data, no IPJ object, or if the Source Type of
the IPJ is not &amp;lt;define&amp;gt;IPJ_TYPE_PCS&amp;lt;/define&amp;gt; (projected coordinate system), then the
returned values are dummies (&amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;).
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.RangeGrids(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Determine bounding rectangle for a set of grids</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">List of grid files, "|" delimited</param>
            <param name="oIPJ2">Projection for the range - see notes</param>
            <param name="d3">Min X - returned range in the projection</param>
            <param name="d4">Min Y</param>
            <param name="d5">Max X</param>
            <param name="d6">Max Y</param>
            <remarks>
If an IPJ is IPJ_CS_UNKNOWN, the
IPJ of the first grid in the list will be used and
the IPJ will be returned in this setting.
Otherwise, the range in the requested IPJ will be
determined.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.ProfileVV(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Extract a VV profile from a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input image</param>
            <param name="oVV2">X VV coordinates</param>
            <param name="oVV3">Y VV coordinates</param>
            <param name="oVV4">VV in which to place result</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.Profile(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Double,System.Double,System.Double,System.Double,System.Double,GeoEngine.Core.GXNetX.CVV)">
            <summary>Extract a profile from a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input image</param>
            <param name="d2">X1</param>
            <param name="d3">Y1</param>
            <param name="d4">X2</param>
            <param name="d5">Y2</param>
            <param name="d6">Sample separation, if 0.0, use grid cell size</param>
            <param name="oVV7">VV in which to place result</param>
            <remarks>
Returned VV will start at X1,Y1 and will sample
up to X2,Y2 at the specified separation.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.PigeonHole(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32@)">
            <summary>Pigeon-hole and count points by location into a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input grid</param>
            <param name="oVV2">X locations</param>
            <param name="oVV3">Y locations</param>
            <param name="i4">Number of points located in the grid.</param>
            <remarks>
X and Y location VVs are input. If a point (X, Y) is located within
one-half cell width from a location in the grid, then the value of
the grid at that location is incremented by 1.
The cells are inclusive at the minima, and exclusive at the maxima:
e.g. if dDx = dDy = 1, and dXo = dYo = 0, then the corner cell would
accept values  -0.5 &lt;= X &lt; 0.5 and -0.5 &lt;= Y &lt; 0.5.
The grid values should be set to 0 before calling this function.

The number of points "pigeon-holed" is returned to the user.
This function is useful, for instance, in determining the density of
sample locations in a survey area.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.PeakSize2(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Define the sizes of all the peaks in an image - new algorithm</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid file name</param>
            <param name="oVV2">Peaks' X</param>
            <param name="oVV3">Peaks' Y</param>
            <param name="i4">Maximum target diameter (window) in # of cells</param>
            <param name="oVV5">Returned peak (anomaly) sizes in data units</param>
            <remarks>
Extending from the peak location of an anomaly to the inflection
points of the grid values along each of the 8 directions results in
8 radii. Anomaly size is defined as the 2*mediam of the 8 radii.

This algorithm uses 4 successive points d1, d2, d3 and d4 in any
direction. Given slopes m1 = d2-d1, m2 = d3-d2 and m3 = d4-d3,
an inflection point occurs between d2 and d3 if m1&gt;m2 and m2&lt;m3.
The location index is given as i3 - s2/(s2-s1), where i3 is the index
of d3, and s1=m2-m1 and s2=m3-m2.

This algorithm tends to give much smaller (and more reasonable)
results than PeakSize_IMU.
</remarks>
            <available_version>5.1.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.PeakSize(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Double,GeoEngine.Core.GXNetX.CVV)">
            <summary>Define the sizes of all the peaks in an image.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid file name</param>
            <param name="oVV2">Peaks' X</param>
            <param name="oVV3">Peaks' Y</param>
            <param name="i4">Maximum target diameter (window) in # of cells</param>
            <param name="d5">Precision factor (see note above)</param>
            <param name="oVV6">Returned peak (anomaly) sizes in data units</param>
            <remarks>
Extending from the peak location of an anomaly to the inflection
points of the grid values along each of the 8 directions results in
8 radii. Anomaly size is defined as the 2*mediam of the 8 radii.

Precision factor is used to control definition of an inflection point.
For points A,B, and C, B is an inflection point if (A+C)/2.0 &gt; B. With
the precision factor, B is an inflection point only when
(A+C)/2.0 &gt; B*(1.0+Precision factor).
This factor must be within (-1.0,1.0).

Note: PeakSize2_IMU is probably a better routine...
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.Mosaic(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Double)">
            <summary>Create a mosaic image of an image list.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Image names ('|' separated)</param>
            <param name="str2">Output image name ("" for a memory only image)</param>
            <param name="oIPJ3">Projection to use (0 to use the first grid's projection)</param>
            <param name="d4">Cell size to use (rDummy to use first grid)</param>
            <remarks>
The images are simply placed on the output image, starting with
the first image. Note that this function may require very large
amounts of virtual memory.
</remarks>
            <returns>IMG Object</returns>
            <available_version>5.1.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.MakeMITabfromMap(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Make a MapInfo tab file from this map</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Map file name</param>
            <available_version>5.1.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.MakeMITabfromGrid(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Make a MapInfo tab file for this grid as rendered in a map</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid file name</param>
            <available_version>5.1.5</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.MakeMITabFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Make a MapInfo tab file for this grid</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid file name</param>
            <available_version>5.1.6</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.iGridType(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Reports the true data the of a grid (geosoft types)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Grid</param>
            <returns>&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridXYZ(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Export a Grid image to an XYZ file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of the grid to export</param>
            <param name="str2">Name of new XYZ file</param>
            <param name="i3">&amp;lt;define&amp;gt;IMU_XYZ_INDEX&amp;lt;/define&amp;gt;</param>
            <param name="i4">X direction decimation factor</param>
            <param name="i5">Y direction decimation factor</param>
            <param name="i6">&amp;lt;define&amp;gt;IMU_XYZ_LABEL&amp;lt;/define&amp;gt;</param>
            <remarks>
The IMG (image) of the grid to export must
be of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt;. If not, this method will
terminate with an error.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridWind2(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Window a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of input grid</param>
            <param name="str2">Name of output grid file</param>
            <param name="d3">Minimum X, ground units (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d4">Maximum X (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d5">Minimum Y (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d6">Maximum Y (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d7">Minimum Z (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d8">Maximum Z (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="i9">&amp;lt;define&amp;gt;IMU_WIND_DUMMIES&amp;lt;/define&amp;gt;</param>
            <remarks>
To change the cell size or work in a different projection,
first inherit the IMG by calling

The windowed grid will be adjusted/expanded to include the
defined area and line up on an even grid cell.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridWind(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String,System.Int32,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,System.String)">
            <summary>
Create a grid using a defined area window
within a larger grid.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of input grid</param>
            <param name="str2">Name of output grid file</param>
            <param name="i3">&amp;lt;define&amp;gt;IMU_WIND_COORD&amp;lt;/define&amp;gt;</param>
            <param name="d4">Min. limit of window in X direction (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d5">Max. limit of window in X direction (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d6">Min. limit of window in Y direction (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d7">Max. limit of window in Y direction (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d8">Minimum Z data value in output grid (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d9">Maximum Z data value in output grid (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="d10">New grid cell size</param>
            <param name="i11">&amp;lt;define&amp;gt;IMU_WIND_DUMMIES&amp;lt;/define&amp;gt;</param>
            <param name="i12">Decimation factor</param>
            <param name="str13">Name of .MDF file for data clipping</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridVol(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
Calculates the grid volumes above and below a
reference base.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of the grid to calculate volume for</param>
            <param name="d2">Reference base</param>
            <param name="d3">Multiplier to final volume</param>
            <param name="d4">Grid Volume above reference base</param>
            <param name="d5">Grid Volume below reference base</param>
            <param name="d6">Differences between volumes</param>
            <remarks>
Volumes are calculated above and below a
reference base level, and reported as positive
integers. A multiplier is applied to the final
volume (to correct for units).

The IMG parameters MUST be of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridVD(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG)">
            <summary>Apply vertical derivative convolution filter to a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input image</param>
            <param name="oIMG2">Output image</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridTrns(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>
Transpose a grid by swapping the grid rows with
the grid columns.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the grid to transpose</param>
            <param name="i2">Transpose condition value &amp;lt;define&amp;gt;IMU_TRANS&amp;lt;/define&amp;gt;</param>
            <remarks>
If the grid has a line orientation that does NOT
match the &amp;lt;define&amp;gt;IMU_TRANS&amp;lt;/define&amp;gt; value, this method will
not succeed.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridTrnd(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG,System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>Remove a trend surface from a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Handle to input image</param>
            <param name="oIMG2">Handle to output image</param>
            <param name="i3">0-calculate, 1-given, 2-replace</param>
            <param name="i4">&amp;lt;define&amp;gt;IMU_TREND&amp;lt;/define&amp;gt;</param>
            <param name="i5">Trend order</param>
            <param name="oVM6">VM holds coefficients</param>
            <param name="i7">Number of coefficients</param>
            <remarks>
Both Images must be of type &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;.
The VM parameter must be of type REAL,
and be of size 10 at most.

The number of coefficients must be
compatible with the order of the
trend removed. Following is the
number of coefficients which should
be present for a given order

===== ======================
Order Number of Coefficients
----- ----------------------
0      1
1      3
2      6
3      10
===== ======================
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridTiff(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Double,System.Int32,System.Double)">
            <summary>Generate a Tiff (Tagged-Image file format) file with up to 16 grids.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Comma-delimited string containing names of all grids to use in Tiff generation Up to 16 grids allowed.</param>
            <param name="str2">Name of Tiff file to create</param>
            <param name="str3">Background color option. One of W (White)  K (Black) C (Cyan) M (Magenta) Y (Yellow) R (Red)  G (Green) B (Blue)</param>
            <param name="i4">Background Red value (0-255)</param>
            <param name="i5">Background Green (0-255)</param>
            <param name="i6">Background Blue  (0-255)</param>
            <param name="d7">New cell size</param>
            <param name="i8">Pixel size of registration marks</param>
            <param name="d9">Map scale</param>
            <remarks>
The background color can be either selected
from one of 8 settings, or can be specified
as a combination of Reg,Green, and Blue values.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStitchCtl(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Stitches together two grids - control file for options.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Control file containing all "GRIDSTCH" parameters</param>
            <remarks>
Data validation is done internally, not in the GX.
This is simply a way of avoiding writing a new GX wrapper
every time an option is added.
</remarks>
            <available_version>5.1.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStitch(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CPLY,System.Double,System.Int32)">
            <summary>Stitches together too grids</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input Grid1 name</param>
            <param name="str2">Input Grid2 name</param>
            <param name="str3">Output Grid name</param>
            <param name="i4">Stitching method</param>
            <param name="i5">Grid 1 trend removal order</param>
            <param name="i6">Grid 2 trend removal order</param>
            <param name="i7">Trend removal type of points to use</param>
            <param name="d8">Gap for interpolation</param>
            <param name="i9">Interpolation spline method</param>
            <param name="i10">Path selection</param>
            <param name="oPLY11">PLY object for user path</param>
            <param name="d12">Correction weighting</param>
            <param name="i13">Width of corrections, in grid cells (8 to 256)</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.rSlopeStandardDeviation(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG)">
            <summary>Return the standard deviation of the slopes.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Grid object</param>
            <remarks>
This method calculates the standard deviation of the horizontal
differences in the X and Y directions for the supplied
image.  This is useful for shading routines.  A good
default scaling factor is 2.5 / standard deviation.

The image will be sub-sampled to a statistically meaningful number.

The cell sizes are used to determine the slopes.
</remarks>
            <returns>Standard deviation of grid slopes</returns>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStatTrendExt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.Int32@,System.Double@,System.Double@,GeoEngine.Core.GXNetX.CVM)">
            <summary>Reports Extended Trend Info of a grid (for up to third order coefficients).</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid name</param>
            <param name="i2">Trend order</param>
            <param name="i3">Number of coefficients</param>
            <param name="d4">Trend origin Xo</param>
            <param name="d5">Trend origin Yo</param>
            <param name="oVM6">VM hold coefficient values MUST BE OF TYPE 'real'</param>
            <remarks>Trend Info are returned in the parameter set</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStatTrend(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.Double@,System.Double@,System.Double@)">
            <summary>Reports Trend Info of a grid (for first order coefficients only).</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the grid to get stats from</param>
            <param name="i2">Trend Valid Flag</param>
            <param name="d3">Trend coefficient rCo</param>
            <param name="d4">Trend coefficient rCx</param>
            <param name="d5">Trend coefficient rCy</param>
            <remarks>Trend Info are returned in the parameter set</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStatExt(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Reports statistics of a grid's elements.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the grid to get stats from</param>
            <param name="i2">&amp;lt;define&amp;gt;IMU_STAT_FORCED&amp;lt;/define&amp;gt;</param>
            <param name="i3">Number of valid elements in grid</param>
            <param name="i4">Number of dummies in grid</param>
            <param name="d5">Minimum grid value</param>
            <param name="d6">Maximum grid value</param>
            <param name="d7">Grid mean</param>
            <param name="d8">Grid standard deviation</param>
            <remarks>
If the &amp;lt;define&amp;gt;IMU_STAT_FORCED&amp;lt;/define&amp;gt; value is set, the
statistics will be recalculated.
Statistics are returned in the parameter set.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStatComp(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.Int32@,System.Int32@,System.Double@,System.Double@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Reports statistics contained in a grid header.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the grid to get stats from</param>
            <param name="i2">Element type: 0 - byte 1 - USHORT 2 - SHORT 3 - LONG 4 - FLOAT 5 - DOUBLE 6 - 32 byte Color (RGBx)</param>
            <param name="i3">Elements in X direction</param>
            <param name="i4">Elements in Y direction</param>
            <param name="d5">X element separation</param>
            <param name="d6">Y element separation</param>
            <param name="i7">KX (storage orientation)</param>
            <param name="d8">X origin</param>
            <param name="d9">Y origin</param>
            <param name="d10">Grid Rotation</param>
            <param name="d11">Base removed</param>
            <param name="d12">Grid multiplier</param>
            <param name="d13">Compression Ratio</param>
            <remarks>Statistics are returned in the parameter set</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridStat(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.Int32@,System.Int32@,System.Double@,System.Double@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Reports statistics contained in a grid header.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the grid to get stats from</param>
            <param name="i2">Element type in bytes</param>
            <param name="i3">Elements in X direction</param>
            <param name="i4">Elements in Y direction</param>
            <param name="d5">X element separation</param>
            <param name="d6">Y element separation</param>
            <param name="i7">KX (storage orientation)</param>
            <param name="d8">X origin</param>
            <param name="d9">Y origin</param>
            <param name="d10">Grid Rotation</param>
            <param name="d11">Base removed</param>
            <param name="d12">Grid multiplier</param>
            <remarks>Statistics are returned in the parameter set</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridST(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CST)">
            <summary>Update an ST object using a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid name</param>
            <param name="oST2">ST (statistics) object to fill/update</param>
            <remarks>
The input ST object is not initialized by GridST_IMU,
so this function can be used to accumulate statistical
info on more than a single grid.
See ST.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.RefreshShad(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG,System.Double@,System.Double@,System.Double@)">
            <summary>Refresh a shaded relief image</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input grid object</param>
            <param name="oIMG2">Output shaded grid object</param>
            <param name="d3">Inclination 0-90 degrees (def. 45)</param>
            <param name="d4">Declination 0-360 degrees azimuth (def. 45)</param>
            <param name="d5">Vertical scale factor (distance/z unit)</param>
            <remarks>
Pass &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; as parameters to obtain default values.
The default values are returned.
</remarks>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridShad(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double@,System.Double@,System.Double@)">
            <summary>Create a shaded relief image.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input image name</param>
            <param name="str2">Output new shaded image</param>
            <param name="d3">Inclination 0-90 degrees (def. 45)</param>
            <param name="d4">Declination 0-360 degrees azimuth (def. 45)</param>
            <param name="d5">Vertical scale factor (distance/z unit)</param>
            <remarks>
Pass &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; as parameters to obtain default values.
The default values are returned.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridResize(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Resize a grid to reduce the size not cover the outside dummies.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name of input grid</param>
            <param name="str2">File name of output grid</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridResample(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Create a new grid by resampling an existing grid</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid filename</param>
            <param name="str2">Output grid filename</param>
            <param name="d3">Origin X</param>
            <param name="d4">Origin Y</param>
            <param name="d5">Cell spacing X</param>
            <param name="d6">Cell spacing Y</param>
            <param name="i7">Elements in X</param>
            <param name="i8">Elements in Y</param>
            <remarks>Works only for un rotated grids.</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridReprojectAndWindow(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Double,System.Double,System.Double,System.Double)">
            <summary>Create a new grid by reprojecting an existing grid and windowing its contents</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input grid filename</param>
            <param name="str2">Output grid filename</param>
            <param name="oIPJ3">Output grid projection</param>
            <param name="d4">Window minX (in output projection)</param>
            <param name="d5">Window maxX (in output projection)</param>
            <param name="d6">Window minY (in output projection)</param>
            <param name="d7">Window maxY (in output projection)</param>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridPLYEx(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CPLY,System.Int32,System.Int32)">
            <summary>Get the grid edge in a PLY (with min points)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">The IMG</param>
            <param name="oPLY2">PLY to which the bounding polygons will be added.</param>
            <param name="i3">TRUE to force the boundary to be refreshed.</param>
            <param name="i4">Minimum number of points in polygons refreshed (0 for all)</param>
            <remarks>
This will optionally refresh the grid boundary PLY and return
the PLY.

If the boundary is not refreshed and has never been calculated,
the boundary will be the bounding rectangle of the grid.

The grid PLY will be added to existing ploygons in the passed PLY.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridPLY(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CPLY,System.Int32)">
            <summary>Get the grid edge in a PLY</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">The IMG</param>
            <param name="oPLY2">PLY to which the bounding polygons will be added.</param>
            <param name="i3">TRUE to force the boundary to be refreshed.</param>
            <remarks>
This will optionally refresh the grid boundary PLY and return
the PLY.

If the boundary is not refreshed and has never been calculated,
the boundary will be the bounding rectangle of the grid.

The grid PLY will be added to existing ploygons in the passed PLY.
</remarks>
            <available_version>5.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridPeak(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Pick grid peaks.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid file name</param>
            <param name="i2">Peak test directions (1 to 4)</param>
            <param name="oVV3">X of found peaks</param>
            <param name="oVV4">Y of found peaks</param>
            <param name="oVV5">Z values of found peaks</param>
            <remarks>
Peak test directions defines how grid peaks are to be found.
For example, with the 1, a grid point will be picked if its
value is greater than it's two neighbors in at least one
direction.  Up to 4 directions can be tested.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridMask(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CPLY,System.Int32)">
            <summary>
Create a mask grid using a set of polygon
coordinates defined in a separate file, then
masking the polygon over an input grid.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of input grid</param>
            <param name="str2">Name of output mask grid file</param>
            <param name="oPLY3">Polygon containing mask coordinates</param>
            <param name="i4">&amp;lt;define&amp;gt;IMU_MASK&amp;lt;/define&amp;gt;</param>
            <remarks>
The IMG parameters MUST be of type &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;!
If not, the method will terminate.

The PLY will contain more than one polygon
if it was loaded from a file containing
coordinates of more than one polygon.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridInFill(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String,System.Int32,System.Int32)">
            <summary>Fill in a ribbon along the edge and inside hollow areas of the grid</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of input grid</param>
            <param name="str2">Name of the output grid</param>
            <param name="i3">Number of cells to extend ribbon along the edge</param>
            <param name="i4">Number of iterations to fill inside hollow areas</param>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridHead(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Modifies Statistics contained in a grid header.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the grid whose header is to be modified.</param>
            <param name="d2">Element separation</param>
            <param name="d3">Vector separation</param>
            <param name="d4">Grid X Origin on ground</param>
            <param name="d5">Grid Y Origin on ground</param>
            <param name="d6">Grid Rotation</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridFilt(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG,System.Int32,System.Double,System.Int32,System.Int32,System.Int32,System.String,GeoEngine.Core.GXNetX.CVV)">
            <summary>
Applies a filter to a grid any number
of passes.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of first grid</param>
            <param name="oIMG2">Image of second grid</param>
            <param name="i3">Number of passes to apply filter (&gt;0)</param>
            <param name="d4">Multiplier to apply to grid values</param>
            <param name="i5">&amp;lt;define&amp;gt;IMU_FILT_DUMMY&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;IMU_FILT_HZDRV&amp;lt;/define&amp;gt;</param>
            <param name="i7">&amp;lt;define&amp;gt;IMU_FILT_FILE&amp;lt;/define&amp;gt;</param>
            <param name="str8">Name of file containing filter values</param>
            <param name="oVV9">VV containing filter values (if not using a file for the values) MUST BE OF TYPE 'real'</param>
            <remarks>
The IMG parameters MUST be of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridFill(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Double,System.Int32,System.Int32)">
            <summary>Interpolates to fill dummies, generates an output grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of input grid</param>
            <param name="oIMG2">Image of output grid</param>
            <param name="i3">&amp;lt;define&amp;gt;IMU_FILL_ROLLOPT&amp;lt;/define&amp;gt;</param>
            <param name="i4">Distance at which to roll off to 0</param>
            <param name="i5">Maximum prediction filter length</param>
            <param name="i6">Maximum prediction filter area</param>
            <param name="d7">Base value to roll off to</param>
            <param name="d8">Maximum amplitude allowed in grid</param>
            <param name="d9">Maximum edge amplitude allowed in grid</param>
            <param name="i10">Width from edge to start limiting from</param>
            <param name="i11">Number of convolution passes to apply</param>
            <remarks>
The IMG parameters MUST be of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridExpFill(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Double,System.Int32)">
            <summary>Extends and fills a grid for FFT2.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the input grid</param>
            <param name="str2">Name of the output grid</param>
            <param name="d3">% expansion</param>
            <param name="i4">Shape of expansion: 0 - rectangle, 1 - square</param>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridExpand(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String,System.Double,System.Int32,System.Int32,System.Int32)">
            <summary>
Expand a grid and place dummies in the area
beyond the original edges.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of input grid</param>
            <param name="str2">File name of output grid</param>
            <param name="d3">Minimum percentage to expand the grid by</param>
            <param name="i4">&amp;lt;define&amp;gt;IMU_EXPAND_SHAPE&amp;lt;/define&amp;gt;</param>
            <param name="i5">X Dimension the output grid is expanded to</param>
            <param name="i6">Y Dimension the output grid is expanded to</param>
            <remarks>
The IMG parameter MUST be of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridEdgePLY(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CPLY,System.Int32)">
            <summary>Get grid edge points</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">The Grid</param>
            <param name="oPLY2">PLY containing the edges.</param>
            <param name="i3">Minimum number of points in polygons (0 for all)</param>
            <remarks>
Unlike GridPLY_IMU and GridPlyEx_IMU, the image is not
altered. It just gives the PLY.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridEdge(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get grid edge points</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid file name</param>
            <param name="oVV2">X coordinates of edge points</param>
            <param name="oVV3">Y coordinates of edge points</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridBool(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
Mask one grid against another using boolean logic
operations.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of first input grid</param>
            <param name="oIMG2">Image of second input grid</param>
            <param name="str3">File name of output grid</param>
            <param name="i4">&amp;lt;define&amp;gt;IMU_BOOL_OPT&amp;lt;/define&amp;gt;</param>
            <param name="i5">&amp;lt;define&amp;gt;IMU_BOOL_SIZING&amp;lt;/define&amp;gt;</param>
            <param name="i6">&amp;lt;define&amp;gt;IMU_BOOL_OLAP&amp;lt;/define&amp;gt;</param>
            <remarks>
The IMG parameters must be of type &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridAGC(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CIMG,System.Int32,System.Double,System.Int32)">
            <summary>Automatic Gain Compensation of a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of input grid</param>
            <param name="oIMG2">Image of output grid</param>
            <param name="i3">Width of filter to separate signal from background.</param>
            <param name="d4">Maximum gain applied to the signal.</param>
            <param name="i5">Remove background before applying gain?</param>
            <remarks>
The IMG parameters MUST be of type &amp;lt;define&amp;gt;GS_FLOAT&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GridAdd(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Double,GeoEngine.Core.GXNetX.CIMG,System.Double,GeoEngine.Core.GXNetX.CIMG)">
            <summary>Adds two Grid images together point-by-point.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image of first grid</param>
            <param name="d2">Multiplier to operate on first grid image</param>
            <param name="oIMG3">Image of second grid</param>
            <param name="d4">Multiplier to operate on second grid image</param>
            <param name="oIMG5">Output grid image</param>
            <remarks>
The IMG parameters MUST be of type &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;!
If not, the method will terminate.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GetZPeaksVV(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>
Same as GetZVV_IMU, but find the closest peak value to the input locations, and return
			             the peak value and peak value location.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input grid</param>
            <param name="oVV2">X VV</param>
            <param name="oVV3">Y VV</param>
            <param name="oVV4">Z VV filled with values (set to be same size as X, Y)</param>
            <remarks>
The returned locations will always be a grid point location; no interpolation is performed when locating the peaks. A simple search is
			done of all neighbouring points from the starting point, and once no neighbours can be located with a higher value, the search stops.
</remarks>
            <available_version>9.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.GetZVV(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Extract an interpolated image value for given XY VV locations</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input grid</param>
            <param name="oVV2">X VV</param>
            <param name="oVV3">Y VV</param>
            <param name="oVV4">Z VV filled with values (set to be same size as X, Y)</param>
            <available_version>5.0.8</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.ExportXML(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Int32@,System.String)">
            <summary>Export a Grid as an XML file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image</param>
            <param name="i2">CRC returned</param>
            <param name="str3">Output XML file</param>
            <available_version>6.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.ExportRawXML(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Int32@,System.String)">
            <summary>Export a Grid as an XML file using a fast raw output.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image</param>
            <param name="i2">CRC returned</param>
            <param name="str3">Output XML file</param>
            <available_version>7.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.ExportGridXML(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.String)">
            <summary>Export a Grid as an XML file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid</param>
            <param name="i2">CRC returned</param>
            <param name="str3">Output XML file</param>
            <available_version>6.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.ExportGridWithoutDataSectionXML(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32@,System.String)">
            <summary>Export a Grid minus the data section as an XML file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid</param>
            <param name="i2">CRC returned</param>
            <param name="str3">Output XML file</param>
            <available_version>7.2</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.CRCInexact(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Int32,System.Int32,System.Int32)">
            <summary>
Computes a CRC Checksum on an image and allows you to specify
number of bits of floats/doubles to drop so that the CRC
will be same even of this are changed.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input image</param>
            <param name="i2">Starting CRC (use &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt; if none)</param>
            <param name="i3">&amp;lt;define&amp;gt;IMU_FLOAT_CRC_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;IMU_DOUBLE_CRC_BITS&amp;lt;/define&amp;gt;</param>
            <remarks>
Very useful for testing where the last bits of accuracy
are not as important.
</remarks>
            <returns>CRC value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.CRCGridInexact(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
Computes a CRC Checksum on a grid and allows you to specify
number of bits of floats/doubles to drop so that the CRC
will be same even of this are changed.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid</param>
            <param name="i2">Starting CRC (use &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt; if none)</param>
            <param name="i3">&amp;lt;define&amp;gt;IMU_FLOAT_CRC_BITS&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;IMU_DOUBLE_CRC_BITS&amp;lt;/define&amp;gt;</param>
            <remarks>
Very useful for testing where the last bits of accuracy
are not as important.
</remarks>
            <returns>CRC value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.CRCGrid(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Computes a CRC Checksum on a grid.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid</param>
            <param name="i2">Starting CRC (use &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt; if none)</param>
            <returns>CRC value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.CRC(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.Int32)">
            <summary>Computes a CRC Checksum on an image.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Input image</param>
            <param name="i2">Starting CRC (use &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt; if none)</param>
            <returns>CRC value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMU.AggToGeoColor(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CAGG,System.String,GeoEngine.Core.GXNetX.CIPJ,System.Double)">
            <summary>Create a Geosoft color grid from an aggregate.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oAGG1">Input Aggregate</param>
            <param name="str2">Output image name</param>
            <param name="oIPJ3">Projection to use</param>
            <param name="d4">Resolution (Cell Size) size to use</param>
            <remarks>This consumes a very small amount of memory</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CIMU">
            <summary>

       Not a class. This is a catch-all group of functions working
       on IMG objects (see IMG). Grid operations include masking,
       trending, windowing, expanding and grid stitching.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.rGetRealParameter(System.String)">
            <summary>Store a real parameter in an IMG object</summary>
            <param name="str1">Parameter name (case insensitive)</param>
            <returns>Parameter value, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not found.</returns>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetRealParameter(System.String,System.Double)">
            <summary>Store a real parameter in an IMG object</summary>
            <param name="str1">Parameter name (case insensitive)</param>
            <param name="d2">Parameter value to store</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.WriteY(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a row (constant Y)</summary>
            <param name="i1">Y row</param>
            <param name="i2">Start X to write</param>
            <param name="i3"># X write (0 for whole vector)</param>
            <param name="oVV4" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.WriteX(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a column (constant X)</summary>
            <param name="i1">X column</param>
            <param name="i2">Start Y to write</param>
            <param name="i3"># Y to write (0 for whole vector)</param>
            <param name="oVV4" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.WriteV(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write a vector in the optimal KX direction.</summary>
            <param name="i1">Vector to write</param>
            <param name="i2">Begining element to write (0 is the first)</param>
            <param name="i3"># elements to write (0 for whole vector)</param>
            <param name="oVV4">VV handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Sync(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Syncronize the Metadata for this Grid</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetTR(GeoEngine.Core.GXNetX.CTR)">
            <summary>Set the trend information to a grid.</summary>
            <param name="oTR1">Trend information to set for the grid</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetPG(GeoEngine.Core.GXNetX.CPG)">
            <summary>Copy a pager into the pager of a grid.</summary>
            <param name="oPG1">Pager object to copy into the pager of the grid</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Set the metadata of a grid.</summary>
            <param name="oMETA1">Metadata to add to the grid</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set the projection of a grid.</summary>
            <param name="oIPJ1">Projection</param>
            <remarks>
Calls to this function should be made AFTER calls to SetInfo_IMG,
as SetIPJ_IMG sets up the bounding rectangle in the metadata.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetInfo(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Sets location information about this image.</summary>
            <param name="d1">X element separation</param>
            <param name="d2">Y element separation</param>
            <param name="d3">X location of first point</param>
            <param name="d4">Y location of first point</param>
            <param name="d5">Grid X axis rotation deg. CCW from reference X</param>
            <remarks>
Calls to this function should be made BEFORE calls to SetIPJ_IMG,
as the latter function sets up the bounding rectangle in the metadata.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.SetGridUnchanged">
            <summary>Mark the grid as unchanged so it will not output lineage</summary>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.rQuery(System.Int32)">
            <summary>Query information about the IMG</summary>
            <param name="i1">&amp;lt;define&amp;gt;IMG_QUERY&amp;lt;/define&amp;gt;</param>
            <remarks>
You can call either funtion to retrieve any data,
int or real.
</remarks>
            <returns>Information requested, dummy if unknown or invalid.</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.rGetZ(System.Double,System.Double)">
            <summary>Gets the grid value at a point</summary>
            <param name="d1">X location in the grid projection</param>
            <param name="d2">Y location in the grid projection</param>
            <returns>Grid value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.ReportCSV(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CWA,System.Int32,System.Int32,System.Int32)">
            <summary>Writes grid info as a line to a CSV file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid name</param>
            <param name="oWA2">Text file to write to</param>
            <param name="i3">Recalc statistics (0 - no; 1 - yes)</param>
            <param name="i4">Number of decimals to put in results</param>
            <param name="i5">Write header line (0 - no; 1 - yes)?</param>
            <remarks>
Appends the stats as a CSV line to the input text file.
The header line should only be written to a new text file.
</remarks>
            <available_version>6.4.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Report(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CWA,System.Int32,System.Int32,System.String)">
            <summary>Writes grid info report to a file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid name</param>
            <param name="oWA2">Text file to write to</param>
            <param name="i3">Recalc statistics (0 - no; 1 - yes)</param>
            <param name="i4">Number of decimals to put in results</param>
            <param name="str5">Title for report</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Relocate(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Re-locate a grid image.</summary>
            <param name="d1">Area X minimum</param>
            <param name="d2">Area Y minimum</param>
            <param name="d3">Area X maximum</param>
            <param name="d4">Area Y maximum</param>
            <param name="i5">&amp;lt;define&amp;gt;IMG_RELOCATE&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.RefreshGI(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Refresh the GI of a grid after it has moved or changed.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Grid name</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.ReadY(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a row (constant Y)</summary>
            <param name="i1">Y row</param>
            <param name="i2">Start X to read</param>
            <param name="i3"># X to read (0 for whole vector)</param>
            <param name="oVV4" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.ReadX(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a column (constant X)</summary>
            <param name="i1">X column</param>
            <param name="i2">Start Y to read</param>
            <param name="i3"># Y to read (0 for whole vector)</param>
            <param name="oVV4" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.ReadV(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read a vector in the optimal KX direction.</summary>
            <param name="i1">Vector to Read</param>
            <param name="i2">Begining element # to read (0 is the first)</param>
            <param name="i3"># elements to read (0 for whole vector)</param>
            <param name="oVV4">VV handle</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.OptKX(System.Int32)">
            <summary>Force optimal KX as desired.</summary>
            <param name="i1">KX -1 by column 1 by row</param>
            <remarks>
This will force loading an image into a PG if it is not already
accessible in the direction requested.

Subsequent calls to methods that use the optimal KX will use the
KX set here.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.LoadIntoPager">
            <summary>
Load IMG data from file into a pager to increase
access time.
</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.LoadIMG(GeoEngine.Core.GXNetX.CIMG)">
            <summary>Loads an IMG into a master IMG.</summary>
            <param name="oIMG1">IMG to load</param>
            <remarks>The cell sizes and projections must be the same.</remarks>
            <available_version>5.0.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iUserPreferenceToPlotAsColourShadedGrid(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Returns the global setting.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>
0 - User wishes to plot grids as regular (flat) grid
1 - User wishes to plot grids as color-shaded grids
</returns>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iSetDefITR(GeoEngine.Core.GXNetX.CITR)">
            <summary>Set default transform</summary>
            <param name="oITR1">Transform</param>
            <returns>
0 - Okay
1 - No default possible/available
</returns>
            <available_version>5.0.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iQueryKX">
            <summary>Asks the IMG for the most efficient way to access the data.</summary>
            <returns>-1 by columns, 1 by rows, 0 rows and columns are equally efficient.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iQuery(System.Int32)">
            <summary>Query information about the IMG</summary>
            <param name="i1">&amp;lt;define&amp;gt;IMG_QUERY&amp;lt;/define&amp;gt;</param>
            <remarks>
You can call either funtion to retrieve any data,
int or real.
</remarks>
            <returns>Information requested, dummy if unknown or invalid.</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iNY">
            <summary>Gets the # of Y elements.</summary>
            <returns># of Y elements.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iNX">
            <summary>Gets the # of X elements.</summary>
            <returns># of X elements.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iNV">
            <summary>Gets the # of vectors in the optimal KX direction.</summary>
            <returns># of vectors in the optimal KX direction</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.InheritIMG(GeoEngine.Core.GXNetX.CIMG)">
            <summary>Make a grids match in size and coordinate system</summary>
            <param name="oIMG1">Source IMG</param>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Inherit(GeoEngine.Core.GXNetX.CIPJ,System.Double)">
            <summary>Inherit a projection/new cell size on the IMG.</summary>
            <param name="oIPJ1">Projection</param>
            <param name="d2">Optional cell size</param>
            <remarks>
If cell size is &amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;, then "nice" values for the cell
size of the new projected grid will be determined so that
the new grid has about the same number of cells as the old.
If the cell size is specified, the inheritance will always
work, even if the input IPJ is identical to the original
IPJ, and the cell boundaries will be forced to be aligned
with the new cell size.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iNE">
            <summary>Gets the # of elements in the optimal KX direction.</summary>
            <returns># of elements in the optimal KX direction</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iIsValidIMGFileEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Is this a valid IMG file? Returns error message if it cannot be opened for any reason.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File to check</param>
            <param name="str2">Error message registered if unable to open</param>
            <available_version>8.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iIsValidIMGFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Is this a valid IMG file?</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File to check</param>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iIsColour">
            <summary>Is this a Geosoft color grid?</summary>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iGetDefITR(GeoEngine.Core.GXNetX.CITR)">
            <summary>Get default transform, if it exists</summary>
            <param name="oITR1">Transform</param>
            <returns>
0 - Okay
1 - No default possible/available
</returns>
            <available_version>5.0.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iEType">
            <summary>Returns the element type.</summary>
            <remarks>Same as sElementType_IMG(img,1)</remarks>
            <returns>Element type</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.iElementType(System.Int32)">
            <summary>Returns the element type.</summary>
            <param name="i1">0 for XGD, 1 for IMG</param>
            <returns>Element type</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GetTR(GeoEngine.Core.GXNetX.CTR)">
            <summary>Get the trend information from a grid.</summary>
            <param name="oTR1">Trend information from the grid</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GetProjectedCellSize(GeoEngine.Core.GXNetX.CIPJ,System.Double@)">
            <summary>Returns default cell size from projected image.</summary>
            <param name="oIPJ1">Projection to apply</param>
            <param name="d2">Returned cell size</param>
            <remarks>
Returns the cell size calculated by CreateProjected_PJIMG, or by
CreateProjected2_IMG when
&amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt; is entered as the optional cell size. No inheritance
is actually performed to the input IMG.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GetPG(GeoEngine.Core.GXNetX.CPG)">
            <summary>Get a copy of the pager of a grid.</summary>
            <param name="oPG1">PG object to hold pager of the grid</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the metadata of a grid.</summary>
            <param name="oMETA1">Metadata of the grid</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the projection of a grid.</summary>
            <param name="oIPJ1">Projection of the grid</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GetInfo(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Retrieves location information about this image.</summary>
            <param name="d1">X element separation</param>
            <param name="d2">Y element separation</param>
            <param name="d3">X location of first point</param>
            <param name="d4">Y location of first point</param>
            <param name="d5">Grid X axis rotation deg. CCW from reference X</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.GethPG">
            <summary>Get the actual pager of a grid.</summary>
            <returns>PG Object</returns>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateProjected3(GeoEngine.Core.GXNetX.CIPJ,System.Double,System.Double)">
            <summary>Same as CreateProjected2_IMG, but set expansion of bounds.</summary>
            <param name="oIPJ1">Projection to apply</param>
            <param name="d2">Cell size</param>
            <param name="d3">Expansion percent (&gt;=0).</param>
            <remarks>
The IMG now appears to be in the projected coordinate
system space, with the specified cell size. If the cell
size is &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; (&amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;), one is automatically calculated,
as with CreateProjected_IMG.
The expansion percent expands the bounds of the projected grid
in order to allow for the curving of bounding edges. Normally,
edges are sampled in order to allow for curving, but this
parameter is set to 1.0 (for 1 percent) in the CreateProjected_IMG
and CreateProjected2_IMG wrappers, and will generally create a
white/dummy border around the new grid. This new method allows
you to specify the expansion, or turn it off (by setting it to 0).
If the value is set to &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;, then expansion is left at 1.0,
the legacy behaviour.
</remarks>
            <available_version>6.3.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateProjected2(GeoEngine.Core.GXNetX.CIPJ,System.Double)">
            <summary>Applies a projection to an image, specify cell size.</summary>
            <param name="oIPJ1">Projection to apply</param>
            <param name="d2">Cell size</param>
            <remarks>
The IMG now appears to be in the projected coordinate
system space, with the specified cell size. If the cell
size is &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; (&amp;lt;define&amp;gt;GS_R8DM&amp;lt;/define&amp;gt;), one is automatically calculated,
as with CreateProjected_IMG.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateProjected(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Applies a projection to an image.</summary>
            <param name="oIPJ1">Projection to apply</param>
            <remarks>
The IMG now appears to be in the projected coordinate
system space.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateOutFile(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,GeoEngine.Core.GXNetX.CIMG)">
            <summary>Creates an output image file using input image info.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Data type, &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;GS_TYPE_DEFAULT&amp;lt;/define&amp;gt;</param>
            <param name="str2">Name of the Grid to link to</param>
            <param name="oIMG3">Input Image for new image creation</param>
            <remarks>
When the &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt; data type is chosen the actual on-disk
type of the input image will be used instead of &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;
if the on-disk values represent color data as opposed
to real numbers.
</remarks>
            <returns>IMG object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateNewFile(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Creates a new image file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Data type, &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; Cannot be &amp;lt;define&amp;gt;GS_TYPE_DEFAULT&amp;lt;/define&amp;gt;</param>
            <param name="i2">Grid orientation (KX): 1 (rows in X) -1 (rows in Y)</param>
            <param name="i3">Grid width</param>
            <param name="i4">Grid height</param>
            <param name="str5">Name of the Grid to link to</param>
            <returns>IMG object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateMem(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates an IMG object that is backed only by memory.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Data type, &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="i2">Grid orientation (KX): 1 (rows in X) -1 (rows in Y)</param>
            <param name="i3">Grid width</param>
            <param name="i4">Grid height</param>
            <remarks>Once destroyed all the data is lost. This is temporary.</remarks>
            <returns>IMG object</returns>
            <available_version>5.0.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.CreateFile(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.String,System.Int32)">
            <summary>Creates an Image object tied to a grid file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Data type, &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;GS_TYPE_DEFAULT&amp;lt;/define&amp;gt; to use native DAT type.</param>
            <param name="str2">Name of the Grid to link to</param>
            <param name="i3">Grid file open mode &amp;lt;define&amp;gt;IMG_FILE&amp;lt;/define&amp;gt;</param>
            <remarks>
When the &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt; data type is chosen the actual on-disk
type of the input image will be used instead of &amp;lt;define&amp;gt;GS_DOUBLE&amp;lt;/define&amp;gt;
if the on-disk values represent color data as opposed
to real numbers.
</remarks>
            <returns>IMG object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates an IMG not tied to a file at all</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Data type &amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt;</param>
            <param name="i2">Grid orientation (KX): 1 (rows in X) -1 (rows in Y)</param>
            <param name="i3">Grid width</param>
            <param name="i4">Grid height</param>
            <remarks>Once destroyed all the data in this IMG is lost.</remarks>
            <returns>IMG object</returns>
            <available_version>5.0.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Copy(GeoEngine.Core.GXNetX.CIMG)">
            <summary>Copy IMGs.</summary>
            <param name="oIMG1">Target IMG</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIMG.Average2(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String)">
            <summary>Reduce the dimensions in a 2D pager by a factor of 2</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of source Grid</param>
            <param name="str2">Name of output Grid</param>
            <remarks>
This method is useful for reducing the dimensions in a 2D pager by a factor of 2.
The output pager retains the same origin, but the X and Y spacing is double that of the original. Essentially,
the process removes all the even-indexed rows and columns, while leaving the locations of all the remaining
data points in the "odd" rows and columns unchanged.

The output values at the output data locations are created by performing an average of the original data point and
its valid surrounding data points; what is essentially a 3x3 smoothing filter.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CIMG">
            <summary>

       The IMG class performs read and write operations on grid
       file data. When efficient access along both rows and columns
       is desired the PG class is recommended (see PG and PGU);
       the IMG is first created, then the PG is obtained from
       the IMG using GetPG_IMG.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIGRF.DateRange(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double@,System.Double@)">
            <summary>Determine the range of years covered by an IGRF or DGRF file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Model data file name</param>
            <param name="d2">Minimum year  (&amp;lt;define&amp;gt;rMAX&amp;lt;/define&amp;gt; if none found)</param>
            <param name="d3">Maximum year  (&amp;lt;define&amp;gt;rMIN&amp;lt;/define&amp;gt; if none found)</param>
            <remarks>
This is useful when using a DGRF file, because the system is set
up only to calculate for years within the date range, and will
return an error otherwise.
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIGRF.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.Double,System.Int32,System.String)">
            <summary>Create an IGRF.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="d1">Date required</param>
            <param name="i2">Year of the IGRF model to use</param>
            <param name="str3">Name of the IGRF reference data file</param>
            <remarks>
If the year of the IGRF model is dummy, then
the IGRF year nearest to the line's date will
be used. Otherwise, the specified year is used.
</remarks>
            <returns>IGRF Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIGRF.CalcVV(GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Calculate IGRF data VV's for a given IGRF model.</summary>
            <param name="oVV1">Input elevation data (metres)</param>
            <param name="oVV2">Input longitude data (-180 to 180)</param>
            <param name="oVV3">Input latitude data  (-90 to 90)</param>
            <param name="oVV4">Output total field</param>
            <param name="oVV5">Output inclination</param>
            <param name="oVV6">Output declination</param>
            <remarks>
Calculate IGRF data (total field, inclination, and declination)
for a given IGRF model. The model used will be the same as that
obtained with Create_IGRF.
All of the VV's should be the same length. The function
will abort if they are not.

No assumption is made on what data types are contained by
any of the VV's. However, all total field, inclination, and
declination values are internally calculated as real data.
These values will be converted to the types contained in the
output VV's.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CIGRF.Calc(System.Double,System.Double,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>Calculate IGRF data for a given IGRF model.</summary>
            <param name="d1">Elevation (metres)</param>
            <param name="d2">Longitude (-180 to 180)</param>
            <param name="d3">Latitude  (-90 to 90) Returns</param>
            <param name="d4">Field strength</param>
            <param name="d5">Field inclination</param>
            <param name="d6">Field declination</param>
            <remarks>
Calculate IGRF data (total field, inclination, and declination)
for a given IGRF model. The model used will be the same as that
obtained with Create_IGRF.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CIGRF">
            <summary>

       International Geomagnetic Reference Field
       Methods to work with IGRF objects. The IGRF object
       contains data for the IGRF model of the geomagnetic
       reference field.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHXYZ.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Set the metadata of a grid.</summary>
            <param name="oMETA1">META object to add to HXYZ's meta</param>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHXYZ.hCreateSQL(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,System.String)">
            <summary>Make an HXYZ from SQL Query</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Template File Name</param>
            <param name="str2">X field name</param>
            <param name="str3">Y field name</param>
            <param name="str4">Z field name</param>
            <param name="oIPJ5">Projection of data values</param>
            <param name="str6">Name of HXYZ object</param>
            <returns>HXYZ object</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHXYZ.hCreateDB(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB,GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Make an HXYZ from GDB</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">DB handle</param>
            <param name="oVV2">VV of channels to export</param>
            <param name="str3">Name of HXYZ object</param>
            <returns>HXYZ object</returns>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHXYZ.GetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the metadata of a grid.</summary>
            <param name="oMETA1">META object to save HXYZ's meta to</param>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHXYZ.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create a handle to an HXYZ object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>HXYZ Object</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CHXYZ">
            <summary>

       High Performance Data Point Storage. This is used
       to put Point data on a DAP server. It is compressed
       and uses a Quad-Tree design to allow very high speed
       data extraction. It is also multi-threaded.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHGD.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Set the metadata of a grid.</summary>
            <param name="oMETA1">META object to add to HGD's meta</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHGD.hCreateIMG(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CIMG,System.String)">
            <summary>Make an HGD from an IMG</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oIMG1">Image Handle</param>
            <param name="str2">Name of HGD object</param>
            <returns>HGD Object</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHGD.GetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the metadata of a grid.</summary>
            <param name="oMETA1">META object to save HGD's meta to</param>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHGD.ExportIMG(System.String)">
            <summary>Export all layers of this HGD into grid files.</summary>
            <param name="str1">Name of grids (each layers adds _Number to the name)</param>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHGD.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create a handle to an HGD object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File Name</param>
            <returns>HGD handle, terminates if creation fails</returns>
            <available_version>5.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CHGD">
            <summary>

       High Performance Grid. Designed to place grid data
       on a DAP server. It produces a multi-resolution
       compressed object that supports multi-threading and
       allows for high-speed extraction of data at any
       resolution.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.WriteZ(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write data to a GRID3D in the Z direction</summary>
            <param name="i1">X location</param>
            <param name="i2">Y location</param>
            <param name="i3">Z location</param>
            <param name="oVV4">VV Containing Data</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.ReadZ(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read data from a GRID3D in the Z direction</summary>
            <param name="i1">X location</param>
            <param name="i2">Y location</param>
            <param name="i3">Z location</param>
            <param name="oVV4">VV Containing Data</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.WriteY(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write data to a GRID3D in the Y direction</summary>
            <param name="i1">X location</param>
            <param name="i2">Y location</param>
            <param name="i3">Z location</param>
            <param name="oVV4">VV Containing Data</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.ReadY(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read data from a GRID3D in the Y direction</summary>
            <param name="i1">X location</param>
            <param name="i2">Y location</param>
            <param name="i3">Z location</param>
            <param name="oVV4">VV Containing Data</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.WriteX(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Write data to a GRID3D in the X direction (MOST EFFICIENT)</summary>
            <param name="i1">X location</param>
            <param name="i2">Y location</param>
            <param name="i3">Z location</param>
            <param name="oVV4">VV Containing Data</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.ReadX(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read data from a GRID3D in the x direction (MOST EFFICIENT)</summary>
            <param name="i1">X location</param>
            <param name="i2">Y location</param>
            <param name="i3">Z location</param>
            <param name="oVV4">VV Containing Data</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetElementsInBlockZ">
            <summary>Get the number of cells in the block in the Z direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetElementsInBlockY">
            <summary>Get the number of cells in the block in the Y direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetElementsInBlockX">
            <summary>Get the number of cells in the block in the X direction</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.FillVector(System.Double,System.Double,System.Double)">
            <summary>Fill the grid3d with a single vector value.</summary>
            <param name="d1">Fill Value X</param>
            <param name="d2">Fill Value Y</param>
            <param name="d3">Fill Value Z</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.FillThematic(System.Int32)">
            <summary>Fill the grid3d with a single thematic value.</summary>
            <param name="i1">Fill Value</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.FillDouble(System.Double)">
            <summary>Fill the grid3d with a single double value.</summary>
            <param name="d1">Fill Value</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetVectorStats(System.Int32@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get Vector Data statistics.</summary>
            <param name="i1">Number of valid values</param>
            <param name="i2">Number of invalid values</param>
            <param name="d3">Min X value</param>
            <param name="d4">Min Y value</param>
            <param name="d5">Min Z value</param>
            <param name="d6">Maximum X value</param>
            <param name="d7">Maximum Y value</param>
            <param name="d8">Maximum Z value</param>
            <param name="d9">Mean X value</param>
            <param name="d10">Mean Y value</param>
            <param name="d11">Mean Z value</param>
            <param name="d12">Standard X Deviation</param>
            <param name="d13">Standard Y Deviation</param>
            <param name="d14">Standard Z Deviation</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetThematicStats(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>Get Thematic Data statistics.</summary>
            <param name="i1">Number of valid values</param>
            <param name="i2">Number of invalid values</param>
            <param name="i3">Min value</param>
            <param name="i4">Maximum value</param>
            <param name="i5">Mean value</param>
            <param name="i6">Standard Deviation</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetDoubleStats(System.Int32@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get Double statistics.</summary>
            <param name="i1">Number of valid values</param>
            <param name="i2">Number of invalid values</param>
            <param name="d3">Min value</param>
            <param name="d4">Maximum value</param>
            <param name="d5">Mean value</param>
            <param name="d6">Standard Deviation</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.SetTPAT(GeoEngine.Core.GXNetX.CTPAT)">
            <summary>Set the TPAT of a thematic grid3d.</summary>
            <param name="oTPAT1">TPAT object</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetTPAT(GeoEngine.Core.GXNetX.CTPAT)">
            <summary>Get the TPAT from the thematic grid3d.</summary>
            <param name="oTPAT1">TPAT object</param>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.iIsVector">
            <summary>Does this grid3d contain vector data</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.iIsDouble">
            <summary>Does this grid3d contain floating point data</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.iIsThematic">
            <summary>Does this grid3d contain thematic data</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGRID3D.GetType">
            <summary>Get the type of this GRID3D</summary>
            <available_version>9.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGRID3D">
            <summary>

       High Performance 3D Grid.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.SetTriangulationObjectIndex(System.Int32)">
            <summary>Set the triangulation object index (Micromine)</summary>
            <param name="i1">Triangulation object index</param>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Save the META back to GIS</summary>
            <param name="oMETA1">META object to save to GIS meta</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.SetLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Save a LST of items inside the GIS object for special use.</summary>
            <param name="oLST1">LST object to save to GIS LST.</param>
            <remarks>
If the GIS LST object already exists, it is destroyed and
recreated to match the size of the input LST, before the
input LST is copied to it.
</remarks>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.SetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Save the IPJ back to GIS file</summary>
            <param name="oIPJ1">IPJ to save</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.SetDmWireframePtFile(System.String)">
            <summary>Specify the wireframe point file corresponding to the input file.</summary>
            <param name="str1">Name of the wireframe point file</param>
            <remarks>
Datamine wireframe models are specified by pairs of files,
the first is the triangle node file, and the second gives
the XYZ locations of the node points. This
function allows you to specify the latter when reading the
first, so that the full model can be decoded.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadShapesGDB(GeoEngine.Core.GXNetX.CDB)">
            <summary>Load GIS shapes table information into separate lines in a GDB.</summary>
            <param name="oDB1">Database</param>
            <remarks>
All fields of the database will be loaded into the group.

Channels will use the same name (or a allowable alias) as
the GIS field name.

If a channel does not exist, it will be created based on the
characteristics of the GIS field.

If a channel exists, it will be used as-is.

The shape ID will be used as the line numbers.
</remarks>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadPLY(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Load GIS table drawing into a Multi-Polygon object.</summary>
            <param name="oPLY1">Polygon object in which to place GIS shapes.</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadMetaGroupsMAP(GeoEngine.Core.GXNetX.CMVIEW,GeoEngine.Core.GXNetX.CMETA,System.Int32,System.String,System.String)">
            <summary>Load GIS table drawing into a MVIEW.</summary>
            <param name="oMVIEW1">View in which to place GIS drawing.</param>
            <param name="oMETA2" />
            <param name="i3">Class</param>
            <param name="str4">Group Name prefix</param>
            <param name="str5">Name field (Empty to use ID of entity)</param>
            <remarks>
The GIS drawing will be drawn in the current group.
A group will be created for every entity and data items
containing an entity's field will be added to the Meta
information of every group into the class specified.
Note that the map may grow very large for big datasets.
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadMAPEx(GeoEngine.Core.GXNetX.CMAP,System.String)">
            <summary>Load GIS table drawing into a MAP.</summary>
            <param name="oMAP1">Map handle</param>
            <param name="str2">Name of existing data view</param>
            <remarks>The GIS drawing will be drawin in the current group.</remarks>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadMAP(GeoEngine.Core.GXNetX.CMVIEW)">
            <summary>Load GIS table drawing into a MVIEW.</summary>
            <param name="oMVIEW1">View in which to place GIS drawing.</param>
            <remarks>The GIS drawing will be drawin in the current group.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadGDB(GeoEngine.Core.GXNetX.CDB)">
            <summary>Load GIS table information into a GDB.</summary>
            <param name="oDB1">Database</param>
            <remarks>
All fields of the database will be loaded into the group.

Channels will use the same name (or a allowable alias) as
the GIS field name.

If a channel does not exist, it will be created based on the
characteristics of the GIS field.

If a channel exists, it will be used as-is.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.LoadASCII(GeoEngine.Core.GXNetX.CWA)">
            <summary>Save GIS attribute table information (string fields) into a WA.</summary>
            <param name="oWA1">WA object</param>
            <remarks>
All string fields (excluding X/Y and numerical fields) will be saved into the WA columns.

e field names are saved in the first line, followed by a blank line.
e field columns are separated by a tab (delimited character).
</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.IScanMIRasterTabFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Scan and set up a MapInf RASTER.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of input file</param>
            <param name="str2">Name of Raster file (an IMG DAT)</param>
            <param name="oIPJ3">Projection</param>
            <remarks>This will create a GI file for the raster image.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iNumShapes">
            <summary>The number of shape entities in the GIS dataset</summary>
            <returns>The number of shape entities</returns>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iNumAttribs">
            <summary>The number of attribute fields in the GIS dataset</summary>
            <returns>The number of attribute fields</returns>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iIsSHPFilePoint">
            <summary>Returns TRUE if an ArcView SHP file is type POINT or POINTZ</summary>
            <remarks>Fails if not &amp;lt;define&amp;gt;GIS_TYPE_ARCVIEW&amp;lt;/define&amp;gt;.</remarks>
            <returns>
0 if the SHP file is not points
if the SHP file is of type POINT or POINTZ
</returns>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iIsSHPFile3D">
            <summary>Returns TRUE if an ArcView SHP file is type POINTZ, ARCZ, POLYGONZ or MULTIPOINTZ</summary>
            <remarks>
SHP files come in 2D and 3D forms.
Fails if not &amp;lt;define&amp;gt;GIS_TYPE_ARCVIEW&amp;lt;/define&amp;gt;.
</remarks>
            <returns>
0 if the SHP file is 2D
1 if the SHP file is of type POINTZ, ARCZ, POLYGONZ or MULTIPOINTZ
</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iIsMIRotatedRasterTabFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns TRUE if file is a rotated MapInfo Raster TAB file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of input tab file</param>
            <remarks>
Returns 1 if:

   a) This is a MapInfo RASTER file
   b) A three-point warp is defined.
   c) The warp requires a rotation in order to exactly map
      the input and output warp points. The rotation must
      be at least 1.e-6 radians.

This function will register an error (and return 0)
if problems are encountered opening or reading the TAB file.
</remarks>
            <returns>
0 if not a rotated MapInfo Raster TAB file
1 if it is (see conditions below).
</returns>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iIsMIRasterTabFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns TRUE if file is a MapInfo Raster TAB file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of input tab file</param>
            <returns>
0 if not a MapInfo Raster TAB file
1 if it is.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iIsMIMapFile(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns TRUE if file is a MapInfo MAP file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of input map file</param>
            <remarks>
It is important not to overwrite a MapInfo MAP file
with a Geosoft one. Use this function to test the MAP
file (looks at the first few bytes).
</remarks>
            <returns>
0 if not a MapInfo MAP file
1 if it is.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.IGetFileName(System.String@)">
            <summary>Get the file name</summary>
            <param name="str1">Returned file name</param>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.iDatamineType(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Returns the type of a Datamine file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of input datamine file</param>
            <remarks>
Terminates if file is not a Datamine file.
A datamine file can contain fields from a multitude
of types, so use iAnd_MATH or iOr_MATH to determine if
the file contains the required data.
</remarks>
            <returns>Datamine file types - bitwise AND of types.</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the range of data in the GIS</summary>
            <param name="d1">X min</param>
            <param name="d2">X max</param>
            <param name="d3">Y min</param>
            <param name="d4">Y max</param>
            <param name="d5">Z min</param>
            <param name="d6">Z max</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.GetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the GIS META</summary>
            <param name="oMETA1">Meta object to store GIS meta information</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.GetIPJ">
            <summary>Get the GIS IPJ</summary>
            <remarks>
This is your copy, you must destroy it.
If the GIS does not have an IPJ, an IPJ with
no warp and UNKNOWN projection is returned.
</remarks>
            <returns>
IPJ handle
NULL if error
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.GetBPRModelsLST(System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get a LST of block models contained in a Gemcom BPR or BRP2 file</summary>
            <param name="str1">BPR or BPR2 file</param>
            <param name="oLST2">Returned LST of block models</param>
            <remarks>
The Returned LST has items in the following format:

Name:  If there is only one sub-directory with models, then only
the block model name "Rock Type_5" is required to ensure uniqueness.
If there is more than one sub-directory, then the name is set
to (.e.g.) "[Standard]Rock Type_5"
Value: Sub-directory file path  "Standard\Rock Type_5.BLK", (includes the extension).

The Gemcom BPR and BPR2 files keep their block models in one
or more sub-directories, identified in the *.CAT file located
beside the input BPR or BPR2.
</remarks>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.CreateMap2D(System.String,System.Double,GeoEngine.Core.GXNetX.CIPJ,System.Int32)">
            <summary>CreateMap2D_GIS   Create a new 2D map for GIS imports.</summary>
            <param name="str1">Map name</param>
            <param name="d2">Map scale (can be &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;)</param>
            <param name="oIPJ3">Projection (no orientation)</param>
            <param name="i4">&amp;lt;define&amp;gt;GIS_MAP2D&amp;lt;/define&amp;gt;</param>
            <remarks>
This function was created to minimize duplication in
creation of new maps with 2D views.
</remarks>
            <available_version>7.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGIS.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.Int32)">
            <summary>Creates a GIS Object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Data source (file)</param>
            <param name="str2">Data qualifying information if required.</param>
            <param name="i3">&amp;lt;define&amp;gt;GIS_TYPE&amp;lt;/define&amp;gt;</param>
            <returns>GIS Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGIS">
            <summary>

       The GIS class is used for the import, export,
       and interrogation of GIS Data stored in external formats,
       such as MapInfoÂ® TAB files.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetShapeProperties(System.String,System.String@,System.String@,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV,GeoEngine.Core.GXNetX.CVV)">
            <summary>Get a shape's properties</summary>
            <param name="str1">Shape GUID</param>
            <param name="str2">Feature GUID</param>
            <param name="str3">Section GUID</param>
            <param name="oVV4">Vertices X location</param>
            <param name="oVV5">Vertices Y location</param>
            <param name="oVV6">Vertices Z location</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetSectionProperties(System.String,System.String@,System.String@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get a section's properties</summary>
            <param name="str1">Section GUID</param>
            <param name="str2">Name</param>
            <param name="str3">ContainerName</param>
            <param name="i4">&amp;lt;define&amp;gt;SECTION_ORIENTATION&amp;lt;/define&amp;gt;</param>
            <param name="d5">Easting</param>
            <param name="d6">Northing</param>
            <param name="d7">Elevation</param>
            <param name="d8">Azimuth</param>
            <param name="d9">Swing</param>
            <param name="d10">A in the scalar equation of best-fit plane describing the section</param>
            <param name="d11">B in the scalar equation of best-fit plane describing the section</param>
            <param name="d12">C in the scalar equation of best-fit plane describing the section</param>
            <param name="d13">D in the scalar equation of best-fit plane describing the section</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetFeatureProperties(System.String,System.String@,System.String@,System.Int32@,System.Int32@,System.Double@,System.Double@,System.Double@,System.Int32@,System.Int32@,System.Int32@,System.Double@,System.Double@,System.Int32@)">
            <summary>Get a feature's properties</summary>
            <param name="str1">Feature GUID</param>
            <param name="str2">Name</param>
            <param name="str3">Description</param>
            <param name="i4">Indicates if feature is described by polygons (shapes are polylines if not set)</param>
            <param name="i5">The fill pattern number (see PatNumber_MVIEW)</param>
            <param name="d6">The fill pattern size (see PatSize_MVIEW)</param>
            <param name="d7">The fill pattern thickness (see PatThick_MVIEW)</param>
            <param name="d8">The fill pattern density (see PatDensity_MVIEW)</param>
            <param name="i9">The fill color (an MVIEW color)</param>
            <param name="i10">The fill background color (an MVIEW color)</param>
            <param name="i11">The line style (see LineStyle_MVIEW)</param>
            <param name="d12">The line thickness (see LineThick_MVIEW)</param>
            <param name="d13">The dash pattern pitch (see LineStyle_MVIEW)</param>
            <param name="i14">The line color (an MVIEW color)</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetShapesForFeatureAndSection(System.String,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get all shapes linked to a specific feature and section</summary>
            <param name="str1">Feature GUID</param>
            <param name="str2">Section GUID</param>
            <param name="oLST3">LST to fill</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetShapesForSection(System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get all shapes linked to a specific section</summary>
            <param name="str1">Section GUID</param>
            <param name="oLST2">LST to fill</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetShapesForFeature(System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Get all shapes linked to a specific feature</summary>
            <param name="str1">Feature GUID</param>
            <param name="oLST2">LST to fill</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetAllShapes(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the all shapes</summary>
            <param name="oLST1">LST to fill</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetSections(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the sections</summary>
            <param name="oLST1">LST to fill</param>
            <remarks>List items are returned with section GUID in name and section name in value.</remarks>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetFeatures(GeoEngine.Core.GXNetX.CLST)">
            <summary>Get the features</summary>
            <param name="oLST1">LST to fill</param>
            <remarks>List items are returned with feature GUID in name and feature name in value.</remarks>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the coordinate system of the Geostring.</summary>
            <param name="oIPJ1">IPJ in which to place the Geostring coordinate system</param>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGEOSTRING.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Open a Geostring file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Geostring file name</param>
            <param name="i2">&amp;lt;define&amp;gt;GEOSTRING_OPEN&amp;lt;/define&amp;gt;</param>
            <returns>GEOSTRING Object</returns>
            <available_version>8.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGEOSTRING">
            <summary>

       The GEOSTRING class is used to read information stored in Geostring files 
       (*.geosoft_string). Geosoft geostrings are 3D vector files that store digitized 
       interpretations drawn on section maps. Both polygon and polyline features can be 
       stored in the same file. This API currently only provides read access, 
       but read/write support could be added in the future.
   
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGEOSOFT">
            <summary>

       This is not a class but a collection of global defines. It
       is used by all functions.
   
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGEO">
            <summary>

       GEO Utility functions
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CEXT.GetInfo(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Double@,System.Double@,System.Double@,System.Double@,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Retrieves information about an external image format.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Image Name</param>
            <param name="d2">X Min</param>
            <param name="d3">Y Min</param>
            <param name="d4">X Max</param>
            <param name="d5">Y Max</param>
            <param name="oIPJ6">Projection Information</param>
            <available_version>5.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CEXT">
            <summary>

       External (plug-in) image methods.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CE3DV.GetBaseView">
            <summary>Get the current Base MVIEW (used to draw 2D legends for groups)</summary>
            <returns>MVIEW object</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CE3DV.GetDataView">
            <summary>Get the current data (3D) MVIEW</summary>
            <returns>MVIEW object</returns>
            <available_version>9.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CE3DV">
            <summary>

       Methods to manipulate an active 3D View
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SpatialAccuracy(System.Double)">
            <summary>Specify the spatial accuracy required.</summary>
            <param name="d1">Spatial accuracy desired</param>
            <remarks>
Must be specified in the units of the selection IPJ.

The spatial accuracy is used improve compression performance for
the spatial component of the data returned.
You can reduce this number to achieve better compression ratios.
This should only be used when there is one data type in the data.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SetIPJ(GeoEngine.Core.GXNetX.CIPJ,System.Int32)">
            <summary>Set the desired projection</summary>
            <param name="oIPJ1">IPJ to set</param>
            <param name="i2">TRUE to force reprojection, if possible</param>
            <remarks>
If the server supports reprojection, the data will be
reprojected at the server.

If reprojection is not forced, the data may come in any projection.

The spatial resolution and accuracy are accumed to be in the
coordinate system defined by this IPJ.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SetExtractAsDocument(System.Int32)">
            <summary>Specify that we want to extract this file as a document</summary>
            <param name="i1">TRUE (1) if we want as a document</param>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SelectSize(System.Int32,System.Int32)">
            <summary>Specify the image size desired</summary>
            <param name="i1">Image width in pixels</param>
            <param name="i2">Image height in pixels</param>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SelectResolution(System.Double,System.Int32)">
            <summary>Specify the resolution desired</summary>
            <param name="d1">Minimum Resolution</param>
            <param name="i2">TRUE to force this resolution, if possible</param>
            <remarks>
Resolution must be specified in the units of the selection IPJ.

This will be the optimum data resoulution.  (grid cell for grids, data
separation for other data types).
You will normally get a reasonable resolution as near to or smaller than
this unless sRequireResolution_DSEL has been set.

Call sRequireResolution_DSEL with TRUE to force the client to re-sample
the data to the resolution requested.
</remarks>
            <available_version>5.0.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SelectRect(System.Double,System.Double,System.Double,System.Double)">
            <summary>Select a rectangular area.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Min Y</param>
            <param name="d3">Max X</param>
            <param name="d4">Max Y</param>
            <available_version>5.0.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.SelectArea(GeoEngine.Core.GXNetX.CPLY)">
            <summary>Select a complex clipping area</summary>
            <param name="oPLY1">PLY containing complex area (must contain a projection)</param>
            <remarks>
The DAP server may not handle clipping and may return
more data than requested.
</remarks>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.RequestAllInfo(System.Int32)">
            <summary>Request that all meta-data info be sent</summary>
            <param name="i1">TRUE to for all data, FALSE - for normal data</param>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.PictureQuality(System.Int32)">
            <summary>Specify the quality of pictures being returned.</summary>
            <param name="i1">Quality</param>
            <remarks>Affected Data Types: PICTURE</remarks>
            <available_version>5.1.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.MetaQuery(System.String)">
            <summary>Specify a metadata query string.</summary>
            <param name="str1">Meta query string</param>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.DataSignificantFigures(System.Double)">
            <summary>Specify the data significant figures required</summary>
            <param name="d1">Significant figures (positive, can be fractional)</param>
            <remarks>
This is the number of significant figures that you require for the data.
You can reduce this number to achieve better compression ratios.
This should only be used when there is one data type in the data.

See sSpatialResolution_DSEL to set the desired spatial resolution.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDSEL.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create a Selection object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>DSEL handle, terminates if creation fails</returns>
            <available_version>5.0.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDSEL">
            <summary>

       The DSEL object is used to select subsets of data from the DATA object
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.TestFunc(GeoEngine.Core.GXNetX.CRA)">
            <summary>Temporary test function.</summary>
            <param name="oRA1">RA handle to text file to import.</param>
            <remarks>Designed to import the "Massive.xyz" file, which has data in the format "X Y Z Data".</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Processing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.Commit">
            <summary>Commit remaining data to the database.</summary>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Processing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.AddBlock(System.Int32)">
            <summary>Add the current block of data.</summary>
            <param name="i1">Line</param>
            <remarks>First, set up the data for each channel by copying values into the individual channel VVs and VAs.</remarks>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Processing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.iGetChanArraySize(System.Int32)">
            <summary>Get the number of columns of data in a channel.</summary>
            <param name="i1">Index of channel to access.</param>
            <remarks>
Regular channels have one column of data. Array channels have more than one column of data.
This function should be called to determine whether to use GetVV_DBWRITE or GetVA_DBWRITE to access data
for a channel.
</remarks>
            <returns>The number of columns (array size) for a channel</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.GetVVz">
            <summary>Get the Z channel VV handle.</summary>
            <remarks>
Only available for the CreateXY or CreateXYZ methods.
The VV is filled anew for each block served up.
If the Z channel is an array channel, the returned VV is the "base" VV of the VA and contains all items sequentially.
</remarks>
            <returns>VV handle</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.GetVVy">
            <summary>Get the Y channel VV handle.</summary>
            <remarks>
Only available for the CreateXY or CreateXYZ methods.
The VV is filled anew for each block served up.
</remarks>
            <returns>VV handle</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.GetVVx">
            <summary>Get the X channel VV handle.</summary>
            <remarks>
Only available for the CreateXY or CreateXYZ methods.
The VV is filled anew for each block served up.
</remarks>
            <returns>VV handle</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.GetVA(System.Int32)">
            <summary>Get the VA handle for an array channel.</summary>
            <param name="i1">Index of channel to access.</param>
            <remarks>
Call only for array (multi-column) channels. You can call the iGetChanArraySize_DBWRITE
function to find the number fo columns in a given channel, or you can call iCol_VA on the returned VA handle.
The VA is filled anew for each block served up.
</remarks>
            <returns>VA handle</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.GetVV(System.Int32)">
            <summary>Get the VV handle for a channel.</summary>
            <param name="i1">Index of channel to access.</param>
            <remarks>
Call only for single-column (regular) channels. You can call the iGetChanArraySize_DBWRITE
function to find the number fo columns in a given channel. The VV is filled anew for each block served up.
</remarks>
            <returns>VV handle</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.GetDB">
            <summary>Get the output DB handle from the DBWRITE object.</summary>
            <returns>DB handle</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.iAddChannel(System.Int32)">
            <summary>Add a data channel to the DBWRITE object.</summary>
            <param name="i1">Channel handle (does not need to be locked, but can be.)</param>
            <returns>Channel index. Use for getting the correct VV or VA object.</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.CreateXYZ(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB)">
            <summary>
Create a DBWRITE object for a XYZ-located data.
Add channels using the iAddChannel_DBWRITE method.channel
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database input</param>
            <returns>DBWRITE object</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.CreateXY(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB)">
            <summary>
Create a DBWRITE object for a XY-located data. Add channels using the
iAddChannel_DBWRITE method.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database input</param>
            <returns>DBWRITE object</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBWRITE.Create(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB)">
            <summary>
Create a DBWRITE object
Add channels using the iAddChannel_DBWRITE method.channel.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database input</param>
            <returns>DBWRITE object</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDBWRITE">
            <summary>

       The DBWRITE class is used to open and write to databases. Large blocks of data
       are split into blocks and served up sequentially to prevent the over-use of virtual memory when VVs or VAs are being written to channels.
       Individual data blocks are limited by default to 1 MB (which is user-alterable). Data less than the block size
       are served up whole, one block per line.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.iGetNextBlock(System.Int32@,System.Int32@,System.Int32@)">
            <summary>Get the next block of data.</summary>
            <param name="i1">(returned) The index into the input selected line list of the line whose data is contained in the current block</param>
            <param name="i2">(returned) The block index (0 to NBlocks-1) for the current line of data.</param>
            <param name="i3">(returned) The number of blocks that the current line is split into.</param>
            <remarks>
The next block of data is read and copied into the channel VV and/or VA objects, accessed using
the GetVV_DBREAD and GetVA_DBREAD functions.
</remarks>
            <returns>Returns the current block index, or -1 if at end of file (no new data returned).</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Processing</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.iGetNumberOfBlocksToProcess">
            <summary>Get the number of blocks to be served up.</summary>
            <remarks>
The selected lines are scanned. All lines where the served up data is less than the maximum block size for
all channels are served as a single block. Any lines where any channel's data exceeds the maximum block size are split up into blocks.
The value returned can be used as the progress message maximum iteration value.
</remarks>
            <returns>The number of blocks to process in the selected lines.</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.iGetChanArraySize(System.Int32)">
            <summary>Get the number of columns of data in a channel.</summary>
            <param name="i1">Index of channel to access.</param>
            <remarks>
Regular channels have one column of data. Array channels have more than one column of data.
This function should be called to determine whether to use GetVV_DBREAD or GetVA_DBREAD to access data
for a channel.
</remarks>
            <returns>The number of columns (array size) for a channel</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.GetVVz">
            <summary>Get the Z channel VV handle.</summary>
            <remarks>
Only available for the CreateXY or CreateXYZ methods.
The VV is filled anew for each block served up.
If the Z channel is an array channel, the returned VV is the "base" VV of the VA and contains all items sequentially.
</remarks>
            <returns>VV handle</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.GetVVy">
            <summary>Get the Y channel VV handle.</summary>
            <remarks>
Only available for the CreateXY or CreateXYZ methods.
The VV is filled anew for each block served up.
</remarks>
            <returns>VV handle</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.GetVVx">
            <summary>Get the X channel VV handle.</summary>
            <remarks>
Only available for the CreateXY or CreateXYZ methods.
The VV is filled anew for each block served up.
</remarks>
            <returns>VV handle</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.GetVA(System.Int32)">
            <summary>Get the VA handle for an array channel.</summary>
            <param name="i1">Index of channel to access.</param>
            <remarks>
Call only for array (multi-column) channels. You can call the iGetChanArraySize_DBREAD
function to find the number fo columns in a given channel, or you can call iCol_VA on the returned VA handle.
The VA is filled anew for each block served up.
</remarks>
            <returns>VA handle</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.GetVV(System.Int32)">
            <summary>Get the VV handle for a channel.</summary>
            <param name="i1">Index of channel to access.</param>
            <remarks>
Call only for single-column (regular) channels. You can call the iGetChanArraySize_DBREAD
function to find the number fo columns in a given channel. The VV is filled anew for 
each block served up.
</remarks>
            <returns>VV handle</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data Access Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.iAddChannel(System.Int32)">
            <summary>Add a data channel to the DBREAD object.</summary>
            <param name="i1">Channel handle (does not need to be locked, but can be.)</param>
            <returns>Channel index. Use for getting the correct VV or VA object.</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.CreateXYZ(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB,GeoEngine.Core.GXNetX.CLST)">
            <summary>
Create a DBREAD object for a XYZ-located data.
Add channels using the iAddChannel_DBREAD method.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database input</param>
            <param name="oLST2">List of lines to process NAME = line name, VALUE = line symbol</param>
            <returns>DBREAD object</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.CreateXY(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB,GeoEngine.Core.GXNetX.CLST)">
            <summary>
Create a DBREAD object for a XY-located data. Add channels using the
iAddChannel_DBREAD method.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database input</param>
            <param name="oLST2">List of lines to process NAME = line name, VALUE = line symbol</param>
            <returns>DBREAD object</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDBREAD.Create(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB,GeoEngine.Core.GXNetX.CLST)">
            <summary>
Create a DBREAD object
Add channels using the iAddChannel_DBREAD method.channel.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Database input</param>
            <param name="oLST2">List of lines to process NAME = line name, VALUE = line symbol</param>
            <returns>DBREAD object</returns>
            <available_version>8.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Create Methods</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDBREAD">
            <summary>

       The DBREAD class is used to open and read from databases. Very large lines
       are split into blocks and served up sequentially to prevent the over-use of virtual memory when channels are read into VVs or VAs.
       Individual data blocks are limited by default to 1 MB (which is user-alterable). Single lines smaller than the block size
       are served up whole, one block per line.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetVAWindows(System.Int32,System.Int32,System.Int32)">
            <summary>Set the range of windows to display for a VA channel.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="i2">First window (0 to N-1, iDummy for default)</param>
            <param name="i3">Last window (0 to N-1, iDummy for default)</param>
            <remarks>
Use to display a subset of the VA channel windows in the GDB.
Windows index from 0.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetVASectColorFile(System.Int32,System.String)">
            <summary>Set colors for a VA channel when displayed section in the profile window.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="str2">Zone file name</param>
            <remarks>
Fails in the channel is not an array channel, if the
file does not exist, or if it is not a valid color zone file.
</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetVAScaling(System.Int32,System.Double,System.Double)">
            <summary>Set base and range for VA channel cell display.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="d2">Base value (rDummy for none)</param>
            <param name="d3">Range value (rDummy for none)</param>
            <remarks>
By default, VA profiles autoscale to fit in the database cell.
This lets the user set a single base and range for all cells.
If either input is a dummy, both are set as dummies, and autoscaling
is used.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetVAProfSectOption(System.Int32,System.String)">
            <summary>Set the display options of VA channels</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="str2">Option  "Profile", "Section" or "Section and Profile"</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetVAProfColorFile(System.Int32,System.String)">
            <summary>Set colors for a VA channel when displayed in the profile window.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="str2">Zone file name, "" to clear.</param>
            <remarks>
Fails in the channel is not an array channel, if the
file does not exist, or if it is not a valid color zone file.

The individual columns in the array channel are displayed using the input
zone file colors. A linear ITR from 0 to 1 is created on the color zones
to map to individual channel indices (expressed as a fraction as shown below).

For instance, for a file with 8 colors the ranges are as follows:

Color Range
Color 1    0        &gt; value &gt;=  0.125
Color 2    0.125    &gt; value &gt;=  0.25
Color 3    0.25     &gt; value &gt;=  0.375
Color 4    0.375    &gt; value &gt;=  0.5
Color 5    0.5      &gt; value &gt;=  0.625
Color 6    0.625    &gt; value &gt;=  0.75
Color 7    0.75     &gt; value &gt;=  0.875
Color 8    0.875    &gt; value &gt;=  1.0

When an array channel is displayed, the index of each element (column) is mapped
into the corresponding range above using the following formula:

value = (column index) / (# of columns - 1)

For an array with 8 columns, you get the following values:

Column   Value    Color
0        0        1
1        0.14     2
2        0.28     3
3        0.43     4
4        0.57     5
5        0.71     6
6        0.86     7
7        1.0      8

The color file search path is: Local directory, then oasismontaj\tbl.
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetGroupClass(System.Int32,System.String)">
            <summary>Set the Class name for a group line.</summary>
            <param name="i1">Group line - &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</param>
            <param name="str2">&amp;lt;define&amp;gt;DB_GROUP_CLASS_SIZE&amp;lt;/define&amp;gt;</param>
            <remarks>
This method fails if the line is not a group line.
Group classes are used to identify group lines used for
special purposes. All group lines with the same class share
the same list of associated channels.

As of v6.3, if a group line has no class defined, then ALL
channels are assumed to be associated with it. This means
that a group class should only be defined when you wish to
associate a subset of the available channels to group line.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.PutChanVA(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVA)">
            <summary>Place the contents of a VA in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVA3">VA from which to get the data</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsWholeplot">
            <summary>Is this a Wholeplot database?</summary>
            <remarks>Currently checks to see if the DH_COLLAR line exists.</remarks>
            <returns>
1 if it is a Wholeplot database
0 if it is not.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsAssociated(System.Int32,System.Int32)">
            <summary>Check to see if a channel is associated with group.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <returns>
0 if not a group line, or if the channel is not associated.

As of v6.3, if a group line has no class defined, then ALL
channels are automatically assumed to be associated with it.
</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetVASectColorFile(System.Int32,System.String@)">
            <summary>Get colors for a VA channel when displayed section in the profile window.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="str2">Zone file name</param>
            <remarks>Fails in the channel is not an array channel</remarks>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetVAProfSectOption(System.Int32,System.String@)">
            <summary>Get the display options of VA channels</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="str2">Option  "Profile", "Section" or "Section and Profile"</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetVAProfColorFile(System.Int32,System.String@)">
            <summary>Get colors for a VA channel when displayed in the profile window.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="str2">Zone file name, "" to clear.</param>
            <remarks>See SetVAProfColorFile_DB.</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetInfo(System.Int32)">
            <summary>Get information about the database.</summary>
            <param name="i1">&amp;lt;define&amp;gt;DB_INFO&amp;lt;/define&amp;gt;</param>
            <returns>x - Return Value</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetGroupClass(System.Int32,System.String@)">
            <summary>Set the Class name for a group line.</summary>
            <param name="i1">Group line - &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;</param>
            <param name="str2">Returned class name - max size = &amp;lt;define&amp;gt;DB_GROUP_CLASS_SIZE&amp;lt;/define&amp;gt; - 1</param>
            <remarks>
This method fails if the line is not a group line.
Group classes are used to identify group lines used for
special purposes, e.g.: "COLLAR" for the Wholeplot collar table,
or "TARGETS" for the UX-Detect Targets list.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetVABaseCoordinateInfo(System.Int32,System.Int32@,System.Double@,GeoEngine.Core.GXNetX.CVV,System.String@)">
            <summary>Set the array channel base coordinate type, offset and values.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt;)</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_ARRAY_BASETYPE&amp;lt;/define&amp;gt;</param>
            <param name="d3">Optional offset or base frequency</param>
            <param name="oVV4">Values (one per array channel column) (REAL)</param>
            <param name="str5">Units</param>
            <remarks>See SetVABaseCoordinateInfo_DB.</remarks>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetVABaseCoordinateInfo(System.Int32,System.Int32,System.Double,GeoEngine.Core.GXNetX.CVV,System.String,System.Int32)">
            <summary>Set the array channel base coordinate type, offset and values.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_ARRAY_BASETYPE&amp;lt;/define&amp;gt;</param>
            <param name="d3">Optional offset or base frequency</param>
            <param name="oVV4">Values (one per array channel column) (REAL)</param>
            <param name="str5">Units</param>
            <param name="i6">Allow changes to existing values?</param>
            <remarks>See GetVABaseCoordinateInfo_DB.</remarks>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetVAWindows(System.Int32,System.Int32@,System.Int32@)">
            <summary>Get the range of windows displayed for a VA channel.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="i2">First window (0 to N-2, iDummy for default)</param>
            <param name="i3">Last window (1 to N-1, iDummy for default)</param>
            <remarks>See SetVAWindows_DB.</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetVAScaling(System.Int32,System.Double@,System.Double@)">
            <summary>Get base and range for VA channel cell display.</summary>
            <param name="i1">Channel (Locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;)</param>
            <param name="d2">Base value (rDummy for none)</param>
            <param name="d3">Range value (rDummy for none)</param>
            <remarks>See SetVAScaling_DB.</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetChanVA(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVA)">
            <summary>Place the contents of a channel in a VA.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVA3">VA in which to place the data</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GenValidLineSymb(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Generate a valid line symb name string from given string.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input string</param>
            <param name="str2">Outout string</param>
            <remarks>
The returned name is either the same size as the input
or shorter. Escapes, leading and trailing spaces are removed, then
all illegal characters are replaced with an underscore.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GenValidChanSymb(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String@)">
            <summary>Generate a valid channel name from a name candidate</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Input string</param>
            <param name="str2">Outout string</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AssociateClass(System.Int32,System.String)">
            <summary>Associate a channel with all groups of a specific class.</summary>
            <param name="i1">Channel</param>
            <param name="str2">Class name of groups to associate the channel with. (Must be defined).</param>
            <remarks>
As of v6.3, if a group line has no class defined, then ALL
channels are automatically assumed to be associated with it.
</remarks>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AssociateAll(System.Int32)">
            <summary>Associate all channels with a group.</summary>
            <param name="i1">Group line</param>
            <remarks>
As of v6.3, if a group line has no class defined, then ALL
channels are already assumed to be associated with it, and this
function does nothing.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Associate(System.Int32,System.Int32)">
            <summary>Associate a channel with a group.</summary>
            <param name="i1">Group line</param>
            <param name="i2">Channel</param>
            <remarks>
If it is already associated, or if the group has no
defined group class, does nothing.

As of v6.3, if a group line has no class defined, then ALL
channels are assumed to be associated with it. This means
that you need to associate a new channel with a group only in
those cases where the group class is defined.

If this function is used on a group with a group class, then
the channel is added to class's association list, and the
channel will be recognized as being associated with all
groups of that class.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AddTimeComment(System.String,System.Int32)">
            <summary>Add a comment with the date and time to the activity log of the database.</summary>
            <param name="str1">Comment</param>
            <param name="i2">Indent comment one tab?</param>
            <remarks>
The comment is written in the form:

Comment: 2001/12/31 23:59:59

and is followed by a carriage return.
The activity log is created automatically if it does not exist.

See Notes in AddComment_DB.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AddRealComment(System.String,System.Double,System.Int32)">
            <summary>Add a comment with a float value to the activity log of the database.</summary>
            <param name="str1">Comment</param>
            <param name="d2">Value</param>
            <param name="i3">Indent comment one tab?</param>
            <remarks>
The comment is written in the form:

Comment: Value

and if followed by a carriage return.
The activity log is created automatically if it does not exist.

See Notes in AddComment_DB.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AddIntComment(System.String,System.Int32,System.Int32)">
            <summary>Add a comment with an integer to the activity log of the database.</summary>
            <param name="str1">Comment</param>
            <param name="i2">Value</param>
            <param name="i3">Indent comment one tab?</param>
            <remarks>
The comment is written in the form:

Comment: Value

and is followed by a carriage return.
The activity log is created automatically if it does not exist.

See Notes in AddComment_DB.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AddComment(System.String,System.String,System.Int32)">
            <summary>Add a comment with a string to the activity log of the database.</summary>
            <param name="str1">Comment</param>
            <param name="str2">String</param>
            <param name="i3">Indent comment one tab? (TRUE or FALSE)</param>
            <remarks>
The comment is written in the form:

Comment: String2

and is followed by a carriage return.
The activity log is created automatically if it does not exist.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.AddAssociatedLoad(System.Int32,System.Int32)">
            <summary>Add this channel to the auto-load feature of the group.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <remarks>
If the channel is not yet associated, it is first associated.
If the channel is already in the associated-load list, this
does nothing.

As of v6.0, the load-status of channels is no longer stored
in the database, but in the project, so this function is
equivalent to calling Associate_DB.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>VA Channels</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.UnLockSymb(System.Int32)">
            <summary>UnLocks a symbol.</summary>
            <param name="i1">Symbol to Lock</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.UnLockAllSymb">
            <summary>UnLocks all symbols.</summary>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SymbLST(GeoEngine.Core.GXNetX.CLST,System.Int32)">
            <summary>Populate a LST with database symbols.</summary>
            <param name="oLST1">List to Populate</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <remarks>
Populates a LST with channel, line, blob or user symbols.
The name is put into the "Name" part of the LST (0),
and the handle, an integer value written as a string, is
placed in the value part of the LST (1).

Line symbols are automatically sorted in logical line order.

NOTE: The LST is NOT cleared before being filled. If you
want to clear the LST and get sorted values, use the
ChanLST_DB and LineLST_DB functions.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.StringChanLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with string-type channels.</summary>
            <param name="oLST1">LST object to populate</param>
            <remarks>
The Name of the symbol is placed in the
item name and the item value is set to the symbol handle.
Only channels with the string-type data (sChanType_DB &lt; 0)
are included.

The LST is cleared first, and the items are sorted by name.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetXYZChan(System.Int32,System.String)">
            <summary>Sets current X, Y or Z channel name</summary>
            <param name="i1">&amp;lt;define&amp;gt;DB_CHAN_SYMBOL&amp;lt;/define&amp;gt;</param>
            <param name="str2">Channel name</param>
            <remarks>
If the value specified is "", the internally stored value
is cleared, and GetXYZChan_DB will return "X", "Y" or "Z"

This can be used, for instance, to make "Easting" and "Northing"
the current X and Y channels, and have GXs using the
GetXYZChanSymb_DB function to load "X" and "Y" work as desired.
</remarks>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanOrderLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>
This method sets the channel display order for a
database. The list to modify will be stored in an LST
object. Call GetChanOrderLST_DB to populate the LST.
</summary>
            <param name="oLST1">LST object to modify</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SelectedLineLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with the selected lines.</summary>
            <param name="oLST1">List to Populate</param>
            <remarks>
This method populates a LST object with all of the symbols
of the selected lines in the database.
The name is put into the "Name" part of the LST (0),
and the handle, an integer value written as a string, is
placed in the value part of the LST (1).

Symbols are automatically sorted in logical line order.
</remarks>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.MaskChanLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with mask channels.</summary>
            <param name="oLST1">LST object to populate</param>
            <remarks>
Loads a LST with all channels with CLASS "MASK", as well
as all channels containing the string "MASK", as long
as the CLASS for these channels is not set to something
other than "" or "MASK".

This function is a duplicate of the MaskChanLST_CHIMERA
function, and can be used if CHIMERA is not installed.

The LST is cleared first, and the items are sorted by name.
"None" is added at the end, with a handle value of "-1".
</remarks>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.LockSymb(System.Int32,System.Int32,System.Int32)">
            <summary>Locks a symbol for READONLY or READWRITE.</summary>
            <param name="i1">Symbol to Lock</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_LOCK&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;DB_WAIT&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.LineLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with database lines.</summary>
            <param name="oLST1">List to Populate</param>
            <remarks>
Populates a LST with channel symbols.
The name is put into the "Name" part of the LST (0),
and the handle, an integer value written as a string, is
placed in the value part of the LST (1).
The LST is cleared first, and the items are sorted in logical line order.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iSymbList(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>Place a list of symbols in a VV.</summary>
            <param name="oVV1">VV to populate, must be type INT.</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <returns>Number of symbols.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetXYZChan(System.Int32,System.String@)">
            <summary>Gets current X, Y or Z channel name</summary>
            <param name="i1">&amp;lt;define&amp;gt;DB_CHAN_SYMBOL&amp;lt;/define&amp;gt;</param>
            <param name="str2">Returned name</param>
            <remarks>
searches for the "current" X, Y or Z channel.
If none is defined, then returns "X", "Y" or "Z".
</remarks>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetSymbLock(System.Int32)">
            <summary>Determines if a symbol is locked</summary>
            <param name="i1">Symbol to Lock</param>
            <returns>&amp;lt;define&amp;gt;DB_LOCK&amp;lt;/define&amp;gt;</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iValidSymb(System.Int32,System.Int32)">
            <summary>This method checks to see if the specified symbol is a valid symbol in the database.</summary>
            <param name="i1">Symbol to check</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <returns>
0 - Invalid symbol 
1 - Symbol is valid
</returns>
            <available_version>9.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iExistSymb(System.String,System.Int32)">
            <summary>
This method checks to see if the specified symbol exists
in the database.
</summary>
            <param name="str1">Name of Symbol</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <remarks>
For backward compatibility with GXs not employing the
GetXYZChan_DB function, the following behaviour has
been introduced as of v5.1.3:  (also true for "Y").

iExistSymb_DB(hDB, "X", &amp;lt;define&amp;gt;DB_SYMB_CHAN&amp;lt;/define&amp;gt;) is now equivalent to:

GetXYZChan_DB(hDB, &amp;lt;define&amp;gt;DB_CHAN_X&amp;lt;/define&amp;gt;, sXCh);
iExistSymb_DB(hDB, sXCh, &amp;lt;define&amp;gt;DB_SYMB_CHAN&amp;lt;/define&amp;gt;);

In other words, the current X or Y is searched for, not
necessarily the literal "X" or "Y". This ensures that newer
databases, which might have "Easting" and "Northing"
(or other similar names) instead of "X" and "Y" will still
work with older GXs expecting "X" and "Y".

The new iExistChan_DB searches using the exact channel name.
</remarks>
            <returns>
0 - Symbol does not exist in the database
1 - Symbol Exists
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iExistChan(System.String)">
            <summary>See if the specified channel exists in the database.</summary>
            <param name="str1">Name of Channel</param>
            <remarks>
See notes for iExistSymb_DB.
Introduced in v5.1.3.
iExistChan_DB searches using the exact channel name.
</remarks>
            <returns>
0 - Symbol does not exist in the database
1 - Symbol Exists
</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iClassChanList(GeoEngine.Core.GXNetX.CVV,System.String)">
            <summary>Place a list of channels for a given class in a VV.</summary>
            <param name="oVV1">VV to populate, must be type INT.</param>
            <param name="str2">Class name to match ("" for all)</param>
            <remarks>
This method generates a list of symbols in the database
and places their handles into a VV. The list is not
sorted.
Only channels with the given class name are included,
e.g. use "ASSAY" for assay channels used in CHIMERA.
</remarks>
            <returns>Number of symbols.</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetXYZChanSymb(System.Int32)">
            <summary>Searches for current X, Y or Z channel symbol</summary>
            <param name="i1">&amp;lt;define&amp;gt;DB_CHAN_SYMBOL&amp;lt;/define&amp;gt;</param>
            <returns>
x - Symbol Handle
&amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; - Symbol not found

searches for the "current" X, Y or Z channel.
If none is defined, then looks for "X", "Y" or "Z" channel
If the channel is defined, but not present, returns &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt;.
</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetChanOrderLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>
This method gets the channel display order for a
database. The list will be stored in an LST object.
In order to modify this displayed channels list,
call SetChanOrderLST_DB after.
</summary>
            <param name="oLST1">LST object to populate</param>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.FindSymb(System.String,System.Int32)">
            <summary>Get handle to the specified symbol.</summary>
            <param name="str1">Name of symbol</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <remarks>
To work with a specific column from a VA channel,
specify the VA element number in square brackets as part
of the VA channel name (e.g. "EM[3]" will treat the fourth
column of the VA channel as a VV).

For backward compatibility with GXs not employing the
GetXYZChanSymb_DB function, the following behaviour has
been introduced as of v5.1.3:  (also true for "Y").

FindSymb_DB(hDB, "X", &amp;lt;define&amp;gt;DB_SYMB_CHAN&amp;lt;/define&amp;gt;) is now equivalent to:

GetXYZChanSymb_DB(hDB, &amp;lt;define&amp;gt;DB_CHAN_X&amp;lt;/define&amp;gt;);

In other words, the current X or Y is searched for, not
necessarily the literal "X" or "Y". This ensures that newer
databases, which might have "Easting" and "Northing"
(or other similar names) instead of "X" and "Y" will still
work with older GXs expecting "X" and "Y".

The new FindChan_DB searches using the exact channel name.
</remarks>
            <returns>Symbol Handle, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; if not defined</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.FindChan(System.String)">
            <summary>Get handle to the specified channel.</summary>
            <param name="str1">Name of channel</param>
            <remarks>
To work with a specific column from a VA channel,
specify the VA element number in square brackets as part
of the VA channel name (e.g. "EM[3]" will treat the fourth
column of the VA channel as a VV).

See notes for FindSymb_DB.
Introduced in v5.1.3.
The new FindChan_DB searches using the exact channel name.
</remarks>
            <returns>Channel Handle, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; if not defined</returns>
            <available_version>5.1.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.DupSymbNoLock(System.Int32,System.String)">
            <summary>New Symbol by duplicating an existing symbol, NO LOCK.</summary>
            <param name="i1">Symbol Handle to duplicate</param>
            <param name="str2">Name of the New Symbol</param>
            <remarks>
The symbol will be NOT be locked.
The new name must not already exist in the database.
</remarks>
            <returns>New Symbol Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.DupSymb(System.Int32,System.String)">
            <summary>New Symbol by duplicating an existing symbol, LOCKED</summary>
            <param name="i1">Symbol Handle to duplicate</param>
            <param name="str2">Name of the New Symbol</param>
            <remarks>
The symbol will be locked READWRITE.
The new name must not already exist in the database.
</remarks>
            <returns>New Symbol Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.DupLineSymb(System.Int32,System.String)">
            <summary>
Duplicate a line symbol from a group or line symbol.
The new name must not already exist in the database.
</summary>
            <param name="i1">Symbol Handle to duplicate</param>
            <param name="str2">Name of the New Symbol</param>
            <returns>New Symbol Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.DeleteSymb(System.Int32)">
            <summary>
This method destroys a symbol in the database and all
the data associated with it. The symbol's lock is
automatically removed.
</summary>
            <param name="i1">Symbol to Delete (must be READWRITE locked)</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CSVChanLST(GeoEngine.Core.GXNetX.CLST,System.String)">
            <summary>Load a LST with channels in a comma-separated list.</summary>
            <param name="oLST1">LST object to populate</param>
            <param name="str2">Comma-separated list of channels</param>
            <remarks>
The Name of the symbol is placed in the
item name and the item value is set to the symbol handle.
Only channels in the list which are present in the database
are included.

The LST is cleared first.
</remarks>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CreateSymbEx(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Create a new Symbol.</summary>
            <param name="str1">Symbol Name</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;DB_OWN&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;DB_CATEGORY_USER&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;DB_CATEGORY_LINE&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;DB_CATEGORY_CHAN&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;DB_CATEGORY_BLOB&amp;lt;/define&amp;gt;</param>
            <param name="i5">Extra info, which depends on &amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt; &amp;lt;define&amp;gt;DB_SYMB_CHAN&amp;lt;/define&amp;gt; - element width for a VA channel ignores for all other &amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt; types</param>
            <remarks>
If symbol already exits it is returned.

STRING-type channels: To create a string-type channel,
enter a negative number for the channel category below.
For instance, "-32" will create a string channel with
32 characters per item.

Symbol name for &amp;lt;define&amp;gt;DB_CATEGORY_LINE_FLIGHT&amp;lt;/define&amp;gt; must conform to
the following line naming syntax:

[type][number.version:flight]

Type can be: L - normal line
B - base line
T - tie line
R - trend line
S - test line
P - special line

Examples: L100,
T100.1:16

Note the "Flight" is any whole number that may be useful
to differentiate processing tasks.

The ability to create a VA channel is not available in the
free interface and requires a Montaj license.
</remarks>
            <returns>DB_SYMB handle.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CreateSymb(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Create a new Symbol.</summary>
            <param name="str1">Symbol Name</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_SYMB_TYPE&amp;lt;/define&amp;gt;</param>
            <param name="i3">&amp;lt;define&amp;gt;DB_OWN&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;DB_CATEGORY_USER&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;DB_CATEGORY_LINE&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;DB_CATEGORY_CHAN&amp;lt;/define&amp;gt;, &amp;lt;define&amp;gt;DB_CATEGORY_BLOB&amp;lt;/define&amp;gt;</param>
            <remarks>
If symbol already exits, and it is the same type
simply returns a handle to the existing symbol.

This method simple calls CreateSymbEx_DB with the
extra info set to 1.

STRING-type channels: To create a string-type channel,
enter a negative number for the channel category below.
For instance, "-32" will create a string channel with
32 characters per item.

BLOBS: Blobs (Binary Large Objects) can be used for storing
miscellaneous data which does not fit well into any of the
other various storage objects, such as a REG. Generally,
one or more objects is serialized to a BF object, which
is then written to the blob using the sWriteBlobBF_DB()
function. Retrieval is done in the reverse order, using
sWriteBlobBF_DB() first, then extracting the objects from the
BF object.
To avoid namespace problems, Geosoft reserves the following
name prefixes:

OE.   (Core functions)
GS.   (Applications)
CS.   (Custom Solutions applications)

Programmers should avoid using the above prefixes as the starting
letters of their blob names to avoid any possible conflicts.
</remarks>
            <returns>DB_SYMB Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ClassGroupLST(GeoEngine.Core.GXNetX.CLST,System.String)">
            <summary>Load a LST with group lines in a particular class.</summary>
            <param name="oLST1">LST object to populate</param>
            <param name="str2">CLASS name for the group ("" for all)</param>
            <remarks>
The Name of the symbol is placed in the
item name and the item value is set to the symbol handle.
Only group lines with the given class name are included,
e.g. use "TARGETS" for UX-Detect Target groups.

The LST is cleared first, and the items are sorted by name.
</remarks>
            <available_version>5.0.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ClassChanLST(GeoEngine.Core.GXNetX.CLST,System.String)">
            <summary>Load a LST with channels in a particular class.</summary>
            <param name="oLST1">LST object to populate</param>
            <param name="str2">CLASS name for the channel ("" for all)</param>
            <remarks>
The Name of the symbol is placed in the
item name and the item value is set to the symbol handle.
Only channels with the given class name are included,
e.g. use "ASSAY" for assay channels in CHIMERA.

The LST is cleared first, and the items are sorted by name.
</remarks>
            <available_version>5.0.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.NormalChanLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with non-array database channels.</summary>
            <param name="oLST1">List to Populate</param>
            <remarks>Like ChanLST_DB, but does not include array channels or virtual channels.</remarks>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ChanLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST with database channels.</summary>
            <param name="oLST1">List to Populate</param>
            <remarks>
Populates a LST with channel symbols.
The name is put into the "Name" part of the LST (0),
and the handle, an integer value written as a string, is
placed in the value part of the LST (1).
Array channels are included, as well as virtual channels (array channel single columns loaded in the database like \"Chan[1]\".

The LST is cleared first, and the items are sorted by name.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ArraySizeLST(System.Int32,GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST object with array (VA) channel symbols with a particular number of columns.</summary>
            <param name="i1">Number of columns in array ( &gt; 1 )</param>
            <param name="oLST2">List to Populate</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ArrayLST(GeoEngine.Core.GXNetX.CLST)">
            <summary>Load a LST object with array (VA) channel symbols.</summary>
            <param name="oLST1">List to Populate</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Symbols</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Set the metadata of a database.</summary>
            <param name="oMETA1">Meta object to add to database's meta</param>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>META</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetMETA(GeoEngine.Core.GXNetX.CMETA)">
            <summary>Get the metadata of a database.</summary>
            <param name="oMETA1">Meta object to fill with database's meta</param>
            <available_version>5.1.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>META</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetSelect(System.Int32)">
            <summary>Sets the Line Selections.</summary>
            <param name="i1">Selections</param>
            <remarks>This method also destroys the DB_SELECT object.</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineVer(System.Int32,System.Int32)">
            <summary>This method sets a line's version.</summary>
            <param name="i1">Line handle</param>
            <param name="i2">Value to set line version to</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineType(System.Int32,System.Int32)">
            <summary>This method sets a line's type.</summary>
            <param name="i1">Line handle</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_LINE_TYPE&amp;lt;/define&amp;gt;</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineNum(System.Int32,System.Int32)">
            <summary>This method sets a line's number.</summary>
            <param name="i1">Line handle</param>
            <param name="i2">Value to set line number to</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineMapFid(System.Int32,System.Double,System.Double)">
            <summary>This method changes a line map clip fiducial.</summary>
            <param name="i1">Line handle to look at</param>
            <param name="d2">Start Fid</param>
            <param name="d3">End Fid</param>
            <remarks>
for full range, set Start Fid to &amp;lt;define&amp;gt;rMIN&amp;lt;/define&amp;gt; and End Fid to &amp;lt;define&amp;gt;rMAX&amp;lt;/define&amp;gt;.
for no data, set Start and End Fids to &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt;.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineFlight(System.Int32,System.Int32)">
            <summary>This method sets a line's flight.</summary>
            <param name="i1">Line handle</param>
            <param name="i2">Value to set line flight to</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineDate(System.Int32,System.Double)">
            <summary>This method sets a line's date.</summary>
            <param name="i1">Line handle</param>
            <param name="d2">Value to set date to</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineBearing(System.Int32,System.Double)">
            <summary>Sets a line's bearing.</summary>
            <param name="i1">Line handle</param>
            <param name="d2">Value to set bearing to</param>
            <remarks>
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;

This function simply sets a value in the line's metadata
that is retrieved using the rLineBearing_DB
function. It terminates for line categories other than
&amp;lt;define&amp;gt;DB_CATEGORY_LINE_FLIGHT&amp;lt;/define&amp;gt;.
</remarks>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Select(System.String,System.Int32)">
            <summary>Select/deselect lines based on selection string</summary>
            <param name="str1">Selection</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_LINE_SELECT&amp;lt;/define&amp;gt;</param>
            <remarks>
Selections/deselections are cumulative. If lines had already
been selected, then any further selection/deselection will
affect that set of selections.

E.g. "L99:800" is the string to select all normal lines from
99 to 800. If Select_DB is called again to select "L1000",
then lines 99 to 800 and 1000 would all be selected.

Use a "T" prefix for Tie lines.
Use an "F" prefix to specify lines of a specific flight.
E.g. "F10" would select all lines of flight 10.
Use an empty string ("") to select/deselect ALL lines.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SaveSelect(System.String)">
            <summary>Saves current selections to a file.</summary>
            <param name="str1">File Name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.rLineDate(System.Int32)">
            <summary>This method returns the date of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>Date value.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.rLineBearing(System.Int32)">
            <summary>This method returns the bearing of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;

This function simply returns a value set using the SetLineBearing_DB
function. It returns &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for line categories other than
&amp;lt;define&amp;gt;DB_CATEGORY_LINE_FLIGHT&amp;lt;/define&amp;gt;.

To calculate the line azimuth based on the first and
last non-dummy locations, use the rDirection_DU function.
</remarks>
            <returns>Bearing value, &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not set.</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.NextSelLine(System.Int32)">
            <summary>
This method will advance to the next selected line based
on the currently selected line handle.
</summary>
            <param name="i1">Previous Line</param>
            <returns>Line Handle (use iIsLineValid method to see if valid).</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.LoadSelect(System.String)">
            <summary>Load selections to from a file.</summary>
            <param name="str1">File Name</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ISetLineName2(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.String@)">
            <summary>Like SetLineName_DB, but can use alphanumeric for line number</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Line number (alphanumeric)</param>
            <param name="i2">Line type</param>
            <param name="i3">Line version</param>
            <param name="str4">String to set line name to</param>
            <remarks>
This MUST be called to generate a line name when calls
are made to iExistSymb_DB, CreateSymb_DB or DeleteSymb_DB
for an operation on a line.
The line number can be any combination of letters and numbers,
i.e. XU324, 98765, A, 23NGV etc.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ISetLineName(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>
This method sets up a line name given the line's number,
type, and version.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">Line number</param>
            <param name="i2">Line type</param>
            <param name="i3">Line version</param>
            <param name="str4">String to set line name to</param>
            <remarks>
This MUST be called to generate a line name when calls
are made to iExistSymb_DB, CreateSymb_DB or DeleteSymb_DB
for an operation on a line.
See also SetLineName2_DB.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iLineVersion(System.Int32)">
            <summary>This method returns the version number of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>Line Number.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iLineType(System.Int32)">
            <summary>This method returns the type of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>&amp;lt;define&amp;gt;DB_LINE_TYPE&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ILineNumber2(System.Int32,System.String@)">
            <summary>Returns the string form of the line number (can be alphanumeric)</summary>
            <param name="i1">Line handle to look at</param>
            <param name="str2">Line number</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iLineNumber(System.Int32)">
            <summary>This method returns the number of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>Line Number.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ILineLabel(System.Int32,System.String@,System.Int32)">
            <summary>Create a line label</summary>
            <param name="i1">Line symbol</param>
            <param name="str2">String in which to place label</param>
            <param name="i3">&amp;lt;define&amp;gt;DB_LINE_LABEL_FORMAT&amp;lt;/define&amp;gt;</param>
            <remarks>
Label formats.

example full format is
"L1023.4 13"   type "L"
number "1023"
version "4"
flight "13"

formats can be added to get combined format

Use LINK format to create a database link label.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iLineFlight(System.Int32)">
            <summary>This method returns the flight number of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>Line Flight Number.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iLineCategory(System.Int32)">
            <summary>This method returns the category (group, line) of a line.</summary>
            <param name="i1">Line handle to look at</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>&amp;lt;define&amp;gt;DB_CATEGORY_LINE&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt;.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsLineValid(System.Int32)">
            <summary>
This method checks to see if the line handle returned by
the Line methods is a valid line.
</summary>
            <param name="i1">Line handle to check</param>
            <returns>
0 - Not a valid line
1 - Valid
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsLineName(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Is this a valid line name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name to test</param>
            <returns>
1 if it is a valid line name
0 if it is not a valid line name
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsChanValid(System.Int32)">
            <summary>
This method checks to see if the channel handle is a
valid channel.
</summary>
            <param name="i1">Channel handle to check</param>
            <returns>
0 - Not a valid channel
1 - Valid
</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsChanName(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Is this a valid channel name?</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name to test</param>
            <remarks>
Channel names must only contain alpha-numeric characters or the
underscore character "_", and the first letter must be a letter
or an underscore.
</remarks>
            <returns>
1 if it is a valid channel name
0 if it is not a valid channel name
</returns>
            <available_version>7.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iCountSelLines">
            <summary>
This method counts the number of selected lines in
the database.
</summary>
            <returns>x - Number of selected lines in the database</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetSelect">
            <summary>Gets the Line Selections.</summary>
            <returns>Selections Object.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetLineMapFid(System.Int32,System.Double@,System.Double@)">
            <summary>This method gets a line map clip fiducial.</summary>
            <param name="i1">Line handle to look at</param>
            <param name="d2">Start Fid</param>
            <param name="d3">End Fid</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.FirstSelLine">
            <summary>
This method will return a handle to the first selected
line in the database.
</summary>
            <returns>Line Handle (use iIsLineValid method to see if valid)</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetLineSelection(System.Int32)">
            <summary>Get the selection status for a line.</summary>
            <param name="i1">Line handle</param>
            <returns>One of &amp;lt;define&amp;gt;DB_LINE_SELECT&amp;lt;/define&amp;gt;</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetLineSelection(System.Int32,System.Int32)">
            <summary>Set the selection status for a line.</summary>
            <param name="i1">Handle of line to select/deselect</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_LINE_SELECT&amp;lt;/define&amp;gt;</param>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Line</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.WindowVACh2(System.Int32,System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Copy a windowed version of data in a channel into a new channel</summary>
            <param name="i1">Line symbol</param>
            <param name="i2">Original channel</param>
            <param name="i3">Output channel</param>
            <param name="oVV4">VV containing 0/1 values for each channel.</param>
            <remarks>
Similar to WindowVACh_DB, but the input and output channels must
contain the same number of columns. The input VV tells which columns
to copy over; 0 values indicate that the output column is to be
dummied, and non-zero values indicate the column is to be copied.
The VV length must be the same as the number of columns.
</remarks>
            <available_version>5.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.WindowVACh(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Copy a window of data in a channel into a new channel</summary>
            <param name="i1">Line symbol</param>
            <param name="i2">Original channel</param>
            <param name="i3">Output channel</param>
            <param name="i4">Start column number to copy, 0 is first column</param>
            <param name="i5">End column number to copy</param>
            <remarks>
This function normally used for VA channels. A copy of the
original channel will be made if start and end column
numbers to copy are dummies.
All the columns including start and end columns will be copied
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetFid(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
This method allows the user to set the fiducial start and
increment of a channel. The Increment should never be 0.
</summary>
            <param name="i1">Line (read or write locked)</param>
            <param name="i2">Channel to set fiducial (write locked)</param>
            <param name="d3">Start Fiducial Value</param>
            <param name="d4">Increment Fiducial Value</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.rGetFidStart(System.Int32,System.Int32)">
            <summary>
This method returns the fiducial start value of a
specified Channel.
</summary>
            <param name="i1">Line (read or write locked)</param>
            <param name="i2">Channel (read locked)</param>
            <returns>Fiducial Start.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.rGetFidIncr(System.Int32,System.Int32)">
            <summary>
This method returns the fiducial increment value of a
specified Channel.
</summary>
            <param name="i1">Line (read or write locked)</param>
            <param name="i2">Channel (read locked)</param>
            <returns>Fiducial Start.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChannelLength(System.Int32,System.Int32)">
            <summary>Returns the # of elements in a channel.</summary>
            <param name="i1">Line    (read or write locked)</param>
            <param name="i2">Channel (read or write locked)</param>
            <remarks>
Returns the actual number of data items (rows) in a channel. For VA channels no correction is
necessary for the number of columns.
</remarks>
            <returns># of elements</returns>
            <available_version>8.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetColVA(System.Int32)">
            <summary>Returns the # of columns in a VA channel.</summary>
            <param name="i1">Channel (read locked)</param>
            <remarks>If the channel is VV, this function returns 1.</remarks>
            <returns>
# of columns
0 if error
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CopyData(System.Int32,System.Int32,System.Int32)">
            <summary>
This method copies the data from one channel to another on
on the specified line. The data is converted if such
conversion in neccessary.
</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel to Copy Data From</param>
            <param name="i3">Channel to Copy Data To</param>
            <remarks>
All the data in the destination channel is destroyed along
with the fiducial start and increment.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Data</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Sync">
            <summary>Syncronize the Metadata from this database to the XML</summary>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Repair(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Cleans the database by removing invalid blocks</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Create</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.OpenReadOnly(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>This method opens a database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Open</param>
            <param name="str2">Name of the user ("SUPER" normally)</param>
            <param name="str3">Password of the user ("" normally)</param>
            <remarks>
This method is useful to open multiple reader instances on the same database. This call will fail
if a DB has already been opened with Open_DB or locked in the application with Lock_EDB.
</remarks>
            <returns>DB Object</returns>
            <available_version>6.4.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>This method opens a database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Open</param>
            <param name="str2">Name of the user ("SUPER" normally)</param>
            <param name="str3">Password of the user ("" normally)</param>
            <returns>DB Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsLineEmpty(System.Int32)">
            <summary>See if a specific line in the database is empty.</summary>
            <param name="i1">Line symbol</param>
            <returns>1 if the database contains only empty lines.</returns>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iIsEmpty">
            <summary>See if a database contains only empty lines.</summary>
            <remarks>
This function does not check for other information or blobs,
it merely looks at all lines in the database to see if they
are empty. If all are empty, it returns 1.
</remarks>
            <returns>1 if the database contains only empty lines.</returns>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iCheck">
            <summary>
Does an integrity check of the data in the database to
ensure it is valid.
</summary>
            <returns>
0 - Ok
1 - Invalid Blocks in the Database
</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iCanOpenReadOnly(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>This method checks whether it is possible to open a database in read-only mode.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Open</param>
            <param name="str2">Name of the user ("SUPER" normally)</param>
            <param name="str3">Password of the user ("" normally)</param>
            <remarks>
This method is useful to determine if another session already locked a database.
By using this method before an OpenReadOnly_DB a GX may handle errors like this more gracefully.
</remarks>
            <available_version>6.4.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iCanOpen(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,System.String)">
            <summary>This method checks whether it is possible to open a database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Open</param>
            <param name="str2">Name of the user ("SUPER" normally)</param>
            <param name="str3">Password of the user ("" normally)</param>
            <remarks>
This method is useful to determine if another session already locked a database.
By using this method before an Open_DB a GX may handle errors like this more gracefully.
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Grow(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Enlarges the database.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Create</param>
            <param name="i2">Max Lines in the Database    (200)</param>
            <param name="i3">Max Channels in the Database (50)</param>
            <param name="i4">Max Blobs in the Database    (Channels+Lines+20)</param>
            <param name="i5">Max Users in the Database    (10)</param>
            <param name="i6">Number of Erase Caches       (100)</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Discard">
            <summary>
This method discards all changes made to the database since
the last commit or opening.
</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.DelLine0">
            <summary>Delete Empty Line 0.</summary>
            <remarks>
A new database is created with a single, empty line L0, but many processes
create databases then create their own lines, so the empty line L0 may remain
after the process finishes. This function will delete a line L0
a) If it exists and is empty
b) It is not the only line in the database.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CreateEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32)">
            <summary>
This method makes a brand new database of the specified size.
The database is opened in ReadWrite Mode. Also allows you to
set paging size.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Create</param>
            <param name="i2">Max Lines in the Database    (200)</param>
            <param name="i3">Max Channels in the Database (50)</param>
            <param name="i4">Max Blobs in the Database    (Channels+Lines+20)</param>
            <param name="i5">Max Users in the Database    (10)</param>
            <param name="i6">Number of Erase Caches       (100)</param>
            <param name="str7">Name of the Super User       "SUPER"</param>
            <param name="str8">Password of the Super User   ""</param>
            <param name="i9">Page Size Must be (64,128,256,512,1024,2048,4096) normally 1024</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CreateComp(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
This method makes a brand new database of the specified size.
The database is opened in ReadWrite Mode. Also allows you to
set paging size and the Compression Level.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Create</param>
            <param name="i2">Max Lines in the Database    (200)</param>
            <param name="i3">Max Channels in the Database (50)</param>
            <param name="i4">Max Blobs in the Database    (Channels+Lines+20)</param>
            <param name="i5">Max Users in the Database    (10)</param>
            <param name="i6">Number of Erase Caches       (100)</param>
            <param name="str7">Name of the Super User       "SUPER"</param>
            <param name="str8">Password of the Super User   ""</param>
            <param name="i9">Page Size Must be (64,128,256,512,1024,2048,4096) normally 1024</param>
            <param name="i10">&amp;lt;define&amp;gt;DB_COMP&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
            <summary>
This method makes a brand new database of the specified size.
The database is opened in ReadWrite Mode.
</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of the Database File to Create</param>
            <param name="i2">Max Lines in the Database    (200)</param>
            <param name="i3">Max Channels in the Database (50)</param>
            <param name="i4">Max Blobs in the Database    (Channels+Lines+20)</param>
            <param name="i5">Max Users in the Database    (10)</param>
            <param name="i6">Number of Erase Caches       (100)</param>
            <param name="str7">Name of the Super User       "SUPER"</param>
            <param name="str8">Password of the Super User   ""</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Compact">
            <summary>
Removes any extra space from the database. This will
reduce the database to its smallest size.
</summary>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.Commit">
            <summary>This method forces all changes to the database to be saved.</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Control</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.WriteBlobBF(System.Int32,GeoEngine.Core.GXNetX.CBF)">
            <summary>Write a blob from a file into a database.</summary>
            <param name="i1">Blob (&amp;lt;define&amp;gt;DB_SYMB_BLOB&amp;lt;/define&amp;gt;) to write into database from file</param>
            <param name="oBF2">File to write blob into</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetRegSymbSetting(System.Int32,System.String,System.String)">
            <summary>Set a REG string setting in a symbol reg</summary>
            <param name="i1">Symbol, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; for the database REG</param>
            <param name="str2">REG entry name</param>
            <param name="str3">Setting</param>
            <remarks>
The symbol REG is used to store a variety of attribute
about the symbol.  Following a conventionally used entries:

UNITS                   - channel units
CLASS                   - symbol class name (i.e. "Assay")
_PJ_ipj                 - projection blob name
_PJ_x                   - projection coordinate pair
_PJ_y
_PJ_name                - projection GXF-style info
_PJ_ellipsoid
_PJ_projection
_PJ_units
_PJ_datum_transform

This is a convenient but low-performance way to get/set REG
settings.  If performance is an issue, and more than one
setting is to be Get and or Set, use the REG directly.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetRegSymb(System.Int32,GeoEngine.Core.GXNetX.CREG)">
            <summary>Set a REG object into a symbol</summary>
            <param name="i1">Symbol, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; for the database REG</param>
            <param name="oREG2">REG to set into Blob</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetITR(System.Int32,GeoEngine.Core.GXNetX.CITR)">
            <summary>Set ITR for a channel.</summary>
            <param name="i1">Channel</param>
            <param name="oITR2">ITR to fill in</param>
            <remarks>
Use &amp;lt;define&amp;gt;ITR_NULL&amp;lt;/define&amp;gt; to clear the channel ITR.
Channel must be locked for READONLY or READWRITE.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetIPJ(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Set a REG object into a symbol</summary>
            <param name="i1">X channel</param>
            <param name="i2">Y channel</param>
            <param name="oIPJ3" />
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanWidth(System.Int32,System.Int32)">
            <summary>This method sets a channel's display width</summary>
            <param name="i1">Channel handle</param>
            <param name="i2">Display width</param>
            <remarks>
The number of display digits must be from 0 to 50.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanUnit(System.Int32,System.String)">
            <summary>
This method sets a channel's unit for a
given channel handle.
</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">String to put channel unit</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanStr(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>Set individual elements in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="i3">Index</param>
            <param name="str4">String</param>
            <remarks>
These methods are slow and should only be used when
performance is not an issue.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanReal(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>Set individual elements in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="i3">Index</param>
            <param name="d4">Value</param>
            <remarks>
These methods are slow and should only be used when
performance is not an issue.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanProtect(System.Int32,System.Int32)">
            <summary>
This method sets a channel's read-only protection
status.
</summary>
            <param name="i1">Channel handle</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_CHAN_PROTECTION&amp;lt;/define&amp;gt;</param>
            <remarks>
Value to set must be either &amp;lt;define&amp;gt;DB_CHAN_PROTECTED&amp;lt;/define&amp;gt; or
&amp;lt;define&amp;gt;DB_CHAN_UNPROTECTED&amp;lt;/define&amp;gt;
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanName(System.Int32,System.String)">
            <summary>This method sets a channel's name.</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">String to set channel name to</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanLabel(System.Int32,System.String)">
            <summary>Set a channel label</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">Label</param>
            <remarks>
The channel label is stored in the "LABEL" parameter
of the channel reg.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanInt(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Set individual elements in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="i3">Index</param>
            <param name="i4">Value</param>
            <remarks>
These methods are slow and should only be used when
performance is not an issue.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanFormat(System.Int32,System.Int32)">
            <summary>This method sets a channel's display format.</summary>
            <param name="i1">Channel handle</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_CHAN_FORMAT&amp;lt;/define&amp;gt;</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanDecimal(System.Int32,System.Int32)">
            <summary>
This method sets a channel's number of digits displayed
to the right of the decimal point.
</summary>
            <param name="i1">Channel handle</param>
            <param name="i2">Number of digits to display right of the decimal</param>
            <remarks>
The number of display digits must be from 0 to 50.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetChanClass(System.Int32,System.String)">
            <summary>Set a channel class</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">Class</param>
            <remarks>
The channel class is stored in the "CLASS" parameter
of the channel reg.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.SetAllChanProtect(System.Int32)">
            <summary>This method sets all the channels' read-only protection status.</summary>
            <param name="i1">&amp;lt;define&amp;gt;DB_CHAN_PROTECTION&amp;lt;/define&amp;gt;</param>
            <remarks>
Value to set must be either &amp;lt;define&amp;gt;DB_CHAN_PROTECTED&amp;lt;/define&amp;gt; or
&amp;lt;define&amp;gt;DB_CHAN_UNPROTECTED&amp;lt;/define&amp;gt;
This method does its own channel locking/unlocking.
Channels already lock &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; are ignored.
</remarks>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.rGetRegSymbSetting(System.Int32,System.String)">
            <summary>Get a real-valued REG setting from a symbol reg</summary>
            <param name="i1">Symbol, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; for the database REG</param>
            <param name="str2">REG entry name</param>
            <remarks>
Same as GetRegSymbSetting_DB, but converts
the setting automatically to a real value.

This is a convenient but low-performance way to get/set REG
settings.  If performance is an issue, and more than one
setting is to be Get and or Set, use the REG directly.
</remarks>
            <returns>The setting, or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; if not found or not convertable.</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.rGetChanReal(System.Int32,System.Int32,System.Int32)">
            <summary>Get individual elements in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="i3">Index</param>
            <remarks>
These methods are slow and should only be used when
performance is not an issue.
</remarks>
            <returns>
Value, or dummy if out of range.
For settings, terminates if error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.ReadBlobBF(System.Int32,GeoEngine.Core.GXNetX.CBF)">
            <summary>Read a blob from a database into a file.</summary>
            <param name="i1">Blob (&amp;lt;define&amp;gt;DB_SYMB_BLOB&amp;lt;/define&amp;gt;) to read into BF from database</param>
            <param name="oBF2">File to read blob from</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.PutVaChanVV(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Place the contents of a VV at a specific part of a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVV3">VV from which to get the data</param>
            <param name="i4">Offset</param>
            <param name="i5">Number to Write</param>
            <remarks>
If a VA channel is specified, then element [0] of this
VA channel will be populated with the VV.
</remarks>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.PutChanVV(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Place the contents of a VV in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVV3">VV from which to get the data</param>
            <remarks>
If a VA channel is specified, then element [0] of this
VA channel will be populated with the VV.

There is a limit of 2000 elements for non-licensed users.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.MakerSymb(System.Int32,System.String,System.String,System.String)">
            <summary>Adds a Maker to the database symbol</summary>
            <param name="i1">Symbol to create maker for</param>
            <param name="str2">Name of program</param>
            <param name="str3">Maker name, used in menu prompt</param>
            <param name="str4">INI groups (terminate each with a ";")</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iUsersMax">
            <summary>Gets Maximum number of Users</summary>
            <returns>Maximum number of Users</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iLinesMax">
            <summary>Gets Maximum number of lines in the database</summary>
            <returns>Maximum number of lines in the database</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IiCoordPair(System.String,System.String@)">
            <summary>Get the matching coordinate pair of a channel.</summary>
            <param name="str1">Channel name</param>
            <param name="str2">String in which to place paired channel name</param>
            <remarks>
If the channel does not have a matching coordinate
pair, or of the channel does not exist, the returned
string will be empty.
</remarks>
            <returns>&amp;lt;define&amp;gt;DB_COORDPAIR&amp;lt;/define&amp;gt;</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iHaveITR(System.Int32)">
            <summary>Returns TRUE if channel has an ITR.</summary>
            <param name="i1">Channel</param>
            <remarks>
If a channel has an ITR, the ITR colors are used to
display channel values in the spreadsheet.

If a channel does not have an ITR, GetITR_DB will not change
the passed ITR.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetSymbName(System.Int32,System.String@)">
            <summary>This method gets a symbol's name</summary>
            <param name="i1">Symbol handle</param>
            <param name="str2">String to place name into</param>
            <remarks>
See GetChanName_DB for more information
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetRegSymbSetting(System.Int32,System.String)">
            <summary>Get an integer-valued REG setting from a symbol reg</summary>
            <param name="i1">Symbol, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; for the database REG</param>
            <param name="str2">REG entry name</param>
            <remarks>
Same as GetRegSymbSetting_DB, but converts
the setting automatically to an integer value.

This is a convenient but low-performance way to get/set REG
settings.  If performance is an issue, and more than one
setting is to be Get and or Set, use the REG directly.
</remarks>
            <returns>The setting, or &amp;lt;define&amp;gt;iDUMMY&amp;lt;/define&amp;gt; if not found or not convertable.</returns>
            <available_version>6.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetName(System.Int32,System.String@)">
            <summary>Gets a name from the database.</summary>
            <param name="i1">&amp;lt;define&amp;gt;DB_NAME&amp;lt;/define&amp;gt;</param>
            <param name="str2">Name returned</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanWidth(System.Int32)">
            <summary>
This method gets a channel's display width for a
given channel handle.
</summary>
            <param name="i1">Channel handle</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>Channel display width</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetChanUnit(System.Int32,System.String@)">
            <summary>This method Gets a channel's unit</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">String to place unit into</param>
            <remarks>
The unit label is stored in the "UNITS" parameter
of the channel reg.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanType(System.Int32)">
            <summary>
This method Gets a channel's type for a
given channel handle.
</summary>
            <param name="i1">Channel handle</param>
            <remarks>
The type returned is one of the &amp;lt;define&amp;gt;DB_CATEGORY_CHAN&amp;lt;/define&amp;gt;.
Use the GS_SIMPLE_TYPE() macro to convert to INT,REAL
or string types.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <returns>Channel type</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanProtect(System.Int32)">
            <summary>This method gets a channel's read-only protection status.</summary>
            <param name="i1">Channel handle</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>&amp;lt;define&amp;gt;DB_CHAN_PROTECTION&amp;lt;/define&amp;gt;</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetChanName(System.Int32,System.String@)">
            <summary>
This method Gets a channel's name for a
given channel handle.
</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">String to place name into</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetChanLabel(System.Int32,System.String@)">
            <summary>This method gets a channel's label</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">Returned label into</param>
            <remarks>
The channel label is stored in the "LABEL" parameter
of the channel reg.  If the setting is empty, the
channel name is returned.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanInt(System.Int32,System.Int32,System.Int32)">
            <summary>Get individual elements in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="i3">Index</param>
            <remarks>
These methods are slow and should only be used when
performance is not an issue.
</remarks>
            <returns>
Value, or dummy if out of range.
For settings, terminates if error.
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanFormat(System.Int32)">
            <summary>
This method Gets a channel's display format for a
given channel handle.
</summary>
            <param name="i1">Channel handle</param>
            <remarks>
The returned format is one of the &amp;lt;define&amp;gt;DB_CHAN_FORMAT&amp;lt;/define&amp;gt;.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <returns>Channel display format</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanDecimal(System.Int32)">
            <summary>
This method gets a channel's number of digits displayed
to the right of the decimal point.
</summary>
            <param name="i1">Channel handle</param>
            <remarks>The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;</remarks>
            <returns>Number of digits displayed to right of decimal</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IGetChanClass(System.Int32,System.String@)">
            <summary>This method gets a channel's label</summary>
            <param name="i1">Channel handle</param>
            <param name="str2">Returned class into</param>
            <remarks>
The channel label is stored in the "CLASS" parameter
of the channel reg. If no class is defined, then an
empty string is returned.
The channel must be locked &amp;lt;define&amp;gt;DB_LOCK_READONLY&amp;lt;/define&amp;gt; or &amp;lt;define&amp;gt;DB_LOCK_READWRITE&amp;lt;/define&amp;gt;
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iGetChanArraySize(System.Int32)">
            <summary>
This method Gets a channel's array size for a
given channel handle.
</summary>
            <param name="i1">Channel handle</param>
            <returns>Channel type</returns>
            <available_version>6.0.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.IFormatChan(System.Int32,System.Double,System.String@)">
            <summary>Format a real value based on a channel format.</summary>
            <param name="i1">Channel handle</param>
            <param name="d2">Value to format</param>
            <param name="str3">String</param>
            <remarks>
If the passed string is too short, the result will be
"**".
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iChansMax">
            <summary>Gets Maximum Number of Channels in the Database</summary>
            <returns>Maximum Number of Channels in the Database</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.iBlobsMax">
            <summary>Gets Maximum Number of Blobs in the Database</summary>
            <returns>Maximum Number of Blobs in the Database</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetVaChanVV(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV,System.Int32,System.Int32)">
            <summary>Place the contents of a specific part of a channel in a VV.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVV3">VV in which to place the data</param>
            <param name="i4">Offset</param>
            <param name="i5">Number to Write</param>
            <remarks>
If a VA channel is specified, then element [0] of this
VA channel is used to populated the VV.
</remarks>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetRegSymbSetting(System.Int32,System.String,System.String@)">
            <summary>Get a REG string setting from a symbol reg</summary>
            <param name="i1">Symbol, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; for the database REG</param>
            <param name="str2">REG entry name</param>
            <param name="str3">Returned setting</param>
            <remarks>
The symbol REG is used to store a variety of attribute
about the symbol.  Following a conventionally used entries:

UNITS                   - channel units
CLASS                   - symbol class name (i.e. "Assay")
_PJ_ipj                 - projection blob name
_PJ_x                   - projection coordinate pair
_PJ_y
_PJ_name                - projection GXF-style info
_PJ_ellipsoid
_PJ_projection
_PJ_units
_PJ_datum_transform

This is a convenient but low-performance way to get/set REG
settings.  If performance is an issue, and more than one
setting is to be Get and or Set, use the REG directly.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetRegSymb(System.Int32,GeoEngine.Core.GXNetX.CREG)">
            <summary>Get a REG object from a symbol</summary>
            <param name="i1">Symbol, &amp;lt;define&amp;gt;NULLSYMB&amp;lt;/define&amp;gt; for the database REG</param>
            <param name="oREG2">REG to copy data into</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetITR(System.Int32,GeoEngine.Core.GXNetX.CITR)">
            <summary>Get ITR for a channel.</summary>
            <param name="i1">Channel</param>
            <param name="oITR2">ITR to fill in</param>
            <remarks>
If a channel does not have an ITR, GetITR_DB will not change
the passed ITR.
Channel must be locked for READONLY or READWRITE.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetIPJ(System.Int32,GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get georeference information in an IPJ.</summary>
            <param name="i1">Symbol</param>
            <param name="oIPJ2">IPJ to fill in</param>
            <remarks>
If the channel does not have an IPJ, the IPJ that is
returned will have an unknown projection.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetChanVVExpanded(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>
Read a channel into a VV. If the channel is a VA channel it is
treaded as a VV channel with multiple values per fid and the FID expation
is set to the array size.
</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVV3">VV in which to place the data</param>
            <remarks>
This method is to be used in conjunction with the ReFidVV_VV method
that will honor the FID Expansion setting.
</remarks>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetChanVV(System.Int32,System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Place the contents of a channel in a VV.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="oVV3">VV in which to place the data</param>
            <remarks>
If a VA channel is specified, then element [0] of this
VA channel is used to populated the VV.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.GetChanStr(System.Int32,System.Int32,System.Int32,System.String@)">
            <summary>Get individual elements in a channel.</summary>
            <param name="i1">Line</param>
            <param name="i2">Channel</param>
            <param name="i3">Index</param>
            <param name="str4">String</param>
            <remarks>
These methods are slow and should only be used when
performance is not an issue.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.EasyMakerSymb(System.Int32,System.String,System.String)">
            <summary>Adds a Maker to the database symbol based on current GX</summary>
            <param name="i1">Symbol to create maker for</param>
            <param name="str2">Maker name, used in menu prompt</param>
            <param name="str3">INI groups (terminate each with a ";")</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.DupSymbAcross(GeoEngine.Core.GXNetX.CDB,System.Int32)">
            <summary>
Create a new Symbol by duplicating an existing symbol.
exactly the same type but in output database. The symbol must
not already exist in the output database.
</summary>
            <param name="oDB1">Database output</param>
            <param name="i2">Symbol Handle to duplicate</param>
            <returns>New Symbol Handle</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CreateDupComp(System.String,System.Int32)">
            <summary>
This method makes a brand new database identical to the input
Database in-size except it changes the compression.
The database is opened in ReadWrite Mode.
</summary>
            <param name="str1">Name of the Database File to Create</param>
            <param name="i2">&amp;lt;define&amp;gt;DB_COMP&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDB.CreateDup(System.String)">
            <summary>
This method makes a brand new database identical to the input
Database in-size.
The database is opened in ReadWrite Mode.
</summary>
            <param name="str1">Name of the Database File to Create</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Channel</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDB">
            <summary>

       The DB class is used to create, open and work with databases and database symbols.
       Database symbols are objects inside databases, such as lines, channels and blobs
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATAMINE.NumericFieldLST(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CLST)">
            <summary>Return a LST containing the non-standard numeric fields in a Datamine file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Datamine file name</param>
            <param name="oLST2">LST to populate</param>
            <remarks>
At this time, only &amp;lt;define&amp;gt;GIS_DMTYPE_BLOCKMODEL&amp;lt;/define&amp;gt; files are supported.
The field names go in the name part, and field indices (1 to N)
in the value part.
</remarks>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATAMINE.CreateVoxel(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.String,GeoEngine.Core.GXNetX.CIPJ,GeoEngine.Core.GXNetX.CMETA,System.String)">
            <summary>Create a Geosoft Voxel file from a Datamine block model file.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Datamine file name</param>
            <param name="str2">Field to use for data</param>
            <param name="oIPJ3">Projection to set</param>
            <param name="oMETA4">META to set</param>
            <param name="str5">Output voxel file name</param>
            <remarks>Create a Geosoft Voxel file from a Datamine block model file.</remarks>
            <available_version>6.3</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDATAMINE">
            <summary>

       DATAMINE functions provide an interface to Datamine Software Limited files.
       See also GIS for various other Datamine-specific functions.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.GetIPJ(GeoEngine.Core.GXNetX.CIPJ)">
            <summary>Get the projection of the DATALINK Display object.</summary>
            <param name="oIPJ1">IPJ object to set the projection to</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.GetExtents(System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>Get the data extents of the DATALINK Display object.</summary>
            <param name="d1">Min X</param>
            <param name="d2">Max X</param>
            <param name="d3">Min Y</param>
            <param name="d4">Max Y</param>
            <available_version>6.4</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.CreateBING(GeoEngine.Core.GXNetX.CGXNETCore,System.Int32)">
            <summary>Create an DATALINKD object for a BING dataset</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="i1">0 = Aerial, 1 = Road</param>
            <returns>DATALINKD handle, terminates if creation fails</returns>
            <available_version>8.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.CreateArcLYRFromTMPEx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Create an DATALINKD object from a temporary ArcGIS LYR file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Arc LYR file name</param>
            <param name="i2">Display as 3D Group? (as opposed to bitmap on plane)</param>
            <remarks>Needs ArcEngine licence.</remarks>
            <returns>DATALINKD handle, terminates if creation fails</returns>
            <available_version>9.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.CreateArcLYRFromTMP(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create an DATALINKD object from a temporary ArcGIS LYR file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Arc LYR file name</param>
            <remarks>Needs ArcEngine licence.</remarks>
            <returns>DATALINKD handle, terminates if creation fails</returns>
            <available_version>7.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.CreateArcLYREx(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Create an DATALINKD object from a ArcGIS LYR file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Arc LYR file name</param>
            <param name="i2">Display as 3D Group? (as opposed to bitmap on plane)</param>
            <remarks>Needs ArcEngine licence.</remarks>
            <returns>DATALINKD handle, terminates if creation fails</returns>
            <available_version>9.0</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDATALINKD.CreateArcLYR(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Create an DATALINKD object from a ArcGIS LYR file</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Arc LYR file name</param>
            <remarks>Needs ArcEngine licence.</remarks>
            <returns>DATALINKD handle, terminates if creation fails</returns>
            <available_version>6.4</available_version>
            <licensed_method>yes</licensed_method>
            <app_method>no</app_method>
            <public_method>no</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDATALINKD">
            <summary>

       DATALINK Display object.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDAT.RangeXYZ(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>Determine the range in X, Y and Z in the DAT source</summary>
            <param name="d1">Minimum X (&amp;lt;define&amp;gt;rMAX&amp;lt;/define&amp;gt; if none)</param>
            <param name="d2">Minimum Y (&amp;lt;define&amp;gt;rMAX&amp;lt;/define&amp;gt; if none)</param>
            <param name="d3">Minimum Z (&amp;lt;define&amp;gt;rMAX&amp;lt;/define&amp;gt; if none)</param>
            <param name="d4">Maximum X (&amp;lt;define&amp;gt;rMIN&amp;lt;/define&amp;gt; if none)</param>
            <param name="d5">Maximum Y (&amp;lt;define&amp;gt;rMIN&amp;lt;/define&amp;gt; if none)</param>
            <param name="d6">Maximum Z (&amp;lt;define&amp;gt;rMIN&amp;lt;/define&amp;gt; if none)</param>
            <param name="i7">Number of non-dummy XYZ.</param>
            <remarks>Terminates if unable to open an RPT DAT interface.</remarks>
            <available_version>7.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDAT.GetLST(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CLST,System.String,System.Int32,System.Int32)">
            <summary>Put available DAT filters and qualifiers in a LST</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oLST1">LST object to populate</param>
            <param name="str2">DAT interface name ("XGD" only support option currently)</param>
            <param name="i3">&amp;lt;define&amp;gt;DAT_FILE&amp;lt;/define&amp;gt;</param>
            <param name="i4">&amp;lt;define&amp;gt;DAT_FILE_FORM&amp;lt;/define&amp;gt;</param>
            <remarks>
The filters displayed in the Grid/Image file browse dialog are put
in the "Name" of the LST, while the file qualifiers are stored in
the "Value".
</remarks>
            <available_version>5.1.8</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDAT.CreateXGD(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Create a handle to a grid file DAT object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">Name of grid file to associate DAT with</param>
            <param name="i2">&amp;lt;define&amp;gt;DAT_XGD&amp;lt;/define&amp;gt;</param>
            <returns>DAT Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CDAT.CreateDB(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CDB,System.String,System.String,System.String)">
            <summary>Create a handle to a database DAT object</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oDB1">Handle to database which DAT is connected with</param>
            <param name="str2">Name of X channel in database</param>
            <param name="str3">Name of Y channel in database</param>
            <param name="str4">Name of Z channel in database</param>
            <returns>DAT Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CDAT">
            <summary>

       The DAT object is used to access data from an variety of data sources
       using the same access functions. The DAT interface supports data access
       on a point-by-point, of line-by-line basis.  For example,
       the Run_BIGRID function uses 2 DAT objects - one DAT associated with the
       input data source, which is read line-by-line, and a second associated with
       the output grid file output grid file.

       Use a specific DAT creation method for an associated
       information source in order to make a DAT as required
       by a specific processing function.  The gridding methods all use DATs.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteVV(System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Writes VV to the BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="oVV2">Data</param>
            <remarks>
See comments on byte order for the Read.. functions if you
want to enforce a certain byte order.

If a byte order is not specified, the data is written
in the native byte order of the writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteVM(System.Int32,GeoEngine.Core.GXNetX.CVM)">
            <summary>Writes VM to the BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="oVM2">Data</param>
            <remarks>
See comments on byte order for the Read.. functions if you
want to enforce a certain byte order.

If a byte order is not specified, the data is written
in the native byte order of the writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteReal(System.Int32,System.Double)">
            <summary>Writes real to the BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="d2">Data</param>
            <remarks>
See comments on byte order for the Read.. functions if you
want to enforce a certain byte order.

If a byte order is not specified, the data is written
in the native byte order of the writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteInt(System.Int32,System.Int32)">
            <summary>Writes int to the BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="i2">Data</param>
            <remarks>
See comments on byte order for the Read.. functions if you
want to enforce a certain byte order.

If a byte order is not specified, the data is written
in the native byte order of the writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteDataNull">
            <summary>Writes a null byte (0) to BF</summary>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteBinaryString(System.Int32,System.String)">
            <summary>Write a binary string to a BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;BF_ENCODE&amp;lt;/define&amp;gt;</param>
            <param name="str2">String to write out</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.SetDestroyStatus(System.Int32)">
            <summary>Set the flag to delete the file on close</summary>
            <param name="i1">&amp;lt;define&amp;gt;BF_CLOSE&amp;lt;/define&amp;gt;</param>
            <available_version>6.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.ReadVV(System.Int32,GeoEngine.Core.GXNetX.CVV)">
            <summary>Read data to a VV from current position in BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="oVV2">VV data to read, VV length is read</param>
            <remarks>
If the data source may be in byte order different from that
required by the reader, you can add the source byte-order
to the BF elelment type.  The byte order will be swapped
if required.  For example, to write out a real number 3.5
with Most-Significant_Byte first (Mortorola) convention:

WriteReal_BF(hBF,&amp;lt;define&amp;gt;BF_BYTEORDER_MSB&amp;lt;/define&amp;gt;+&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;,3.5).

If a byte order is not specified, the source is assumed to be
in the native byte order of the reading/writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.ReadVM(System.Int32,GeoEngine.Core.GXNetX.CVM)">
            <summary>Read data to a VM from current position in BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="oVM2">VM data to read, VM length is read</param>
            <remarks>
If the data source may be in byte order different from that
required by the reader, you can add the source byte-order
to the BF elelment type.  The byte order will be swapped
if required.  For example, to write out a real number 3.5
with Most-Significant_Byte first (Mortorola) convention:

WriteReal_BF(hBF,&amp;lt;define&amp;gt;BF_BYTEORDER_MSB&amp;lt;/define&amp;gt;+&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;,3.5).

If a byte order is not specified, the source is assumed to be
in the native byte order of the reading/writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.ReadReal(System.Int32,System.Double@)">
            <summary>Reads real data from current position in BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="d2">Data</param>
            <remarks>
If the data source may be in byte order different from that
required by the reader, you can add the source byte-order
to the BF elelment type.  The byte order will be swapped
if required.  For example, to write out a real number 3.5
with Most-Significant_Byte first (Mortorola) convention:

WriteReal_BF(hBF,&amp;lt;define&amp;gt;BF_BYTEORDER_MSB&amp;lt;/define&amp;gt;+&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;,3.5).

If a byte order is not specified, the source is assumed to be
in the native byte order of the reading/writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.ReadInt(System.Int32,System.Int32@)">
            <summary>Reads int data from current position in BF</summary>
            <param name="i1">&amp;lt;define&amp;gt;GS_TYPES&amp;lt;/define&amp;gt; and &amp;lt;define&amp;gt;BF_BYTEORDER&amp;lt;/define&amp;gt;</param>
            <param name="i2">Data</param>
            <remarks>
If the data source may be in byte order different from that
required by the reader, you can add the source byte-order
to the BF elelment type.  The byte order will be swapped
if required.  For example, to write out a real number 3.5
with Most-Significant_Byte first (Mortorola) convention:

WriteReal_BF(hBF,&amp;lt;define&amp;gt;BF_BYTEORDER_MSB&amp;lt;/define&amp;gt;+&amp;lt;define&amp;gt;GS_REAL&amp;lt;/define&amp;gt;,3.5).

If a byte order is not specified, the source is assumed to be
in the native byte order of the reading/writing computer.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.iTell">
            <summary>Returns current position of file pointer in bytes</summary>
            <returns>Current file pointer location</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.iSize">
            <summary>Returns the file length</summary>
            <returns>File size in bytes.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.IReadBinaryString(System.Int32,System.Int32,System.String@)">
            <summary>Reads string data from current position in BF</summary>
            <param name="i1">Number of bytes to read</param>
            <param name="i2">&amp;lt;define&amp;gt;BF_ENCODE&amp;lt;/define&amp;gt;</param>
            <param name="str3">Data</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.iQueryWrite">
            <summary>Check if you can write to the BF.</summary>
            <returns>
0 - No
1 - Yes
</returns>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.iEOF">
            <summary>Returns 1 if at the end of the file</summary>
            <returns>
1 if at the end of the file,
0 if not at the end of the file
</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.CreateSBF(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CSBF,System.String,System.Int32)">
            <summary>Create BF object inside an SBF.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oSBF1">Storage</param>
            <param name="str2">File name to open ("" is a temporary file)</param>
            <param name="i3">&amp;lt;define&amp;gt;BF_OPEN_MODE&amp;lt;/define&amp;gt;</param>
            <remarks>see sbf.gxh</remarks>
            <returns>BF Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.Create(GeoEngine.Core.GXNetX.CGXNETCore,System.String,System.Int32)">
            <summary>Create BF object.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">File name to open ("" is a temporary file)</param>
            <param name="i2">&amp;lt;define&amp;gt;BF_OPEN_MODE&amp;lt;/define&amp;gt;</param>
            <remarks>
Run-time specific directory paths may be added the the front of file names
as follows:

&lt;geosoft&gt;      the main Geosoft installation directory
&lt;geosoft2&gt;     the secondary Geosoft installation directory
&lt;geotemp&gt;      the Geosoft temporary file directory
&lt;windows&gt;      the operating system Windows directory
&lt;system&gt;       the operating system system directory
&lt;other&gt;        other environment variables

For example "&lt;geosoft&gt;/user/csv/datum.csv"
</remarks>
            <returns>BF Object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.CRC(System.Int32,System.Int32)">
            <summary>Compute CRC of a file.</summary>
            <param name="i1">Number of bytes to CRC</param>
            <param name="i2">CRC start (use &amp;lt;define&amp;gt;CRC_INIT_VALUE&amp;lt;/define&amp;gt; for new)</param>
            <returns>CRC Value</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.Copy(GeoEngine.Core.GXNetX.CBF)">
            <summary>Copy entire contents of a source BF to a destination BF</summary>
            <param name="oBF1">Destination BF</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.Seek(System.Int32,System.Int32)">
            <summary>Moves file position</summary>
            <param name="i1">Number of bytes from reference point</param>
            <param name="i2">&amp;lt;define&amp;gt;BF_SEEK&amp;lt;/define&amp;gt;</param>
            <remarks>
Terminates if attempt to move past the end of
a read-only file.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.ChSize(System.Int32)">
            <summary>Changes the size of a file</summary>
            <param name="i1">New length in bytes</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.WriteBuff(System.Byte*,System.Int32)">
            <summary>Write data from memory into a BF stream</summary>
            <param name="b1">Data buffer to write data from</param>
            <param name="i2">Number of bytes to write</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CBF.ReadBuff(System.Byte*,System.Int32)">
            <summary>Read data from a BF stream into memory</summary>
            <param name="b1">Data buffer to read data into</param>
            <param name="i2">Number of bytes to read</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CBF">
            <summary>

       The BF class is used to access (or create) Binary files and remove
       (or destroy) files from use. You can also perform a variety of
       additional tasks, such as positioning within files, reading from
       files and writing to files.
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.SetRenderMethod(System.Int32)">
            <summary>Sets the Rendering Method</summary>
            <param name="i1">&amp;lt;define&amp;gt;AGG_RENDER&amp;lt;/define&amp;gt;</param>
            <available_version>5.1.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.SetLayerITR(System.Int32,GeoEngine.Core.GXNetX.CITR)">
            <summary>Set the ITR of a layer</summary>
            <param name="i1">Layer number</param>
            <param name="oITR2" />
            <remarks>
Layers are numbered from 0, consecutively in the order they are
placed in the aggregate.

An error will occur if the layer does not exist.

Caller must create/destroy ITR.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.rGetBrightness">
            <summary>Get the brightness setting of the AGG</summary>
            <remarks>
Brightness can range from -1.0 (black) to 1.0 (white).
This brightness control is relative to the normal color
when the AGG is created.

AGG brightness depends on the brightness of the ITR of each layer.
Calling dGetBright_AGG will poll all layers, and if all have the same
brightness, this is returned.  If any of the layers have a different
brightness, the current brightness of each layer is changed to be
the reference brightness (0.0)and the brightness value of 0.0 is
returned.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.LayerShadeIMG(System.String,System.String,System.Double,System.Double,System.Double@)">
            <summary>Add a shaded image as a layer in an aggregate.</summary>
            <param name="str1">Grid name</param>
            <param name="str2">Color table name, "" for default</param>
            <param name="d3">Inclination</param>
            <param name="d4">Declination</param>
            <param name="d5">Scale (&amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for default, returns value used)</param>
            <remarks>
A new grid file will be created to hold the shaded
image data.  This file will have the same name as the
original grid but with "_s" added to the root name.
It will always be located in the workspace directory
regardless of the location of the original source image.
If the file already exists, it will replaced.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.LayerIMGEx(System.String,System.Int32,System.String,System.Double,System.Double,System.Double)">
            <summary>Add an image as a layer in an aggregate.</summary>
            <param name="str1">Grid name</param>
            <param name="i2">&amp;lt;define&amp;gt;AGG_LAYER_ZONE&amp;lt;/define&amp;gt; transform to use if color table has none defined.</param>
            <param name="str3">Color table name, "" for default This can be a .TBL .ZON .ITR or .AGG file .TBL is the default</param>
            <param name="d4">Minimum value or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for default</param>
            <param name="d5">Maximum value or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for default</param>
            <param name="d6">Color contour interval or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for default</param>
            <available_version>8.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.LayerIMG(System.String,System.Int32,System.String,System.Double)">
            <summary>Add an image as a layer in an aggregate.</summary>
            <param name="str1">Grid name</param>
            <param name="i2">&amp;lt;define&amp;gt;AGG_LAYER_ZONE&amp;lt;/define&amp;gt; transform to use if color table has none defined.</param>
            <param name="str3">Color table name, "" for default This can be a .TBL .ZON .ITR or .AGG file .TBL is the default</param>
            <param name="d4">Color contour interval or &amp;lt;define&amp;gt;rDUMMY&amp;lt;/define&amp;gt; for default</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.iNumLayers">
            <summary>Get the number of layers in an aggregate.</summary>
            <returns>The number of layers in an aggregate.</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.iListImg(GeoEngine.Core.GXNetX.CVV)">
            <summary>Lists file names of all the IMGs inside of the AGG.</summary>
            <param name="oVV1">VV of type -&amp;lt;define&amp;gt;STR_FILE&amp;lt;/define&amp;gt;</param>
            <remarks>The returned VV contains the file names.</remarks>
            <returns>The number of IMGs.</returns>
            <available_version>5.0.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.GetLayerITR(System.Int32,GeoEngine.Core.GXNetX.CITR)">
            <summary>Get the ITR of a layer</summary>
            <param name="i1">Layer number</param>
            <param name="oITR2" />
            <remarks>
Layers are numbered from 0, consecutively in the order they are
placed in the aggregate.

An error will occur if the layer does not exist.

Caller must create/destroy ITR.
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.CreateMap(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP,System.String)">
            <summary>Create AGG from Map with Group name.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP on which to place the view</param>
            <param name="str2">AGG group name</param>
            <remarks>
The Agg Group name must include the View name with a
backslash separating the view name and group name; e.g.
"Data\AGG_test" (when used as a string, the double slash
represents as single \).
</remarks>
            <returns>AGG object</returns>
            <available_version>5.0.5</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Create an aggregate</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>AGG object</returns>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.ChangeBrightness(System.Double)">
            <summary>Change the brightness.</summary>
            <param name="d1">-1.0 - black; 0.0 no change; 1.0 white</param>
            <remarks>
0.0 brightness does nothing.
-1.0 to 0.0 makes colors darker, -1.0 is black
0.0 to 1.0 makes colors lighter, 1.0 is white
</remarks>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CAGG.SetModel(System.Int32)">
            <summary>Sets the Color Model</summary>
            <param name="i1">&amp;lt;define&amp;gt;AGG_MODEL&amp;lt;/define&amp;gt;</param>
            <available_version>5.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CAGG">
            <summary>

       The AGG class is used to handle image display on maps.
       An aggregate contains one or more image layers (LAY) with
       each layer representing a grid or image file. The AGG
       will combine all the layers to form one image
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DV.CRC3DV(System.Int32@,System.String)">
            <summary>Generate an XML CRC of a 3DV</summary>
            <param name="i1">CRC returned</param>
            <param name="str2">Name of xml to generate (.zip added)</param>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DV.FromMap(GeoEngine.Core.GXNetX.CGXNETCore,GeoEngine.Core.GXNetX.CMAP)">
            <summary>Get an 3DV from MAP handle (e.g. from Lock_EMAP on open geosoft_3dv document in project)</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="oMAP1">MAP Object</param>
            <returns>3DV Object</returns>
            <available_version>9.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DV.Open(GeoEngine.Core.GXNetX.CGXNETCore,System.String)">
            <summary>Open an existing 3DV.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">3DV file name</param>
            <returns>3DV Object</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DV.CreateNew(GeoEngine.Core.GXNetX.CGXNETCore,System.String,GeoEngine.Core.GXNetX.CMVIEW)">
            <summary>Create a new 3DV.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <param name="str1">3DV file name</param>
            <param name="oMVIEW2">3D MVIEW to create new 3DV from</param>
            <returns>3DV Object</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DV.ICopyToMAP(GeoEngine.Core.GXNetX.CMAP,System.String,System.Double,System.Double,System.Double,System.Double,System.Int32,System.String@,System.String@)">
            <summary>Copy the 3DV's 3D MVIEW into a map.</summary>
            <param name="oMAP1">MAP Object</param>
            <param name="str2">Desired new view name</param>
            <param name="d3">X minimum in mm</param>
            <param name="d4">Y minimun in mm</param>
            <param name="d5">X maximum in mm</param>
            <param name="d6">Y maximum in mm</param>
            <param name="i7">(0 - Produce errors for conflicting unpacked files, 1 - Force overwrites of conflicting unpacked files)</param>
            <param name="str8">New view name created</param>
            <param name="str9">List of files that are problematic returned</param>
            <remarks>
A 3DV packs all source files. This functions creates an unpacked map and
unpacks the packed files in the same way that UnPackFilesEx in the MAP class does.
</remarks>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DV.OpenMVIEW(System.Int32)">
            <summary>Open 3DV's 3D MVIEW</summary>
            <param name="i1">&amp;lt;define&amp;gt;GEO3DV_OPEN&amp;lt;/define&amp;gt;</param>
            <returns>MVIEW, aborts on failure</returns>
            <available_version>8.0</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.C3DV">
            <summary>

       TODO...
   
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetShading(System.Int32)">
            <summary>Set the shading control on or off</summary>
            <param name="i1">0: Off, 1:  On.</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetScale(System.Double,System.Double,System.Double)">
            <summary>Set the axis relative scales.</summary>
            <param name="d1">X Scale (default 1.0)</param>
            <param name="d2">Y Scale (default 1.0)</param>
            <param name="d3">Z Scale (default 1.0)</param>
            <remarks>
By default all scales are equal (1.0). By setting
these scales, relative adjustments to the overall
view of the 3D objects can be made. Note that they
are relative to each other. Thus, setting the scaling
to 5,5,5 is the same as 1,1,1. This is typically used
to exaggerate one scale such as Z (1,1,5).
</remarks>
            <available_version>6.1</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetRenderControls(System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>Set the rendering controls</summary>
            <param name="i1">Render Bounding Box (0 or 1)</param>
            <param name="i2">Render Axis (0 or 1)</param>
            <param name="str3">Label for X axis</param>
            <param name="str4">Label for Y axis</param>
            <param name="str5">Label for Z axis</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetPointOfView(System.Double,System.Double,System.Double)">
            <summary>Set location of the point we are looking from</summary>
            <param name="d1">Distance from center relative to longest grid dimension (which is 1.0)</param>
            <param name="d2">Declination, 0 to 360 CW from Y</param>
            <param name="d3">Inclination, -90 to +90</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetBackgroundColor(System.Int32)">
            <summary>Set the window background color</summary>
            <param name="i1">Background Color</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetAxisFont(System.String)">
            <summary>Set the Axis font</summary>
            <param name="str1">Font name</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.SetAxisColor(System.Int32)">
            <summary>Set the Axis draw color</summary>
            <param name="i1">Axis Color</param>
            <available_version>5.1.6</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.iGetShading">
            <summary>Set the shading control on or off</summary>
            <returns>Shading On/Off</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.IGetRenderControls(System.Int32@,System.Int32@,System.String@,System.String@,System.String@)">
            <summary>Get the rendering controls</summary>
            <param name="i1">Render Bounding Box (0 or 1)</param>
            <param name="i2">Render Axis (0 or 1)</param>
            <param name="str3">Label for X axis</param>
            <param name="str4">Label for Y axis</param>
            <param name="str5">Label for Z axis</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.iGetBackgroundColor">
            <summary>Get the window background color</summary>
            <returns>Background Color value</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.IGetAxisFont(System.String@)">
            <summary>Get the Axis font</summary>
            <param name="str1">Font name</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.iGetAxisColor">
            <summary>Get the Axis draw color</summary>
            <returns>Axis Color</returns>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.GetScale(System.Double@,System.Double@,System.Double@)">
            <summary>Get the axis relative scales.</summary>
            <param name="d1">X Scale</param>
            <param name="d2">Y Scale</param>
            <param name="d3">Z Scale</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.GetPointOfView(System.Double@,System.Double@,System.Double@)">
            <summary>Get location of the point we are looking from</summary>
            <param name="d1">Distance from center relative to longest grid dimension (which is 1.0)</param>
            <param name="d2">Declination, 0 to 360 CW from Y</param>
            <param name="d3">Inclination, -90 to +90</param>
            <available_version>6.3</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.Create(GeoEngine.Core.GXNetX.CGXNETCore)">
            <summary>Creates a 3DN.</summary>
            <param name="gxNetShared">A shared <see cref="T:GeoEngine.Core.GXNetX.CGXNETCore" /></param>
            <returns>3DN Object</returns>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.C3DN.Copy(GeoEngine.Core.GXNetX.C3DN)">
            <summary>Copy one 3DN object to another.</summary>
            <param name="o3DN1">Source 3DN to Copy from</param>
            <available_version>5.1.2</available_version>
            <licensed_method>no</licensed_method>
            <app_method>no</app_method>
            <public_method>yes</public_method>
            <extended_method>no</extended_method>
            <method_group>Miscellaneous</method_group>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.C3DN">
            <summary>

       This class manages the rendering of a 3D view. It allows
       the positioning of the camera, specification of the zoom
       as well as some rendering controls for the axis. It is
       directly related to the MVIEW class.
   
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IntConstants">
            <summary>Global integer constants as an enum</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_APPEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_ENCODE_UTF16_NOHEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_ENCODE_UTF8_NOHEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_ENCODE_UTF8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_ENCODE_RAW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.WA_ENCODE_ANSI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_WINDOW_LIMIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_WINDOWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_WINDOW_DUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_WINDOWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_SORT_DESCENDING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_SORT_ASCENDING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_ORDER_DECREASING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_ORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_ORDER_INCREASING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_ORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_ORDER_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_ORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_MASK_OUTSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_MASK_INSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOOKUP_INTERPCLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOOKUP_NEARESTCLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOOKUP_INTERPOLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOOKUP_NEAREST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOOKUP_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOGMODE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOGMODE_CLAMPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOGMODE_SCALED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOGMODE_CLIPPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOG_BASE_E">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_LOG_BASE_10">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_FLOAT_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_FLOAT_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_FLOAT_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_DOUBLE_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_DOUBLE_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VV_DOUBLE_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BLOCK_MODEL_STRING_VARIABLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BLOCK_MODEL_NUMERIC_VARIABLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOXE_EVAL_BEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOXE_EVAL_INTERP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOXE_EVAL_NEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOXELRENDER_EDGES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOXELRENDER_FILL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOXELRENDER_SMOOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_VECTORVOX_AID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_VECTORVOX_UVW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_VECTORVOX_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_SLICE_MODE_NEAREST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_SLICE_MODE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_ORIGIN_TOP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_ORIGINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_ORIGIN_BOTTOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_ORIGINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GRID_LOGOPT_LOGLINEAR_SAVELOG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GRID_LOGOPT_LOG_SAVELOG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GRID_LOGOPT_LOGLINEAR_SAVELINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GRID_LOGOPT_LOG_SAVELINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GRID_LOGOPT_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GOCAD_ORIENTATIONS_INVERTED_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GOCAD_ORIENTATIONS_NORMAL_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GOCAD_ORIENTATIONS_INVERTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_GOCAD_ORIENTATIONS_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_TOTAL_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_Z_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_Y_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_X_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_LAPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_SMOOTHING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_FILTER3D_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_3D_DIR_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_3D_DIR_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_3D_DIR_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_3D_DIR_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_3D_DIR_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_3D_DIR_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_DIR_YZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_DIR_XZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VOX_DIR_XY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VA_COL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_OBJECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VA_ROW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_OBJECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VA_AVERAGE_COLUMNS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_AVERAGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VA_AVERAGE_ROWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_AVERAGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.USERMETA_FORMAT_FGDC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.USERMETA_FORMAT_ISO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.USERMETA_FORMAT_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TPAT_SYMBFONT_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TPAT_DESC_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TPAT_LABEL_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TPAT_CODE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TB_SORT_ALLOW_DUPLICATES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TB_SORT_UNIQUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TB_SEARCH_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SEARCHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TB_SEARCH_BINARY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SEARCHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ID_CLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ID_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ID_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ID_RETRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ID_CANCEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ID_OK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_CLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_RETRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_CANCEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_OK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_BUTTON_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ICON_CONFIRMATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ICON_SUCCESS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ICON_INFORMATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ICON_ERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ICON_WARNING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TD_ICON_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_ENCRYPTION_KEY_GLOBAL_ID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_ENCRYPTION_KEY_GEOSOFT_ID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FIND_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FIND_LOCAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FIND_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FIND_LOCAL_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_WIN_WAIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_WIN_NOWAIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_TYPE_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_TYPE_EXE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_TYPE_DOS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_HOLD_ALWAYS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_HOLD_ONERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_HOLD_NEVER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_DISPLAY_FULLSCREEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_DISPLAY_MINIMIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_RUN_DISPLAY_WINDOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_USER_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_USER_SERVICES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_TEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_STACKS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_LIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_TBL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_SPEC_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_SCHEMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_PAGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_GER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_FONTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_ENCRYPTEDFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_DBG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_DATA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_CSV_ALIASES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_BIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_RESOURCEFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_LICENSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_SYSTEM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOTEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_PATH_LOCAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_MENU_CLEAR_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_MENU_CLEAR_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_LINEAGE_SOURCE_VOXEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_LINEAGE_SOURCE_GRID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_LINEAGE_SOURCE_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_LINEAGE_SOURCE_DB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_LINEAGE_SOURCE_MXD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_LINEAGE_SOURCE_MAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_TEST_REGISTRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_OIS_REGISTRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_REGISTRY_INTERAPP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_REGISTRY_SUPPORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_REGISTRY_ENVIRONMENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_REGISTRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_LEGALCOPYRIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_SERVERNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_PRODUCTNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_VERSION_LABEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_BUILD_LABEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_BUILD_NUMBER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_VERSION_SP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_VERSION_MINOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_INFO_VERSION_MAJOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_FONT_TT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_FONTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_FONT_GFN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_FONTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_SERVICES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_TEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_STACKS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_LIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_TBL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_SPEC_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_SCHEMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_PAGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_GER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_FONTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_ENCRYPTEDFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_DBG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_DATA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_CSV_ALIASES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_BIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_RESOURCEFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_LICENSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_SYSTEM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOTEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SYS_DIR_LOCAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_FORCEMINIMIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWDEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_RESTORE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWNA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWMINNOACTIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_MINIMIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWNOACTIVATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWMAXIMIZED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWMINIMIZED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_SHOWNORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SW_HIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.REG_DOMAIN_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_DOMAINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.REG_DOMAIN_MACHINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_DOMAINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_TEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_LIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_USER_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_APPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_FONTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_TBL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_GER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_BIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO_DIRECTORY_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARC_LICENSE_ARCSERVER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARC_LICENSE_ARCINFO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARC_LICENSE_ARCEDITOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARC_LICENSE_ARCVIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARC_LICENSE_DESKTOPENGINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARC_LICENSE_ENGINENOTPRESENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACERENDER_EDGES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACERENDER_FILL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACERENDER_SMOOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACE_OPEN_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACE_OPEN_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_TRIMBOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_TRIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_TRIMLEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_TRIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_TRIMRIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_TRIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_JUSTIFY_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_JUSTIFY_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_JUSTIFY_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_FULLPATH_NO_QUALIFIERS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_NAME_EXTENSION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_QUALIFIERS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_VOLUME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_DIRECTORY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_EXTENSION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE_PART_NAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ESCAPE_REPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_ESCAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ESCAPE_CONVERT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_ESCAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_CASE_SENSITIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_CASE_TOLERANT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILE_EXT_FORCE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILE_EXTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILE_EXT_ADD_IF_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILE_EXTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST2_PCORR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST2_CORR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_HIST_MAXCOUNT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_MINPOS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_SUM4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_SUM3">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_SUM2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_SUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_BASE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_KURTOSIS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_SKEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_STDERR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_STDDEV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_VARIANCE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_GEOMEAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_MODE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_MEDIAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_MEAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_RANGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_MIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_DUMMIES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_NZERO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_NPOS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ST_ITEMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SBF_TYPE_BOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SBF_TYPE_FILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SBF_TYPE_DIRS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SBF_READWRITE_OLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SBF_READWRITE_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SBF_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.REG_MERGE_ADD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_MERGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.REG_MERGE_REPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_MERGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_LINE_CLIP_ERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_LINE_CLIP_OUTSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_LINE_CLIP_NO_INTERSECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_LINE_CLIP_INSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_CLIP_B_IN_A">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_CLIP_A_IN_B">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_CLIP_INTERSECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PLY_CLIP_NO_INTERSECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PJ_RECT_LL2XY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_RECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PJ_RECT_XY2LL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_RECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PJ_ELEVATION_GEOID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PJ_ELEVATION_GEOCENTRIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PJ_ELEVATION_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_BF_CONV_SWAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_BF_CONVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_BF_CONV_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_BF_CONVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_3D_DIR_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_3D_DIR_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_3D_DIR_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_3D_DIR_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_3D_DIR_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.PG_3D_DIR_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSTYLE_TRIANGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSTYLE_BARB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSTYLE_LINES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSIZE_NOTAIL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSIZE_LARGEHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSIZE_MEDIUMHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSIZE_SMALLHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VSIZE_NOHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VPOS_TAIL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VPOS_MIDDLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VPOS_HEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VPOINT_BLUNT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VPOINT_MEDIUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VPOINT_SHARP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_TEXTBOX_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_TEXTBOX_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_TEXTBOX_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VOX_SURFACE_OPTION_CLOSED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VOX_SURFACE_OPTION_OPEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_VOX_SURFACE_METHOD_MARCHING_CUBES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_DIRECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_LOCATE_BELOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_LOCATE_ABOVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_LOCATE_END">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_LOCATE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_DUMMIES_INCLUDED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_DUMMIES_NOTINCLUDED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_COMPASS_SOUTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_COMPASS_WEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_COMPASS_NORTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_COMPASS_EAST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_FLIGHT_COMPASS_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_ARROW_FIXED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ARROWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_ARROW_SOLID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ARROWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_DIVISION_STYLE_TICS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_DIVISION_STYLE_LINES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_DIVISION_STYLE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_ORIENTATION_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVU_ORIENTATION_VERTICAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.COLORBAR_STYLE_MAXMIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.COLORBAR_STYLE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.COLORBAR_LABEL_VERTICAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.COLORBAR_LABEL_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_ALTERNAT2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_ALTERNAT1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_NEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_PEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_ABOVEX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_BELOWX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BARCHART_LABEL_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARROW_ALIGNMENT_VERTICAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ARROW_ALIGNMENT_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.EMLAY_V_COAXIAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.EMLAY_H_COPLANAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.EMLAY_V_COPLANAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_3D_DONT_SCALE_GEOMETRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_3D_RENDER_BACKFACES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_TOP_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_TOP_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_TOP_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_MIDDLE_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_MIDDLE_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_MIDDLE_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_BOTTOM_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_BOTTOM_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TEXT_REF_BOTTOM_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_UNIT_VIEW_UNWARPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_UNIT_MM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_UNIT_PLOT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_UNIT_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_UNIT_VIEW_UNWARPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_UNIT_MM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_UNIT_PLOT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_UNIT_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_TILE_RANDOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_TILE_TRIANGULAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_TILE_DIAGONAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_TILE_RECTANGULAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_SMOOTH_AKIMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_SMOOTH_CUBIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_SMOOTH_NEAREST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_RELOCATE_ASPECT_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_RELOCATE_ASPECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_RELOCATE_FIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_PJ_ON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_PJ_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_PJ_LOCATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_PJ_OFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_WRITEOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_WRITENEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_NAME_LENGTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_NAME_LENGTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_ORIENT_TOP_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_ORIENT_TOP_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_ORIENT_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_JUST_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_JUST_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_JUST_BOTTOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_JUST_TOP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_BOUND_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_LABEL_BOUND_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_VECTOR3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_SHADOW_2D_INTERPRETATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_VOXD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_META">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_CLIPPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_HIDDEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_MADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_LINKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_CSYMB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_MOVABLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_IS_AGG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.HIDE_OFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.HIDE_ON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GROUP_LIST_VISIBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GROUP_LIST_MARKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GROUP_LIST_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GROUP_APPEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GROUP_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GRID_CROSS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GRID_LINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_GRID_DOT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_XXBOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_XBOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_BOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_MEDIUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_LIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_ULTRALIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FONT_WEIGHT_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FIT_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_FIT_MAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_VISIBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_MAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_CLIP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_EXTENT_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_MODE_SMOOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_MODE_FLAT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_POLYGONS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_QUADS_STRIPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_QUADS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_TRIANGLE_FANS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_TRIANGLE_STRIPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_TRIANGLES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_LINE_LOOPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_LINE_STRIPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_LINES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAWOBJ3D_ENTITY_POINTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAW_POLYGON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_DRAW_POLYLINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_CYLINDER3D_CLOSEALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_CYLINDER3D_CLOSEEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_CYLINDER3D_CLOSESTART">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MVIEW_CYLINDER3D_OPEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_TRANSPARENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_WHITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_GREY50">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_GREY25">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_GREY10">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_GREY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_YELLOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_MAGENTA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_CYAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_BLUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_GREEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_LT_RED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_GREY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_YELLOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_MAGENTA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_CYAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_BLUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_GREEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_RED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.C_BLACK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.CLIP_OFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.CLIP_ON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAKER_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAKERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.RBFKERNEL_MULTIQUADRATIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.RBFKERNELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.RBFKERNEL_DISTANCE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.RBFKERNELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MULTIGRID3D_DIRECTGRID_DUMMYITEMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MULTIGRID3D_DIRECTGRID_ITEMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MULTIGRID3D_DIRECTGRID_MEAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MULTIGRID3D_DIRECTGRID_MAXIMUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MULTIGRID3D_DIRECTGRID_MINIMUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_TOTAL_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_Z_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_Y_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_X_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_LAPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_SMOOTHING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FILTER3D_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VECTOR_IMPORT_AID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VECTOR_IMPORT_UVW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.VECTOR_IMPORT_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GOCAD_ORIENTATIONS_INVERTED_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GOCAD_ORIENTATIONS_NORMAL_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GOCAD_ORIENTATIONS_INVERTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GOCAD_ORIENTATIONS_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DIRECTION3D_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DIRECTION3D_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DIRECTION3D_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DIRECTION3D_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DIRECTION3D_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DIRECTION3D_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_ClassType">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_Enum">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_Object">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_String">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_R8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_R4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_U8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_I8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_U4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_I4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_U2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_I2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_U1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_I1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_Bool">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_TYPE_Bytes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Enum_ClassType">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Enum_Bool">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Enums">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Types">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_ItemAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_AttributeAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_EnumAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_ObjectAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_TypeAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_ClassAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Attributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Predefined">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_CLASS_Base">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Attrib_FlatName">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Attrib_Editable">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Attrib_Visible">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_Enum_Value">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_sSerial_Func">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_hCreatS_Func">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_ObjectClass">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_MaxSize">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_MaxValue">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_MinValue">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_ByteOrder">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_FixedSize">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_ReferenceURL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Type_Description">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Class_Type">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Class_ReferenceURL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Class_Application">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.META_CORE_ATTRIB_Class_Description">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.H_META_INVALID_TOKEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.H_META_INVALID_TOKENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACE_CLIP_BOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACE_CLIP_BELOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SURFACE_CLIP_ABOVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_FACES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_VERTICES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_SURFACE_SIDES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_SINGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_VECTOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_THEMATIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ATTRIBUTE_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAPTEMPLATE_EXIST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAPTEMPLATE_WRITENEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_WRITEOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_WRITENEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_LIST_MODE_NOT3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_LIST_MODE_3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_LIST_MODE_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_METHOD_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_METHOD_DIFFUSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_METHOD_STANDARD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_GREY1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_GREY4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_GREY8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_24">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.MAP_EXPORT_BITS_32">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DUPMAP_COPY_PRE62">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DUPMAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DUPMAP_COPY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DUPMAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DUPMAP_BLANK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DUPMAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_TYPE_NOHEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_TYPE_HEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_DELIM_SPACECOMMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_DELIM_COMMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_DELIM_SPACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_CONLST_ANY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CONLSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_CONLST_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CONLSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_CASE_SENSITIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LTB_CASE_INSENSITIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LST_ITEM_VALUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LST_ITEMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LST_ITEM_NAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LST_ITEMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_MOVEB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_MOVET">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_MOVER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_MOVEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_VCENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_HCENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_HEIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_WIDTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_BOTTOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_TOP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.LAYOUT_CONSTR_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_MODEL_LOGLIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_MODEL_EQUAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_MODEL_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_MODEL_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_MODEL_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_MODEL_NOZONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_LOGLINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_SHADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_EQUALAREA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_ZONE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_POWER_EXP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_POWERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_POWER_10">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_POWERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_COLOR_MODEL_CMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_COLOR_MODEL_RGB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.ITR_COLOR_MODEL_HSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_MULTIPOINT_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_LOG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_MULTIPOINT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_QUAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_TRANS3">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_TRANS2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_TRANS1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_WARP_MATRIX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_UNIT_FULLNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_UNIT_ABBREVIATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_TEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_WRP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_ANY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_GCS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_PCS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_TYPE_PRJ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_UNITSDESCRIPTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_LOCALDATUMNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_LOCALDATUMDESCRIPTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_UNITS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_PROJECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_DATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_PARM_LST_COORDINATESYSTEM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_SECTION_CROOKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_3D_MATRIX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_DEPTH_SECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_SECTION_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_SECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_PLAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_ORIENT_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_ORIENTATION_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_METHOD_PARMS_NATIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_LDATUMDESCRIPTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_GEOID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_LDATUM_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_DATUM_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_METHOD_LABEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_METHOD_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_LLDATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_TYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_UNIT_FULL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_UNIT_ABBR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_LDATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_ELLIPSOID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_DATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_METHOD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_PROJECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_NAME_PCS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_POINTLON_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_POINTLAT_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_POINTLON_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_POINTLAT_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_ANGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_AZIMUTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_PARALLEL_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_PARALLEL_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_LONORIGIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_LATORIGIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_FALSENORTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_FALSEEAST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_CSP_SCALE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_ROTATE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_FLAG_ORDER_ROTATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_FLAG_INVERTZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_FLAG_INVERTANGLES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IPJ_3D_FLAG_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_XYZ_LABEL_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_XYZ_LABEL_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_XYZ_INDEX_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_XYZ_INDEX_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_WIND_CLIP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_WIND_DUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_WIND_GROUND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_WIND_GRID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_TREND_EDGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRENDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_TREND_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRENDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_TRANS_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_TRANS_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_TRANS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_STAT_FORCED_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_STAT_FORCED_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_MASK_OUTSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_MASK_INSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FLOAT_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FLOAT_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FLOAT_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_HZDRV_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_HZDRV_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_HZDRV_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_FILE_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_FILE_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_DUMMY_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILT_DUMMY_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILL_ROLLOPT_SQUARE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_FILL_ROLLOPT_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_EXPAND_SHAPE_SQUARE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_EXPAND_SHAPE_RECTANGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_DOUBLE_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_DOUBLE_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_DOUBLE_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_SIZING_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_SIZING_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_SIZING_0">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_SIZING_MIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_OPT_XOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_OPT_OR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_OPT_AND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_OLAP_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_OLAP_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMU_BOOL_OLAP_AVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_RELOCATE_ASPECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_RELOCATE_FIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rCOMPRESSION_RATIO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rMULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rBASE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rROT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rDY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rDX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rYO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_rXO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iNE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iNV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iNY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iNX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iKX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iRENDER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iDATTYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iIMGTYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iWRITEPG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iPG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_QUERY_iWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_FILE_READORWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_FILE_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.IMG_FILE_READONLY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GRID3D_THEMATIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GRID3D_VECTOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GRID3D_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_MINESIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_MICROMINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_GEMCOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_DATAMINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_SURPAC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_DGN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_ARCVIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_TYPE_MAPINFO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_MAP2D_NSSECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_MAP2D_EWSECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_MAP2D_PLAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SECTION_ORIENTATION_GMSYS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SECTION_ORIENTATION_CROOKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SECTION_ORIENTATION_SECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SECTION_ORIENTATION_PLAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.SECTION_ORIENTATION_UNKNOWN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEOSTRING_OPEN_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEOSTRING_OPEN_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TIME_FORMAT_HMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TIME_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.TIME_FORMAT_COLON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TIME_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_TYPE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_MAXTYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_DOUBLE2D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_FLOAT2D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_DOUBLE3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_FLOAT3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_ULONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_LONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_ULONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_UBYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_FLOAT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_USHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_BYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_GEOGRAPHIC_3">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_GEOGRAPHIC_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_GEOGRAPHIC_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_GEOGRAPHIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_DATE_MMDDYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_DATE_DDMMYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_DATE_YYYYMMDD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_TIME_HHMMSS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_TIME_HMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_TIME_COLON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_EXP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_SIG_DIG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.FORMAT_DECIMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_REAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_VARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_INT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_VARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_TRUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_BOOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_FALSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_BOOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_MULTI_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_MAX_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_MULTI_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_MAX_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_GXF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_DB_SYMBOL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_MULTI_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_VIEW_GROUP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_GROUP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_VERY_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_ERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_DEFAULT_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_DEFAULT_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.STR_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.iMAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.iMIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_S4DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_S4MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_S4MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_S2DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_S2MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GS_S2MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.iDUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DATE_FORMAT_MMDDYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DATE_FORMAT_DDMMYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DATE_FORMAT_YYYYMMDD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_TIF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_BMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_PNG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_JPG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_ECW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_NATIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_LOSSY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_SEMILOSSY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_LOSSLESS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DSEL_PICTURE_QUALITY_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.NULLSYMB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.NULLSYMBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_DISCRETE_TIME_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_VELOCITIES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_DEPTHS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_ELEVATIONS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_FREQUENCIES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_TIMES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_TIME_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_ARRAY_BASETYPE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_WAIT_INFINITY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_WAITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_WAIT_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_WAITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_SYMB_NAME_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_NAME_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_SYMB_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_SYMB_CHAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_SYMB_LINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_SYMB_BLOB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_OWN_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_OWNConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_OWN_SHARED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_OWNConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_NAME_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LOCK_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LOCK_READONLY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LOCK_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_RANDOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_SPECIAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_TREND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_TEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_TIE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_BASE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_TYPE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_SELECT_EXCLUDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_SELECT_INCLUDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_LINK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_DATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_FULL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_FLIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_TYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_VERSION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_LINE_LABEL_FORMAT_LINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_CHANGESLOST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_MAX_BLOCK_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_INDEX_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_FILE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_BLOB_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_COMP_LEVEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_FREE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_LOST_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_DATA_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_PAGE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_USERS_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_CHANS_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_LINES_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_BLOBS_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_USERS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_CHANS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_LINES_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_INFO_BLOBS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_GROUP_CLASS_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_GROUP_CLASS_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_COORDPAIR_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_COORDPAIR_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_COORDPAIR_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_COMP_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COMPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_COMP_SPEED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COMPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_COMP_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COMPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_Z">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_PROTECTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_UNPROTECTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_HEX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_SIGDIG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_GEOGR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_DATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_TIME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_EXP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CHAN_FORMAT_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_USER_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_USERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_LINE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_LINE_GROUP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_LINE_FLIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_ULONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_LONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_ULONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_UBYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_FLOAT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_USHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_CHAN_BYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DB_CATEGORY_BLOB_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_BLOBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_DMTYPE_POINTDATA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_DMTYPE_WIREFRAME_PT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_DMTYPE_BLOCKMODEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_DMTYPE_DTM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_DMTYPE_WIREFRAME_TR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GIS_DMTYPE_STRING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_XGD_WRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_XGDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_XGD_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_XGDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_XGD_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_XGDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_FILE_FORM_SAVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_FILE_FORM_OPEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_FILE_IMAGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.DAT_FILE_GRID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_SEEK_EOF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_SEEKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_SEEK_CURRENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_SEEKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_SEEK_START">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_SEEKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_READWRITE_APP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_READWRITE_OLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_READWRITE_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_ENCODE_UTF8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_ENCODE_ANSI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_DELETE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_CLOSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_KEEP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_CLOSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_BYTEORDER_MSB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.BF_BYTEORDER_LSB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_RENDER_FADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_RENDER_BLEND_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_RENDER_BLEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_RENDER_ADD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_MODEL_CMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_MODEL_RGB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_MODEL_HSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_LAST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_LOGLINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_SHADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_EQUALAREA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.AGG_LAYER_ZONE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO3DV_MVIEW_WRITEOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IntConstants.GEO3DV_MVIEW_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_APPEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_ENCODE_UTF16_NOHEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_ENCODE_UTF8_NOHEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_ENCODE_UTF8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_ENCODE_RAW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.WA_ENCODE_ANSI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_WINDOW_LIMIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_WINDOWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_WINDOW_DUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_WINDOWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_SORT_DESCENDING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_SORT_ASCENDING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_ORDER_DECREASING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_ORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_ORDER_INCREASING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_ORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_ORDER_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_ORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_MASK_OUTSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_MASK_INSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOOKUP_INTERPCLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOOKUP_NEARESTCLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOOKUP_INTERPOLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOOKUP_NEAREST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOOKUP_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOGMODE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOGMODE_CLAMPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOGMODE_SCALED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOGMODE_CLIPPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOG_BASE_E">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_LOG_BASE_10">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_FLOAT_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_FLOAT_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_FLOAT_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_DOUBLE_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_DOUBLE_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VV_DOUBLE_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BLOCK_MODEL_STRING_VARIABLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BLOCK_MODEL_NUMERIC_VARIABLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOXE_EVAL_BEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOXE_EVAL_INTERP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOXE_EVAL_NEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOXELRENDER_EDGES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOXELRENDER_FILL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOXELRENDER_SMOOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_VECTORVOX_AID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_VECTORVOX_UVW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_VECTORVOX_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_SLICE_MODE_NEAREST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_SLICE_MODE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_ORIGIN_TOP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_ORIGINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_ORIGIN_BOTTOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_ORIGINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GRID_LOGOPT_LOGLINEAR_SAVELOG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GRID_LOGOPT_LOG_SAVELOG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GRID_LOGOPT_LOGLINEAR_SAVELINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GRID_LOGOPT_LOG_SAVELINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GRID_LOGOPT_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GOCAD_ORIENTATIONS_INVERTED_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GOCAD_ORIENTATIONS_NORMAL_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GOCAD_ORIENTATIONS_INVERTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_GOCAD_ORIENTATIONS_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_TOTAL_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_Z_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_Y_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_X_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_LAPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_SMOOTHING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_FILTER3D_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_3D_DIR_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_3D_DIR_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_3D_DIR_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_3D_DIR_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_3D_DIR_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_3D_DIR_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_DIR_YZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_DIR_XZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VOX_DIR_XY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VOX_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VA_COL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_OBJECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VA_ROW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_OBJECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VA_AVERAGE_COLUMNS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_AVERAGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VA_AVERAGE_ROWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VA_AVERAGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.USERMETA_FORMAT_FGDC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.USERMETA_FORMAT_ISO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.USERMETA_FORMAT_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TPAT_SYMBFONT_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TPAT_DESC_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TPAT_LABEL_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TPAT_CODE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TB_SORT_ALLOW_DUPLICATES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TB_SORT_UNIQUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TB_SEARCH_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SEARCHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TB_SEARCH_BINARY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TB_SEARCHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ID_CLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ID_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ID_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ID_RETRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ID_CANCEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ID_OK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_IDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_CLOSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_RETRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_CANCEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_OK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_BUTTON_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ICON_CONFIRMATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ICON_SUCCESS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ICON_INFORMATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ICON_ERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ICON_WARNING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TD_ICON_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TD_ICONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_ENCRYPTION_KEY_GLOBAL_ID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_ENCRYPTION_KEY_GEOSOFT_ID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FIND_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FIND_LOCAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FIND_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FIND_LOCAL_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_WIN_WAIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_WIN_NOWAIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_TYPE_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_TYPE_EXE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_TYPE_DOS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_HOLD_ALWAYS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_HOLD_ONERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_HOLD_NEVER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_DISPLAY_FULLSCREEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_DISPLAY_MINIMIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_RUN_DISPLAY_WINDOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_USER_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_USER_SERVICES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_TEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_STACKS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_LIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_TBL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_SPEC_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_SCHEMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_PAGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_GER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_FONTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_ENCRYPTEDFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_DBG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_DATA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_CSV_ALIASES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_BIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_RESOURCEFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_LICENSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_SYSTEM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOTEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_PATH_LOCAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_PATHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_MENU_CLEAR_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_MENU_CLEAR_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_LINEAGE_SOURCE_VOXEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_LINEAGE_SOURCE_GRID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_LINEAGE_SOURCE_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_LINEAGE_SOURCE_DB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_LINEAGE_SOURCE_MXD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_LINEAGE_SOURCE_MAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_TEST_REGISTRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_OIS_REGISTRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_REGISTRY_INTERAPP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_REGISTRY_SUPPORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_REGISTRY_ENVIRONMENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_REGISTRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_LEGALCOPYRIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_SERVERNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_PRODUCTNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_VERSION_LABEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_BUILD_LABEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_BUILD_NUMBER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_VERSION_SP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_VERSION_MINOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_INFO_VERSION_MAJOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_FONT_TT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_FONTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_FONT_GFN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_FONTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_SERVICES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_TEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_STACKS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_LIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_TBL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_STYLESHEETS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_SPEC_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_SCHEMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_PAGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_GER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_FONTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_ENCRYPTEDFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_DBG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_DATA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_CSV_ALIASES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_BIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_RESOURCEFILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_LICENSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_SYSTEM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOTEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_DIR_LOCAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_FORCEMINIMIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWDEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_RESTORE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWNA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWMINNOACTIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_MINIMIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWNOACTIVATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWMAXIMIZED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWMINIMIZED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_SHOWNORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SW_HIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.REG_DOMAIN_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_DOMAINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.REG_DOMAIN_MACHINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_DOMAINConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_PYGX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_MAPTEMPLATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_BAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_IMG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_TEMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_INI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_LIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_USER_CSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_HLP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_ETC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_APPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_GS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_FONTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_TBL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_OMN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_GER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_BIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_GEOSOFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO_DIRECTORY_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARC_LICENSE_ARCSERVER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARC_LICENSE_ARCINFO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARC_LICENSE_ARCEDITOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARC_LICENSE_ARCVIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARC_LICENSE_DESKTOPENGINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARC_LICENSE_ENGINENOTPRESENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACERENDER_EDGES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACERENDER_FILL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACERENDER_SMOOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACE_OPEN_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACE_OPEN_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_TRIMBOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_TRIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_TRIMLEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_TRIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_TRIMRIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_TRIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_JUSTIFY_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_JUSTIFY_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_JUSTIFY_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_FULLPATH_NO_QUALIFIERS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_NAME_EXTENSION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_QUALIFIERS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_VOLUME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_DIRECTORY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_EXTENSION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE_PART_NAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ESCAPE_REPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_ESCAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ESCAPE_CONVERT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_ESCAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_CASE_SENSITIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_CASE_TOLERANT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.STR_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILE_EXT_FORCE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILE_EXTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILE_EXT_ADD_IF_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILE_EXTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST2_PCORR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST2_CORR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_HIST_MAXCOUNT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_MINPOS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_SUM4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_SUM3">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_SUM2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_SUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_BASE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_KURTOSIS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_SKEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_STDERR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_STDDEV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_VARIANCE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_GEOMEAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_MODE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_MEDIAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_MEAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_RANGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_MIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_DUMMIES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_NZERO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_NPOS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ST_ITEMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ST_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SBF_TYPE_BOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SBF_TYPE_FILES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SBF_TYPE_DIRS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SBF_READWRITE_OLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SBF_READWRITE_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SBF_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SBF_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.REG_MERGE_ADD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_MERGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.REG_MERGE_REPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.REG_MERGEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_LINE_CLIP_ERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_LINE_CLIP_OUTSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_LINE_CLIP_NO_INTERSECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_LINE_CLIP_INSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_CLIP_B_IN_A">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_CLIP_A_IN_B">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_CLIP_INTERSECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PLY_CLIP_NO_INTERSECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PJ_RECT_LL2XY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_RECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PJ_RECT_XY2LL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_RECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PJ_ELEVATION_GEOID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PJ_ELEVATION_GEOCENTRIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PJ_ELEVATION_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_BF_CONV_SWAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_BF_CONVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_BF_CONV_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_BF_CONVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_3D_DIR_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_3D_DIR_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_3D_DIR_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_3D_DIR_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_3D_DIR_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.PG_3D_DIR_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSTYLE_TRIANGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSTYLE_BARB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSTYLE_LINES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSIZE_NOTAIL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSIZE_LARGEHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSIZE_MEDIUMHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSIZE_SMALLHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VSIZE_NOHEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VPOS_TAIL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VPOS_MIDDLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VPOS_HEAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VPOINT_BLUNT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VPOINT_MEDIUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VPOINT_SHARP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_TEXTBOX_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_TEXTBOX_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_TEXTBOX_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VOX_SURFACE_OPTION_CLOSED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VOX_SURFACE_OPTION_OPEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_VOX_SURFACE_METHOD_MARCHING_CUBES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_DIRECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_LOCATE_BELOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_LOCATE_ABOVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_LOCATE_END">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_LOCATE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_DUMMIES_INCLUDED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_DUMMIES_NOTINCLUDED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_COMPASS_SOUTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_COMPASS_WEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_COMPASS_NORTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_COMPASS_EAST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_FLIGHT_COMPASS_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_ARROW_FIXED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ARROWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_ARROW_SOLID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ARROWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_DIVISION_STYLE_TICS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_DIVISION_STYLE_LINES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_DIVISION_STYLE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_ORIENTATION_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVU_ORIENTATION_VERTICAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.COLORBAR_STYLE_MAXMIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.COLORBAR_STYLE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.COLORBAR_LABEL_VERTICAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.COLORBAR_LABEL_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_ALTERNAT2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_ALTERNAT1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_NEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_PEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_ABOVEX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_BELOWX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BARCHART_LABEL_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARROW_ALIGNMENT_VERTICAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ARROW_ALIGNMENT_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.EMLAY_V_COAXIAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.EMLAY_H_COPLANAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.EMLAY_V_COPLANAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_3D_DONT_SCALE_GEOMETRY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_3D_RENDER_BACKFACES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_TOP_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_TOP_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_TOP_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_MIDDLE_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_MIDDLE_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_MIDDLE_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_BOTTOM_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_BOTTOM_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TEXT_REF_BOTTOM_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TEXT_REFConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_UNIT_VIEW_UNWARPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_UNIT_MM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_UNIT_PLOT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_UNIT_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_UNIT_VIEW_UNWARPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_UNIT_MM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_UNIT_PLOT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_UNIT_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_TILE_RANDOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_TILE_TRIANGULAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_TILE_DIAGONAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_TILE_RECTANGULAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_SMOOTH_AKIMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_SMOOTH_CUBIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_SMOOTH_NEAREST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_RELOCATE_ASPECT_CENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_RELOCATE_ASPECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_RELOCATE_FIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_PJ_ON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_PJ_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_PJ_LOCATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_PJ_OFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_WRITEOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_WRITENEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_NAME_LENGTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_NAME_LENGTHConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_ORIENT_TOP_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_ORIENT_TOP_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_ORIENT_HORIZONTAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_JUST_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_JUST_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_JUST_BOTTOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_JUST_TOP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_BOUND_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_LABEL_BOUND_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_VECTOR3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_SHADOW_2D_INTERPRETATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_VOXD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_META">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_CLIPPED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_HIDDEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_MADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_LINKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_CSYMB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_MOVABLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_IS_AGG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.HIDE_OFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.HIDE_ON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GROUP_LIST_VISIBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GROUP_LIST_MARKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GROUP_LIST_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GROUP_APPEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GROUP_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GRID_CROSS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GRID_LINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_GRID_DOT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_XXBOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_XBOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_BOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_MEDIUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_LIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_ULTRALIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FONT_WEIGHT_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FIT_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_FIT_MAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_FITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_VISIBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_MAP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_CLIP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_EXTENT_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_MODE_SMOOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_MODE_FLAT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_POLYGONS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_QUADS_STRIPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_QUADS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_TRIANGLE_FANS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_TRIANGLE_STRIPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_TRIANGLES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_LINE_LOOPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_LINE_STRIPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_LINES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAWOBJ3D_ENTITY_POINTS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAW_POLYGON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_DRAW_POLYLINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_CYLINDER3D_CLOSEALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_CYLINDER3D_CLOSEEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_CYLINDER3D_CLOSESTART">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MVIEW_CYLINDER3D_OPEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_TRANSPARENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_WHITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_GREY50">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_GREY25">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_GREY10">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_GREY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_YELLOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_MAGENTA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_CYAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_BLUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_GREEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_LT_RED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_GREY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_YELLOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_MAGENTA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_CYAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_BLUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_GREEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_RED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.C_BLACK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.CLIP_OFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.CLIP_ON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAKER_GX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAKERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.RBFKERNEL_MULTIQUADRATIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.RBFKERNELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.RBFKERNEL_DISTANCE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.RBFKERNELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MULTIGRID3D_DIRECTGRID_DUMMYITEMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MULTIGRID3D_DIRECTGRID_ITEMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MULTIGRID3D_DIRECTGRID_MEAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MULTIGRID3D_DIRECTGRID_MAXIMUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MULTIGRID3D_DIRECTGRID_MINIMUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_TOTAL_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_Z_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_Y_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_X_GRADIENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_LAPLACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_SMOOTHING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FILTER3D_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.FILTER3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VECTOR_IMPORT_AID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VECTOR_IMPORT_UVW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.VECTOR_IMPORT_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GOCAD_ORIENTATIONS_INVERTED_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GOCAD_ORIENTATIONS_NORMAL_ZFIRST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GOCAD_ORIENTATIONS_INVERTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GOCAD_ORIENTATIONS_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DIRECTION3D_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DIRECTION3D_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DIRECTION3D_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DIRECTION3D_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DIRECTION3D_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DIRECTION3D_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_ClassType">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_Enum">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_Object">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_String">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_R8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_R4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_U8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_I8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_U4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_I4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_U2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_I2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_U1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_I1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_Bool">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_TYPE_Bytes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Enum_ClassType">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Enum_Bool">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Enums">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Types">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_ItemAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_AttributeAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_EnumAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_ObjectAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_TypeAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_ClassAttributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Attributes">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Predefined">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_CLASS_Base">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Attrib_FlatName">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Attrib_Editable">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Attrib_Visible">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_Enum_Value">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_sSerial_Func">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_hCreatS_Func">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_ObjectClass">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_MaxSize">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_MaxValue">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_MinValue">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_ByteOrder">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_FixedSize">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_ReferenceURL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Type_Description">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Class_Type">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Class_ReferenceURL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Class_Application">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.META_CORE_ATTRIB_Class_Description">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.H_META_INVALID_TOKEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.H_META_INVALID_TOKENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACE_CLIP_BOTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACE_CLIP_BELOW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SURFACE_CLIP_ABOVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_FACES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_VERTICES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_SURFACE_SIDES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_SINGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_VECTOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_THEMATIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ATTRIBUTE_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAPTEMPLATE_EXIST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAPTEMPLATE_WRITENEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_WRITEOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_WRITENEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_LIST_MODE_NOT3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_LIST_MODE_3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_LIST_MODE_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_TIFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_EPS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_PNG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_PCX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_GIF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_JPEGH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_JPEG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_JPEGL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_BMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_RASTER_FORMAT_EMF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_METHOD_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_METHOD_DIFFUSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_METHOD_STANDARD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_KMZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_ERM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_GEO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_ATIFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_MTIFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_GTIFF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_DXF13">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_DXF12">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_SHP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_FORMAT_PLT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_GREY1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_GREY4">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_GREY8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_24">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.MAP_EXPORT_BITS_32">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DUPMAP_COPY_PRE62">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DUPMAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DUPMAP_COPY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DUPMAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DUPMAP_BLANK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DUPMAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_TYPE_NOHEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_TYPE_HEADER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_DELIM_SPACECOMMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_DELIM_COMMA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_DELIM_SPACE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_CONLST_ANY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CONLSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_CONLST_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CONLSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_CASE_SENSITIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LTB_CASE_INSENSITIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LTB_CASEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LST_ITEM_VALUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LST_ITEMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LST_ITEM_NAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LST_ITEMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_MOVEB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_MOVET">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_MOVER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_MOVEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_VCENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_HCENTER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_HEIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_WIDTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_BOTTOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_TOP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_RIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.LAYOUT_CONSTR_LEFT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_MODEL_LOGLIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_MODEL_EQUAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_MODEL_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_MODEL_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_MODEL_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_MODEL_NOZONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_LOGLINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_SHADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_EQUALAREA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_ZONE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_POWER_EXP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_POWERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_POWER_10">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_NULLConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_POWERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_COLOR_MODEL_CMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_COLOR_MODEL_RGB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.ITR_COLOR_MODEL_HSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_MULTIPOINT_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_LOG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_MULTIPOINT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_QUAD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_TRANS3">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_TRANS2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_TRANS1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_WARP_MATRIX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_UNIT_FULLNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_UNIT_ABBREVIATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_UNITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_TEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_WRP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_ANY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_GCS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_PCS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_TYPE_PRJ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_UNITSDESCRIPTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_LOCALDATUMNAME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_LOCALDATUMDESCRIPTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_UNITS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_PROJECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_DATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_PARM_LST_COORDINATESYSTEM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_SECTION_CROOKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_3D_MATRIX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_DEPTH_SECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_SECTION_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_SECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_PLAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_ORIENT_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_ORIENTATION_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_METHOD_PARMS_NATIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_LDATUMDESCRIPTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_GEOID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_LDATUM_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_DATUM_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_METHOD_LABEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_METHOD_PARMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_LLDATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_TYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_UNIT_FULL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_UNIT_ABBR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_LDATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_ELLIPSOID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_DATUM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_METHOD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_PROJECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_NAME_PCS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_POINTLON_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_POINTLAT_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_POINTLON_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_POINTLAT_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_ANGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_AZIMUTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_PARALLEL_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_PARALLEL_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_LONORIGIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_LATORIGIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_FALSENORTH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_FALSEEAST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_CSP_SCALE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_ZYX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_ZXY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_YZX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_YXZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_XZY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_XYZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_ROTATE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_FLAG_ORDER_ROTATION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_FLAG_INVERTZ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_FLAG_INVERTANGLES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IPJ_3D_FLAG_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_XYZ_LABEL_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_XYZ_LABEL_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_XYZ_INDEX_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_XYZ_INDEX_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_WIND_CLIP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_WIND_DUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_WIND_GROUND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_WIND_GRID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_TREND_EDGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRENDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_TREND_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRENDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_TRANS_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_TRANS_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_TRANS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_STAT_FORCED_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_STAT_FORCED_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_MASK_OUTSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_MASK_INSIDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_MASKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FLOAT_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FLOAT_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FLOAT_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_HZDRV_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_HZDRV_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_HZDRV_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_FILE_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_FILE_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_DUMMY_YES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILT_DUMMY_NO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILL_ROLLOPT_SQUARE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_FILL_ROLLOPT_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_EXPAND_SHAPE_SQUARE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_EXPAND_SHAPE_RECTANGLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_DOUBLE_CRC_BITS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_DOUBLE_CRC_BITS_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_DOUBLE_CRC_BITS_EXACT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_SIZING_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_SIZING_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_SIZING_0">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_SIZING_MIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_OPT_XOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_OPT_OR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_OPT_AND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_OLAP_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_OLAP_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMU_BOOL_OLAP_AVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_RELOCATE_ASPECT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_RELOCATE_FIT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rCOMPRESSION_RATIO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rMULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rBASE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rROT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rDY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rDX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rYO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_rXO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iNE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iNV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iNY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iNX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iKX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iRENDER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iDATTYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iIMGTYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iWRITEPG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iPG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_QUERY_iWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_FILE_READORWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_FILE_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.IMG_FILE_READONLY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_NULLConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.IMG_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GRID3D_THEMATIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GRID3D_VECTOR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GRID3D_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_MINESIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_MICROMINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_GEMCOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_DATAMINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_SURPAC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_DGN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_ARCVIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_TYPE_MAPINFO">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_MAP2D_NSSECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_MAP2D_EWSECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_MAP2D_PLAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SECTION_ORIENTATION_GMSYS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SECTION_ORIENTATION_CROOKED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SECTION_ORIENTATION_SECTION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SECTION_ORIENTATION_PLAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SECTION_ORIENTATION_UNKNOWN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEOSTRING_OPEN_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEOSTRING_OPEN_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TIME_FORMAT_HMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TIME_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.TIME_FORMAT_COLON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.TIME_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_CRYPT_GLOBAL_ID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_CRYPT_COMPUTER_ID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.SYS_CRYPT_LICENSE_KEY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_TYPE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_MAXTYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_DOUBLE2D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_FLOAT2D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_DOUBLE3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_FLOAT3D">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_ULONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_LONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_ULONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_UBYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_FLOAT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_USHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_BYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_TYPESConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_GEOGRAPHIC_3">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_GEOGRAPHIC_2">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_GEOGRAPHIC_1">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_GEOGRAPHIC">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_DATE_MMDDYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_DATE_DDMMYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_DATE_YYYYMMDD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_TIME_HHMMSS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_TIME_HMS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_TIME_COLON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_EXP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_SIG_DIG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.FORMAT_DECIMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_REAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_VARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_INT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_VARConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_TRUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_BOOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_FALSE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_BOOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_MULTI_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_MAX_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_MULTI_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_MAX_PATH">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_GXF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_DB_SYMBOL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_MULTI_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_VIEW_GROUP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_GROUP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_VIEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_VERY_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_ERROR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_DEFAULT_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_DEFAULT_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.STR_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.rMAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.rMIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.iMAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.iMIN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R8EPSILON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R4EPSILON">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R8DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R8MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R8MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R4DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R4MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_R4MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U8DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U8MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U8MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S8DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S8MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S8MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U4DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U4MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U4MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S4DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S4MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S4MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U2DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U2MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_U2MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S2DM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S2MN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GS_S2MX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.rDUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.iDUMMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO_DUMMYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DATE_FORMAT_MMDDYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DATE_FORMAT_DDMMYYYY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DATE_FORMAT_YYYYMMDD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.CRC_INIT_VALUE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.CRC_INIT_VALUEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_TIF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_BMP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_PNG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_JPG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_ECW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_NATIVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_LOSSY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_SEMILOSSY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_LOSSLESS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DSEL_PICTURE_QUALITY_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.NULLSYMB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.NULLSYMBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_DISCRETE_TIME_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_VELOCITIES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_DEPTHS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_ELEVATIONS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_FREQUENCIES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_TIMES">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_TIME_WINDOWS">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ARRAY_BASETYPE_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_WAIT_INFINITY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_WAITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_WAIT_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_WAITConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_SYMB_NAME_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_NAME_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_SYMB_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_SYMB_CHAN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_SYMB_LINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_SYMB_BLOB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_OWN_USER">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_OWNConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_OWN_SHARED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_NULLConstant" />.</summary>
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_OWNConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_NAME_FILE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_NAMEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LOCK_READWRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LOCK_READONLY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LOCK_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LOCKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_RANDOM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_SPECIAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_TREND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_TEST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_TIE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_BASE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_TYPE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_SELECT_EXCLUDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_SELECT_INCLUDE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_LINK">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_DATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_FULL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_FLIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_TYPE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_VERSION">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_LINE_LABEL_FORMAT_LINE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_CHANGESLOST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_MAX_BLOCK_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_INDEX_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_FILE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_BLOB_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_COMP_LEVEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_FREE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_LOST_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_DATA_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_PAGE_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_USERS_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_CHANS_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_LINES_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_BLOBS_USED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_USERS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_CHANS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_LINES_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_INFO_BLOBS_MAX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_INFOConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_GROUP_CLASS_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_GROUP_CLASS_SIZEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_COORDPAIR_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_COORDPAIR_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_COORDPAIR_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_COMP_SIZE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COMPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_COMP_SPEED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COMPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_COMP_NONE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_COMPConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_Z">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_Y">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_X">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_PROTECTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_UNPROTECTED">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_HEX">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_SIGDIG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_GEOGR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_DATE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_TIME">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_EXP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CHAN_FORMAT_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_USER_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_USERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_LINE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_LINE_GROUP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_LINE_FLIGHT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_ULONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_LONG64">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_ULONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_UBYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_DOUBLE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_FLOAT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_LONG">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_SHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_USHORT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_CHAN_BYTE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_CATEGORY_BLOB_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_CATEGORY_BLOBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DB_ACTIVITY_BLOB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DB_ACTIVITY_BLOBConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_DMTYPE_POINTDATA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_DMTYPE_WIREFRAME_PT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_DMTYPE_BLOCKMODEL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_DMTYPE_DTM">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_DMTYPE_WIREFRAME_TR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GIS_DMTYPE_STRING">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_XGD_WRITE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_XGDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_XGD_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_XGDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_XGD_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_XGDConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_FILE_FORM_SAVE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_FILE_FORM_OPEN">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_FILE_IMAGE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.DAT_FILE_GRID">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.DAT_FILEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_SEEK_EOF">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_SEEKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_SEEK_CURRENT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_SEEKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_SEEK_START">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_SEEKConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_READWRITE_APP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_READWRITE_OLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_READWRITE_NEW">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_ENCODE_UTF8">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_ENCODE_ANSI">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_ENCODEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_DELETE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_CLOSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_KEEP">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_CLOSEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_BYTEORDER_MSB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.BF_BYTEORDER_LSB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_RENDER_FADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_RENDER_BLEND_ALL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_RENDER_BLEND">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_RENDER_ADD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_MODEL_CMY">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_MODEL_RGB">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_MODEL_HSV">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_MODELConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_LAST">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_LOGLINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_SHADE">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_EQUALAREA">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_NORMAL">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_LINEAR">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.AGG_LAYER_ZONE_DEFAULT">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO3DV_MVIEW_WRITEOLD">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant" />.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.Constant.GEO3DV_MVIEW_READ">
            <summary>See <see cref="T:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant" />.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.Constant">
            <summary>Global constants</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_OPENConstant.WA_APPEND">
            <summary>Append to existing file</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_OPENConstant.WA_NEW">
            <summary>Create new file</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.WA_OPENConstant">
            <summary>WA Open defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_ENCODEConstant.UTF16_NOHEADER">
            <summary>UTF16 w.o. header (will assume UTF16 encoding if &amp;lt;define&amp;gt;WA_APPEND&amp;lt;/define&amp;gt; is used)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_ENCODEConstant.UTF8_NOHEADER">
            <summary>&amp;lt;define&amp;gt;UTF8&amp;lt;/define&amp;gt; w.o. header (will assume &amp;lt;define&amp;gt;UTF8&amp;lt;/define&amp;gt; encoding if &amp;lt;define&amp;gt;WA_APPEND&amp;lt;/define&amp;gt; is used)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_ENCODEConstant.UTF8">
            <summary>&amp;lt;define&amp;gt;UTF8&amp;lt;/define&amp;gt; (If no exisiting BOM header found with &amp;lt;define&amp;gt;WA_APPEND&amp;lt;/define&amp;gt;, encoding will switch to &amp;lt;define&amp;gt;WA_ENCODE_ANSI&amp;lt;/define&amp;gt;)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_ENCODEConstant.RAW">
            <summary>Write all data without any conversion check</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.WA_ENCODEConstant.ANSI">
            <summary>
Current Ansi Code Page (Conversion from UTF-8 data, if an exisiting BOM header found with &amp;lt;define&amp;gt;WA_APPEND&amp;lt;/define&amp;gt;,
encoding will switch to &amp;lt;define&amp;gt;WA_ENCODE_UTF8&amp;lt;/define&amp;gt;)
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.WA_ENCODEConstant">
            <summary>WA Encode defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_WINDOWConstant.LIMIT">
            <summary>Set values outside the limits to the limits</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_WINDOWConstant.DUMMY">
            <summary>Dummy values outside the limits</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_WINDOWConstant">
            <summary>How to handle VV limits</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_SORTConstant.DESCENDING">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_SORTConstant.ASCENDING">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_SORTConstant">
            <summary>Sort order</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_ORDERConstant.DECREASING">
            <summary>Every value is less than or equal to the previous value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_ORDERConstant.INCREASING">
            <summary>Every value is greater than or equal to the previous value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_ORDERConstant.NONE">
            <summary>There is no specific data size ordering in the VV.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_ORDERConstant">
            <summary>Specify if the data is montonically increasing or decreasing.</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_MASKConstant.OUTSIDE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_MASKConstant.INSIDE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_MASKConstant">
            <summary>Where to mask</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOOKUPConstant.INTERPCLOSE">
            <summary>Interpolate only if within sampling range</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOOKUPConstant.NEARESTCLOSE">
            <summary>Use nearest match only if within sampling range</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOOKUPConstant.INTERPOLATE">
            <summary>Interpolate between values (regardless of sampling range)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOOKUPConstant.NEAREST">
            <summary>Nearest match is used (regardless of sampling range)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOOKUPConstant.EXACT">
            <summary>Only exact matches are used</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_LOOKUPConstant">
            <summary>Lookup style</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOGMODEConstant.LINEAR">
            <summary>Similar to Scaled but using a smoother function. Identical to LogLinear_VV.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOGMODEConstant.CLAMPED">
            <summary>Any values below the minimum are turned to the minimum.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOGMODEConstant.SCALED">
            <summary>
if the data is in the range +/- minimum,
it is left alone.  Otherwise, the data
is divided by the minimum, the log is
applied, the minimum is added and the
sign is reapplied. Use _LogLinear_VV function
if decades in results are required.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOGMODEConstant.CLIPPED">
            <summary>Dummies out value less than the minimum.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_LOGMODEConstant">
            <summary>Ways to handle negatives</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant.E">
            <summary>Base e</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant._10">
            <summary>Base 10</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_LOG_BASEConstant">
            <summary>Type of log to use</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant.MAX">
            <summary>Maximum number of inaccuracy bits</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant.DEFAULT">
            <summary>Default inaccuracy in floats (7 Bits)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant.EXACT">
            <summary>Exact CRC</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_FLOAT_CRC_BITSConstant">
            <summary>Number of bits to use in float CRC's</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant.MAX">
            <summary>Maximum number of inaccuracy bits</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant.DEFAULT">
            <summary>Default inaccuracy in double (10 Bits)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant.EXACT">
            <summary>Exact CRC</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VV_DOUBLE_CRC_BITSConstant">
            <summary>Number of bits to use in double CRC's</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant.BLOCK_MODEL_STRING_VARIABLE">
            <summary>Return string variable names</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant.BLOCK_MODEL_NUMERIC_VARIABLE">
            <summary>Return numeric variable names</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BLOCK_MODEL_VARIABLE_TYPEConstant">
            <summary>Which variables to return from sReadBlockModelVariableInfo</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOXE_EVALConstant.BEST">
            <summary>Best Interpolation</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOXE_EVALConstant.INTERP">
            <summary>Linear Interpolation</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOXE_EVALConstant.NEAR">
            <summary>Nearest value</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOXE_EVALConstant">
            <summary>Voxel Evaluation modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant.VOXELRENDER_EDGES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant.VOXELRENDER_FILL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant.VOXELRENDER_SMOOTH">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOXELRENDER_MODEConstant">
            <summary>Render Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant.VOX_VECTORVOX_AID">
            <summary>Amplitude, Inclination and Declination</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant.VOX_VECTORVOX_UVW">
            <summary>U, V and W</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant.VOX_VECTORVOX_XYZ">
            <summary>X, Y and Z</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_VECTORVOX_IMPORTConstant">
            <summary>Voxel direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant.NEAREST">
            <summary>Nearest</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant.LINEAR">
            <summary>Linear</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_SLICE_MODEConstant">
            <summary>Voxel export direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_ORIGINConstant.TOP">
            <summary>Top corner</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_ORIGINConstant.BOTTOM">
            <summary>Bottom corner (standard Geosoft)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_ORIGINConstant">
            <summary>Voxel origin</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant.LOGLINEAR_SAVELOG">
            <summary>Log-linear, save as log</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant.LOG_SAVELOG">
            <summary>Log, save as log</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant.LOGLINEAR_SAVELINEAR">
            <summary>Log-linear, save as linear</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant.LOG_SAVELINEAR">
            <summary>Log, save as linear</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant.LINEAR">
            <summary>Linear</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_GRID_LOGOPTConstant">
            <summary>Voxel log gridding options</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant.VOX_GOCAD_ORIENTATIONS_INVERTED_ZFIRST">
            <summary>Inverted (Z) (ZFirst)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant.VOX_GOCAD_ORIENTATIONS_NORMAL_ZFIRST">
            <summary>Normal (ZFirst)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant.VOX_GOCAD_ORIENTATIONS_INVERTED">
            <summary>Inverted (Z)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant.VOX_GOCAD_ORIENTATIONS_NORMAL">
            <summary>Normal</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_GOCAD_ORIENTATIONConstant">
            <summary>GOCAD Orientations</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.TOTAL_GRADIENT">
            <summary>Total-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.Z_GRADIENT">
            <summary>Z-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.Y_GRADIENT">
            <summary>Y-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.X_GRADIENT">
            <summary>X-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.LAPLACE">
            <summary>Laplace filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.SMOOTHING">
            <summary>Smoothing filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant.FILE">
            <summary>Specify a file containing the 27-point filter</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_FILTER3DConstant">
            <summary>Voxel filter type</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant.VOX_3D_DIR_ZYX">
            <summary>ZYX</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant.VOX_3D_DIR_ZXY">
            <summary>ZXY</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant.VOX_3D_DIR_YZX">
            <summary>YZX</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant.VOX_3D_DIR_XZY">
            <summary>XZY</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant.VOX_3D_DIR_YXZ">
            <summary>YXZ</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant.VOX_3D_DIR_XYZ">
            <summary>XYZ</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_DIRECTIONConstant">
            <summary>Voxel export direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRConstant.YZ">
            <summary>Y/Z Plane (Slowest)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRConstant.XZ">
            <summary>X/Z Plane (Middle)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VOX_DIRConstant.XY">
            <summary>X/Y Plane (Fastest)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VOX_DIRConstant">
            <summary>Voxel direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VA_OBJECTConstant.VA_COL">
            <summary>Column</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VA_OBJECTConstant.VA_ROW">
            <summary>Row</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VA_OBJECTConstant">
            <summary>VA Object to select</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VA_AVERAGEConstant.COLUMNS">
            <summary>Average the Columns</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VA_AVERAGEConstant.ROWS">
            <summary>Average the Rows</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VA_AVERAGEConstant">
            <summary>VA Object to average</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant.FGDC">
            <summary>FGDC Metadata Standard</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant.ISO">
            <summary>ISO 19139 standard</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant.DEFAULT">
            <summary>Use the standard type for the system</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.USERMETA_FORMATConstant">
            <summary>USERMETA Format Types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant.TPAT_SYMBFONT_SIZE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant.TPAT_DESC_SIZE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant.TPAT_LABEL_SIZE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant.TPAT_CODE_SIZE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TPAT_STRING_SIZEConstant">
            <summary>Default string sizes.</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TB_SORTConstant.ALLOW_DUPLICATES">
            <summary>Allow duplicates when sorting.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TB_SORTConstant.UNIQUE">
            <summary>Unique values only when sorting.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TB_SORTConstant">
            <summary>TB Sorting mode</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TB_SEARCHConstant.LINEAR">
            <summary>Linear searches up or down a table (Default).</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TB_SEARCHConstant.BINARY">
            <summary>Random searches in a table.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TB_SEARCHConstant">
            <summary>TB Searching mode</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_IDConstant.CLOSE">
            <summary>&amp;lt;define&amp;gt;TD_BUTTON_CLOSE&amp;lt;/define&amp;gt; pressed.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_IDConstant.NO">
            <summary>&amp;lt;define&amp;gt;TD_BUTTON_NO&amp;lt;/define&amp;gt; pressed.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_IDConstant.YES">
            <summary>&amp;lt;define&amp;gt;TD_BUTTON_YES&amp;lt;/define&amp;gt; pressed.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_IDConstant.RETRY">
            <summary>&amp;lt;define&amp;gt;TD_BUTTON_RETRY&amp;lt;/define&amp;gt; pressed.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_IDConstant.CANCEL">
            <summary>&amp;lt;define&amp;gt;TD_BUTTON_CANCEL&amp;lt;/define&amp;gt; pressed.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_IDConstant.OK">
            <summary>&amp;lt;define&amp;gt;TD_BUTTON_OK&amp;lt;/define&amp;gt; pressed.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TD_IDConstant">
            <summary>TaskDialog Common Button Return Values</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.CLOSE">
            <summary>Button results in &amp;lt;define&amp;gt;TD_ID_CLOSE&amp;lt;/define&amp;gt; return value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.RETRY">
            <summary>Button results in &amp;lt;define&amp;gt;TD_ID_RETRY&amp;lt;/define&amp;gt; return value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.CANCEL">
            <summary>Button results in &amp;lt;define&amp;gt;TD_ID_CANCEL&amp;lt;/define&amp;gt; return value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.NO">
            <summary>Button results in &amp;lt;define&amp;gt;TD_ID_NO&amp;lt;/define&amp;gt; return value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.YES">
            <summary>Button results in &amp;lt;define&amp;gt;TD_ID_YES&amp;lt;/define&amp;gt; return value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.OK">
            <summary>Button results in &amp;lt;define&amp;gt;TD_ID_OK&amp;lt;/define&amp;gt; return value.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_BUTTONConstant.NONE">
            <summary>No common buttons.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TD_BUTTONConstant">
            <summary>TaskDialog Common Buttons</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_ICONConstant.CONFIRMATION">
            <summary>A shield icon appears in the task dialog.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_ICONConstant.SUCCESS">
            <summary>A shield icon appears in the task dialog.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_ICONConstant.INFORMATION">
            <summary>An icon consisting of a lowercase letter i in a circle appears in the task dialog.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_ICONConstant.ERROR">
            <summary>A stop-sign icon appears in the task dialog.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_ICONConstant.WARNING">
            <summary>An exclamation-point icon appears in the task dialog.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TD_ICONConstant.NONE">
            <summary>No icon.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TD_ICONConstant">
            <summary>TaskDialog Icon</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant.GLOBAL_ID">
            <summary>
Encrypt string to current machine. The string can be decrypted by any
user on the same machine.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant.GEOSOFT_ID">
            <summary>
Encrypt string to currently signed-in user. The string can be decrypted
by the same user on any machine.
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_ENCRYPTION_KEYConstant">
            <summary>How to encrypt a string. Determines the portability of the encrypted string.</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant.FIND_SHORT">
            <summary>Make the name short (FLAG that is added on)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant.FIND_LOCAL">
            <summary>Local directory</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant.FIND_GEOSOFT">
            <summary>Geosoft directory</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant.FIND_LOCAL_GEOSOFT">
            <summary>Local and then Geosoft directory</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_SEARCH_PATHConstant">
            <summary>Find File define</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant.WAIT">
            <summary>Always wait</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant.NOWAIT">
            <summary>Never wait (default)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_RUN_WINConstant">
            <summary>
Windows Options
Should we wait for the application to
finish or should we continue executing. If you wait
for another program, Oasis montaj will not
redraw or respond. We always wait for EXE and DOS programs.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant.WINDOWS">
            <summary>Windows applications that do not require a console window.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant.EXE">
            <summary>Any program (.EXE) (a console window is created)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant.DOS">
            <summary>Things such as .BAT files, copy commands, etc. (A console window is created)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_RUN_TYPEConstant">
            <summary>Type of application to run</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant.ALWAYS">
            <summary>Always hold the screen</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant.ONERROR">
            <summary>Hold the screen if there is an error</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant.NEVER">
            <summary>Don't wait (Default)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_RUN_HOLDConstant">
            <summary>
DOS Console Options
These options determine if and when the DOS/EXE
console window is held. These options only work
on DOS and EXE programs.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant.FULLSCREEN">
            <summary>Full Screen</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant.MINIMIZE">
            <summary>Maximized</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant.WINDOW">
            <summary>In a window  (default)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_RUN_DISPLAYConstant">
            <summary>
Windows Display Options
Determine how applications are started.
These options are not yet implemented.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.USER_STYLESHEETS">
            <summary>User STYLESHEETS Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.USER_SERVICES">
            <summary>User SERVICES Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_TEMP">
            <summary>User TEMP Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_STACKS">
            <summary>User STACKS Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_OMN">
            <summary>User OMN Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_MAPTEMPLATE">
            <summary>User MAPTEMPLATE Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_LIC">
            <summary>User LIC Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_INI">
            <summary>User INI Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_HLP">
            <summary>User HLP Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_PYGX">
            <summary>User PYGX Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_GX">
            <summary>User GX Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_GS">
            <summary>User GS Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_ETC">
            <summary>User ETC Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER_CSV">
            <summary>User CSV Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_TBL">
            <summary>TBL folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_STYLESHEETS">
            <summary>STYLE SHEETS folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_SPEC_INI">
            <summary>SPEC INI older</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_SCHEMA">
            <summary>SCHEMA folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_PAGE">
            <summary>PAGE folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_OMN">
            <summary>OMN folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_MAPTEMPLATE">
            <summary>MAPTEMPLATE folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_INI">
            <summary>INI folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_IMG">
            <summary>IMG folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_HLP">
            <summary>HLP folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_GX">
            <summary>GX folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_PYGX">
            <summary>PYGX folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_GS">
            <summary>GS folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_GER">
            <summary>GER folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_FONTS">
            <summary>FONTS folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_ETC">
            <summary>ETC folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_ENCRYPTEDFILES">
            <summary>Encrypted Files folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_DBG">
            <summary>DBG folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_DATA">
            <summary>DATA folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_CSV_ALIASES">
            <summary>CSV ALIASES folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_CSV">
            <summary>CSV folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_BIN">
            <summary>BIN folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_BAR">
            <summary>BAR folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.RESOURCEFILES">
            <summary>User RESOURCEFILES Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.LICENSE">
            <summary>Where the license file is stored</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.SYSTEM">
            <summary>System folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.WINDOWS">
            <summary>Windows folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOTEMP">
            <summary>Geosoft Temp folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT_USER">
            <summary>
is the geosoft installation directory that
contains user read/write files.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.GEOSOFT">
            <summary>Is the geosoft installation directory (read-only)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_PATHConstant.LOCAL">
            <summary>Is the workspace working directory</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_PATHConstant">
            <summary>
Get specific Geosoft paths. The path name will
have a directory separator at the end.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant.DEFAULT">
            <summary>
Clear all menus excluding the coremenus.omn
but reload any default menus specified in the settings (essentially this is a refresh
back to the default state again).
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant.ALL">
            <summary>
Clear all menus excluding the coremenus.omn
but including any default menus specified in the settings (these will not come back in this project).
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_MENU_CLEARConstant">
            <summary>Font types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant.VOXEL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant.GRID">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant.MAPTEMPLATE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant.DB">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant.MXD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant.MAP">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_LINEAGE_SOURCEConstant">
            <summary>Type of lineage sources</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.TEST_REGISTRY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.OIS_REGISTRY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.REGISTRY_INTERAPP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.REGISTRY_SUPPORT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.REGISTRY_ENVIRONMENT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.REGISTRY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.LEGALCOPYRIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.SERVERNAME">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.PRODUCTNAME">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.VERSION_LABEL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.BUILD_LABEL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.BUILD_NUMBER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.VERSION_SP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.VERSION_MINOR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_INFOConstant.VERSION_MAJOR">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_INFOConstant">
            <summary>System information</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_FONTConstant.TT">
            <summary>Available TrueType fonts</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_FONTConstant.GFN">
            <summary>Geosoft GFN fonts.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_FONTConstant">
            <summary>Font types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_STYLESHEETS">
            <summary>User STYLESHEETS Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_SERVICES">
            <summary>User SERVICES Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_TEMP">
            <summary>User TEMP Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_STACKS">
            <summary>User STACKS Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_IMG">
            <summary>User IMG Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_BAR">
            <summary>User BAR Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_OMN">
            <summary>User OMN Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_MAPTEMPLATE">
            <summary>User MAPTEMPLATE Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_LIC">
            <summary>User LIC Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_INI">
            <summary>User INI Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_HLP">
            <summary>User HLP Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_GS">
            <summary>User GS Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_ETC">
            <summary>User ETC Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER_CSV">
            <summary>User CSV Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_TBL">
            <summary>TBL folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_STYLESHEETS">
            <summary>STYLE SHEETS folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_SPEC_INI">
            <summary>SPEC INI older</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_SCHEMA">
            <summary>SCHEMA folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_PAGE">
            <summary>PAGE folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_OMN">
            <summary>OMN folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_MAPTEMPLATE">
            <summary>MAPTEMPLATE folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_INI">
            <summary>INI folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_IMG">
            <summary>IMG folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_HLP">
            <summary>HLP folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_GX">
            <summary>GX folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_GS">
            <summary>GS folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_GER">
            <summary>GER folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_FONTS">
            <summary>FONTS folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_ETC">
            <summary>ETC folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_ENCRYPTEDFILES">
            <summary>Encrypted Files folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_DBG">
            <summary>DBG folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_DATA">
            <summary>DATA folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_CSV_ALIASES">
            <summary>CSV ALIASES folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_CSV">
            <summary>CSV folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_BIN">
            <summary>BIN folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT_BAR">
            <summary>BAR folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.RESOURCEFILES">
            <summary>User RESOURCEFILES Folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.LICENSE">
            <summary>Where the license file is stored</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.SYSTEM">
            <summary>Windows SYSTEM folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.WINDOWS">
            <summary>Windows folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOTEMP">
            <summary>Geosoft Temp folder</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.USER">
            <summary>
is the geosoft installation directory that
contains user read/write files.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.GEOSOFT">
            <summary>Is the geosoft installation directory (read-only)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_DIRConstant.LOCAL">
            <summary>Is the workspace working directory</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_DIRConstant">
            <summary>SYS Directory locations</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_FORCEMINIMIZE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWDEFAULT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_RESTORE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWNA">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWMINNOACTIVE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_MINIMIZE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOW">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWNOACTIVATE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWMAXIMIZED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWMINIMIZED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_SHOWNORMAL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant.SW_HIDE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SHELL_EXECUTEConstant">
            <summary>Shell execute defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.REG_DOMAINConstant.USER">
            <summary>Same as HKEY_CURRENT_USER in Windows</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.REG_DOMAINConstant.MACHINE">
            <summary>Same as HKEY_LOCAL_MACHINE in Windows</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.REG_DOMAINConstant">
            <summary>Registry key domains</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_GX">
            <summary>Geosoft\user\gx</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_PYGX">
            <summary>Geosoft\user\pygx</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.PYGX">
            <summary>Geosoft\pygx</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_MAPTEMPLATE">
            <summary>Geosoft\user\maptemplate</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.MAPTEMPLATE">
            <summary>Geosoft\maptemplate</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.BAR">
            <summary>Geosoft\bar</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.IMG">
            <summary>Geosoft\img</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_ETC">
            <summary>Geosoft\user\etc</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_TEMP">
            <summary>Geosoft\temp (or where the user put it)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_INI">
            <summary>Geosoft\user\ini</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_LIC">
            <summary>Geosoft\user\lic</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.USER_CSV">
            <summary>Geosoft\user\csv</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.HLP">
            <summary>Geosoft\hlp</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.ETC">
            <summary>Geosoft\user\etc and then Geosoft\etc</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.APPS">
            <summary>Geosoft\apps</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.GS">
            <summary>Geosoft\gs</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.GX">
            <summary>Geosoft\gx</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.FONTS">
            <summary>Geosoft\fonts</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.TBL">
            <summary>Geosoft\tbl</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.OMN">
            <summary>Geosoft\omn</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.GER">
            <summary>Geosoft\ger</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.BIN">
            <summary>Geosoft\bin</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.GEOSOFT">
            <summary>Geosoft\</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant.NONE">
            <summary>None</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_DIRECTORYConstant">
            <summary>Geosoft directory defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARC_LICENSEConstant.ARCSERVER">
            <summary>ArcServer</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARC_LICENSEConstant.ARCINFO">
            <summary>ArcInfo</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARC_LICENSEConstant.ARCEDITOR">
            <summary>ArcEditor</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARC_LICENSEConstant.ARCVIEW">
            <summary>ArcView</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARC_LICENSEConstant.DESKTOPENGINE">
            <summary>Desktop Engine</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARC_LICENSEConstant.ENGINENOTPRESENT">
            <summary>The Engine or any qualifying ArcGIS product is missing</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ARC_LICENSEConstant">
            <summary>ArcGIS platform types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant.SURFACERENDER_EDGES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant.SURFACERENDER_FILL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant.SURFACERENDER_SMOOTH">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SURFACERENDER_MODEConstant">
            <summary>Open Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACE_OPENConstant.READWRITE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACE_OPENConstant.READ">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SURFACE_OPENConstant">
            <summary>Open Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_TRIMConstant.STR_TRIMBOTH">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_TRIMConstant.STR_TRIMLEFT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_TRIMConstant.STR_TRIMRIGHT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.STR_TRIMConstant">
            <summary>What to trim</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant.RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant.CENTER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant.LEFT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.STR_JUSTIFYConstant">
            <summary>String justification style</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.FULLPATH_NO_QUALIFIERS">
            <summary>Full name of file with no qualifiers</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.NAME_EXTENSION">
            <summary>Name and the Extension together</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.QUALIFIERS">
            <summary>Qualifiers</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.VOLUME">
            <summary>Drive</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.DIRECTORY">
            <summary>Directory</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.EXTENSION">
            <summary>Extension</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant.NAME">
            <summary>File Name</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.STR_FILE_PARTConstant">
            <summary>Parts of a path string</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_ESCAPEConstant.ESCAPE_REPLACE">
            <summary>Replaces escape sequences with original characters.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_ESCAPEConstant.ESCAPE_CONVERT">
            <summary>Converts non-standard characters in a string to escape sequences.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.STR_ESCAPEConstant">
            <summary>How to handle escape</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_CASEConstant.SENSITIVE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.STR_CASEConstant.TOLERANT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.STR_CASEConstant">
            <summary>Case sensitivity</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILE_EXTConstant.FORCE">
            <summary>Will cause a renaming of the file extension to the new extension.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILE_EXTConstant.ADD_IF_NONE">
            <summary>Will add the extension only if no extension is present.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.FILE_EXTConstant">
            <summary>Extension option</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant.ST2_PCORR">
            <summary>Pearson's correlation (normalized to standard deviations)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant.ST2_CORR">
            <summary>Simple correlation</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ST2_CORRELATIONConstant">
            <summary>Correlation style</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_HIST_MAXCOUNT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_MINPOS">
            <summary>Smallest value greater than zero.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_SUM4">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_SUM3">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_SUM2">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_SUM">
            <summary>Sums and sums of powers</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_BASE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_KURTOSIS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_SKEW">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_STDERR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_STDDEV">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_VARIANCE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_GEOMEAN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_MODE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_MEDIAN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_MEAN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_RANGE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_MAX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_MIN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_DUMMIES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_NZERO">
            <summary>Number of items equal to zero</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_NPOS">
            <summary>Number of items greater than zero</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ST_INFOConstant.ST_ITEMS">
            <summary>Number of non-dummy items</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ST_INFOConstant">
            <summary>Information to retrieve</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SBF_TYPEConstant.BOTH">
            <summary>Embedded file and directory names</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SBF_TYPEConstant.FILES">
            <summary>Embedded file names</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SBF_TYPEConstant.DIRS">
            <summary>Embedded directory names</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SBF_TYPEConstant">
            <summary>SBF Object type defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SBF_OPENConstant.SBF_READWRITE_OLD">
            <summary>Read/write - open and append onto pre-existing structured file</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SBF_OPENConstant.SBF_READWRITE_NEW">
            <summary>Read/write - erases structured file</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SBF_OPENConstant.SBF_READ">
            <summary>Read only</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SBF_OPENConstant">
            <summary>SBF Open defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.REG_MERGEConstant.ADD">
            <summary>Only append values</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.REG_MERGEConstant.REPLACE">
            <summary>Replace Values</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.REG_MERGEConstant">
            <summary>REG merge options</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant.ERROR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant.OUTSIDE">
            <summary>The start point of the line is outside</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant.NO_INTERSECT">
            <summary>This name is a misnomer - it should have been &amp;lt;define&amp;gt;PLY_LINE_CLIP_INSIDE&amp;lt;/define&amp;gt;, but is retained to support legacy code</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant.INSIDE">
            <summary>The start point of the line is inside</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.PLY_LINE_CLIPConstant">
            <summary>Polygon line clip indicator</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_CLIPConstant.B_IN_A">
            <summary>Polygon B is completly inside polygon A</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_CLIPConstant.A_IN_B">
            <summary>Polygon A is completly inside polygon B</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_CLIPConstant.INTERSECT">
            <summary>The polygons do intersect</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PLY_CLIPConstant.NO_INTERSECT">
            <summary>The polygons do not intersect</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.PLY_CLIPConstant">
            <summary>Polygon clipping mode</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PJ_RECTConstant.LL2XY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PJ_RECTConstant.XY2LL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.PJ_RECTConstant">
            <summary>Conversion direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant.GEOID">
            <summary>
elevation transformation uses a geoid model
and is as accurate as the geoid data.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant.GEOCENTRIC">
            <summary>
elevation transformation uses earth-centre shift
and is not accurate.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant.NONE">
            <summary>Elevation transform not supported.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.PJ_ELEVATIONConstant">
            <summary>Elevation correction method</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_BF_CONVConstant.SWAP">
            <summary>The data needs to be byte swapped</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_BF_CONVConstant.NONE">
            <summary>The Data is in Raw form</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.PG_BF_CONVConstant">
            <summary>Pager binary conversions</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_3D_DIRConstant.ZYX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_3D_DIRConstant.ZXY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_3D_DIRConstant.YZX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_3D_DIRConstant.XZY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_3D_DIRConstant.YXZ">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.PG_3D_DIRConstant.XYZ">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.PG_3D_DIRConstant">
            <summary>3D Pager direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant.TRIANGLE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant.BARB">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant.LINES">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_VSTYLEConstant">
            <summary>Head Style</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSIZEConstant.NOTAIL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSIZEConstant.LARGEHEAD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSIZEConstant.MEDIUMHEAD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSIZEConstant.SMALLHEAD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VSIZEConstant.NOHEAD">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_VSIZEConstant">
            <summary>Head Size</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VPOSConstant.TAIL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VPOSConstant.MIDDLE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VPOSConstant.HEAD">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_VPOSConstant">
            <summary>Head Position</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VPOINTConstant.BLUNT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VPOINTConstant.MEDIUM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VPOINTConstant.SHARP">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_VPOINTConstant">
            <summary>Head Acuteness</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant.RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant.CENTER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant.LEFT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_TEXTBOXConstant">
            <summary>Type of Box</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant.CLOSED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant.OPEN">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_OPTIONConstant">
            <summary>TODO</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_METHODConstant.MARCHING_CUBES">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_VOX_SURFACE_METHODConstant">
            <summary>TODO</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant.MVU_FLIGHT_DIRECTION">
            <summary>
To add '&gt;' to label to indicate direction, for example:
&amp;lt;define&amp;gt;MVU_FLIGHT_LOCATE_END&amp;lt;/define&amp;gt;+&amp;lt;define&amp;gt;MVU_FLIGHT_DIRECTION&amp;lt;/define&amp;gt;
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant.BELOW">
            <summary>
::

   ----------------------------------------
   L100.2                            L100.2

dOffA controls label distance below the line.
dOffB controls offset in from line end.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant.ABOVE">
            <summary>
::

   L100.2                            L100.2
   ----------------------------------------

dOffA controls label distance above the line.
dOffB controls offset in from line end.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant.END">
            <summary>
::

   L100.2 -------------------------- L100.2

dOffA controls distance from label to line.
dOffB controls vertical offset from center.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant.NONE">
            <summary>No label</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_LOCATEConstant">
            <summary>Line label locations</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant.INCLUDED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant.NOTINCLUDED">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_DUMMIESConstant">
            <summary>Show Dummies</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant.SOUTH">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant.WEST">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant.NORTH">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant.EAST">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant.NONE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_FLIGHT_COMPASSConstant">
            <summary>Compass direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_ARROWConstant.FIXED">
            <summary>
If used, input the actual length of the barbs on the arrow, in
view X-axis units, as measured along the tail. If not used, enter the ratio
between the length of the barbs and full length of the arrow (e.g. 0.4).
In the latter case, the longer the arrow, the bigger the arrow head.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_ARROWConstant.SOLID">
            <summary>
Plot the head as a solid triangle, otherwise plot a "stick arrow"
with three lines for the tail and two barbs.
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_ARROWConstant">
            <summary>
Type Arrow. These definitions are used as binary flags, and can be
used together by passing sums.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant.TICS">
            <summary>Inside tics, both sides</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant.LINES">
            <summary>Division line</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant.NONE">
            <summary>No division marks</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_DIVISION_STYLEConstant">
            <summary>Orientation (of whatever)</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant.HORIZONTAL">
            <summary>Horizontal</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant.VERTICAL">
            <summary>Vertical</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVU_ORIENTATIONConstant">
            <summary>Orientation (of whatever)</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant.MAXMIN">
            <summary>Post max/min values</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant.NONE">
            <summary>Don't draw</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.COLORBAR_STYLEConstant">
            <summary>Label text orientation</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant.VERTICAL">
            <summary>Gives text an orientation of -90 degrees</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant.HORIZONTAL">
            <summary>(default)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.COLORBAR_LABELConstant">
            <summary>Label text orientation</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.ALTERNAT2">
            <summary>Label at alternative ends,1st label at negative end</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.ALTERNAT1">
            <summary>Label at alternative ends,1st label at positive end</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.NEND">
            <summary>Label at negative end of bar</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.PEND">
            <summary>Label at positive end of bar</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.ABOVEX">
            <summary>Label above X axis</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.BELOWX">
            <summary>Label below X axis</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BARCHART_LABELConstant.NO">
            <summary>No label</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BARCHART_LABELConstant">
            <summary>Place to draw bar labels</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant.VERTICAL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant.HORIZONTAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ARROW_ALIGNMENTConstant">
            <summary>Direction of alignment</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant.EMLAY_V_COAXIAL">
            <summary>2</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant.EMLAY_H_COPLANAR">
            <summary>1</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant.EMLAY_V_COPLANAR">
            <summary>0</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.EMLAY_GEOMETRYConstant">
            <summary>Type of Geometry</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant.MVIEW_3D_DONT_SCALE_GEOMETRY">
            <summary>
If the exaggeration scales of the 3D view in X, Y and/or Z is set to anything other than 1.0
any geometric objects (spheres, cubes etc.) for 3D groups with the following flags 
will render untransformed while only the centers of the objects are changed.
This ensures the objects appear in the correct place with respect to other data being rendered (and scaled).
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant.BACKFACES">
            <summary>This flag is enabled if the backfaces of geometry should be rendered</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_3D_RENDERConstant">
            <summary>
3D Geometry rendering defines. These flags only affect mixed geometry groups and not the data
specific groups (e.g. voxels, vector voxels surfaces etc.). Each of those groups 
has predefined optimum behaviour and any changes to these flags are ignored.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.TOP_RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.TOP_CENTER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.TOP_LEFT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.MIDDLE_RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.MIDDLE_CENTER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.MIDDLE_LEFT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.BOTTOM_RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.BOTTOM_CENTER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TEXT_REFConstant.BOTTOM_LEFT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TEXT_REFConstant">
            <summary>Text reference locations</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant.VIEW_UNWARPED">
            <summary>&amp;lt;define&amp;gt;MVIEW_UNIT_VIEW_UNWARPED&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant.MM">
            <summary>&amp;lt;define&amp;gt;MVIEW_UNIT_MM&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant.PLOT">
            <summary>&amp;lt;define&amp;gt;MVIEW_UNIT_PLOT&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant.VIEW">
            <summary>&amp;lt;define&amp;gt;MVIEW_UNIT_VIEW&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_EXTENT_UNITConstant">
            <summary>
Types of units for extents (these map to the
&amp;lt;define&amp;gt;MVIEW_UNIT&amp;lt;/define&amp;gt; defines directly)
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_UNITConstant.VIEW_UNWARPED">
            <summary>View coordinates without a warp if there is one</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_UNITConstant.MM">
            <summary>Plot mm on the map.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_UNITConstant.PLOT">
            <summary>Plot hi-metric (mm*100) on the map.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_UNITConstant.VIEW">
            <summary>View coordinates</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_UNITConstant">
            <summary>Coordinate systems defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_TILEConstant.RANDOM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_TILEConstant.TRIANGULAR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_TILEConstant.DIAGONAL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_TILEConstant.RECTANGULAR">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_TILEConstant">
            <summary>Tiling defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant.AKIMA">
            <summary>Akima</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant.CUBIC">
            <summary>Cubic Spline</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant.NEAREST">
            <summary>Nearest neighbour</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_SMOOTHConstant">
            <summary>Interpolation method to use for drawing line and polygon edges</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant.ASPECT_CENTER">
            <summary>Will maintain aspect ratio and center in specified area</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant.ASPECT">
            <summary>Will maintain aspect ratio</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant.FIT">
            <summary>Will fit the image to fill the specified area</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_RELOCATEConstant">
            <summary>Relocation Defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_PJConstant.ON">
            <summary>Mode before the last &amp;lt;define&amp;gt;MVIEW_PJ_OFF&amp;lt;/define&amp;gt;.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_PJConstant.ALL">
            <summary>
Locations and attributes (sizes, thicknesses, angles)
will be transformed to the view coordinate system.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_PJConstant.LOCATION">
            <summary>
Only locations will be transformed to the view
coordinate system.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_PJConstant.OFF">
            <summary>
No reprojection is used and all locations and
attributes are assumed to be in the view coordinate
system.
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_PJConstant">
            <summary>Projection modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_OPENConstant.MVIEW_WRITEOLD">
            <summary>Open existing MVIEW for read/write (must exist)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_OPENConstant.MVIEW_WRITENEW">
            <summary>Create new MVIEW - destroys any existing MVIEW</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_OPENConstant.MVIEW_READ">
            <summary>Read Only - No changes</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_OPENConstant">
            <summary>Open MVIEW define</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_NAME_LENGTHConstant.MVIEW_NAME_LENGTH">
            <summary>Maximum Length (1040)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_NAME_LENGTHConstant">
            <summary>Maximum length for view and group names</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant.TOP_LEFT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant.TOP_RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant.HORIZONTAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_ORIENTConstant">
            <summary>Label Orientation Defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant.RIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant.LEFT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant.BOTTOM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant.TOP">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_JUSTConstant">
            <summary>Label Justification Defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant.YES">
            <summary>Label Bound</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant.NO">
            <summary>Label Not Bound</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_LABEL_BOUNDConstant">
            <summary>Label Binding Defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.VECTOR3D">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.SHADOW_2D_INTERPRETATION">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.VOXD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.META">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.CLIPPED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.HIDDEN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.MADE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.LINKED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.CSYMB">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.MOVABLE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_ISConstant.AGG">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_ISConstant">
            <summary>Defines for mview types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant.HIDE_OFF">
            <summary>Turn OFF hidding</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant.HIDE_ON">
            <summary>Turn ON hidding</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_HIDEConstant">
            <summary>Boolean hidding defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant.VISIBLE">
            <summary>Those groups checked as visible in the view/group manager.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant.MARKED">
            <summary>Those groups marked using the various mark functions.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant.ALL">
            <summary>All the groups.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_GROUP_LISTConstant">
            <summary>What groups to list</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant.APPEND">
            <summary>Append to an existing Group</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant.NEW">
            <summary>New Group (destroy any existing group)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_GROUPConstant">
            <summary>Open Group defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant.CROSS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant.LINE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant.DOT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_GRIDConstant">
            <summary>Grid Drawing defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.XXBOLD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.XBOLD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.BOLD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.MEDIUM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.LIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.ULTRALIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant.NORMAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_FONT_WEIGHTConstant">
            <summary>Font weight defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FITConstant.VIEW">
            <summary>Fit it to the view area</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_FITConstant.MAP">
            <summary>Fit it to the map area</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_FITConstant">
            <summary>Fit area defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant.VISIBLE">
            <summary>Visible objects</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant.MAP">
            <summary>Map extents</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant.CLIP">
            <summary>Clipping regions</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant.ALL">
            <summary>All objects</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_EXTENTConstant">
            <summary>Types of extents defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant.SMOOTH">
            <summary>Draw smooth shaded faces (one normal and color per vertex)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant.FLAT">
            <summary>Draw flat shaded faces (one normal and color per object)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_MODEConstant">
            <summary>What types of entities to draw</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.POLYGONS">
            <summary>Draw 3D Quad Polygones (Must be in the same plane, must be convex and cannot intersect itself)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.QUADS_STRIPS">
            <summary>Draw 3D Quad Strips (Must be in the same plane) [4+2x verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.QUADS">
            <summary>Draw 3D Quads (Must be in the same plane) [4 verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.TRIANGLE_FANS">
            <summary>Draw 3D Triangle fans [3+x verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.TRIANGLE_STRIPS">
            <summary>Draw 3D Triangle strips [3+x verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.TRIANGLES">
            <summary>Draw 3D Triangles [3 verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.LINE_LOOPS">
            <summary>Draw 3D Line loop (no normals, closes loop with first point) [2+x verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.LINE_STRIPS">
            <summary>Draw 3D Line strip (no normals) [2+x verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.LINES">
            <summary>Draw 3D Lines (no normals) [2 verticies per object]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant.POINTS">
            <summary>Draw 3D Points (no normals) [1 verticies per object]</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_DRAWOBJ3D_ENTITYConstant">
            <summary>What types of entities to draw</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant.POLYGON">
            <summary>Draw Polygons</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant.POLYLINE">
            <summary>Draw Polylines</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_DRAWConstant">
            <summary>Polygon drawing defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant.CLOSEALL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant.CLOSEEND">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant.CLOSESTART">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant.OPEN">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_CYLINDER3DConstant">
            <summary>What parts of the cylinder are closed</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_TRANSPARENT">
            <summary>Transparent or no-draw</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_WHITE">
            <summary>White</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_GREY50">
            <summary>Grey 50%</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_GREY25">
            <summary>Grey 25%</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_GREY10">
            <summary>Grey 10%</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_GREY">
            <summary>Light Grey</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_YELLOW">
            <summary>Light Yellow</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_MAGENTA">
            <summary>Light Magenta</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_CYAN">
            <summary>Light Cyan</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_BLUE">
            <summary>Light Blue</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_GREEN">
            <summary>Light Green</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_LT_RED">
            <summary>Light Red</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_GREY">
            <summary>Grey</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_YELLOW">
            <summary>Yellow</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_MAGENTA">
            <summary>Magenta</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_CYAN">
            <summary>Cyan</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_BLUE">
            <summary>Blue</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_GREEN">
            <summary>Green</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_RED">
            <summary>Red</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_COLORConstant.C_BLACK">
            <summary>Black</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_COLORConstant">
            <summary>
24-bit color defines
The iColor_MVIEW function can be used to create a color int from a
color string description.
The iColorXXX_MVIEW macros can be used to create colors from component
intensities.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant.CLIP_OFF">
            <summary>Turn OFF clipping</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant.CLIP_ON">
            <summary>Turn ON clipping</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MVIEW_CLIPConstant">
            <summary>Boolean clipping defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAKERConstant.GX">
            <summary>GX</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAKERConstant">
            <summary>Maker defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.RBFKERNELConstant.MULTIQUADRATIC">
            <summary>Multiquadratic</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.RBFKERNELConstant.DISTANCE">
            <summary>Distance</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.RBFKERNELConstant">
            <summary>Math kernel to use in the RBF Computation</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant.MULTIGRID3D_DIRECTGRID_DUMMYITEMS">
            <summary>The number of valid (non-dummy) items found in each cell - DUMMY if no items found</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant.MULTIGRID3D_DIRECTGRID_ITEMS">
            <summary>The number of valid (non-dummy) items found in each cell - 0 if no items found</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant.MULTIGRID3D_DIRECTGRID_MEAN">
            <summary>Select the mean of all values found in each cell</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant.MULTIGRID3D_DIRECTGRID_MAXIMUM">
            <summary>Select the maximum value found in each cell</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant.MULTIGRID3D_DIRECTGRID_MINIMUM">
            <summary>Select the minimum value found in each cell</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MULTIGRID3D_DIRECTGRID_METHODConstant">
            <summary>How to calculate the cell values for direct gridding.</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.TOTAL_GRADIENT">
            <summary>Total-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.Z_GRADIENT">
            <summary>Z-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.Y_GRADIENT">
            <summary>Y-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.X_GRADIENT">
            <summary>X-Gradient filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.LAPLACE">
            <summary>Laplace filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.SMOOTHING">
            <summary>Smoothing filter</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.FILTER3DConstant.FILE">
            <summary>Specify a file containing the 27-point filter</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.FILTER3DConstant">
            <summary>Voxel filter type</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant.AID">
            <summary>Amplitude, Inclination and Declination</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant.UVW">
            <summary>U, V and W</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant.XYZ">
            <summary>X, Y and Z</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.VECTOR_IMPORTConstant">
            <summary>Vector grid3d import direction</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant.GOCAD_ORIENTATIONS_INVERTED_ZFIRST">
            <summary>Inverted (Z) (ZFirst)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant.GOCAD_ORIENTATIONS_NORMAL_ZFIRST">
            <summary>Normal (ZFirst)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant.GOCAD_ORIENTATIONS_INVERTED">
            <summary>Inverted (Z)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant.GOCAD_ORIENTATIONS_NORMAL">
            <summary>Normal</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GOCAD_ORIENTATIONConstant">
            <summary>GOCAD Orientations</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DIRECTION3DConstant.ZYX">
            <summary>ZYX</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DIRECTION3DConstant.ZXY">
            <summary>ZXY</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DIRECTION3DConstant.YZX">
            <summary>YZX</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DIRECTION3DConstant.XZY">
            <summary>XZY</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DIRECTION3DConstant.YXZ">
            <summary>YXZ</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DIRECTION3DConstant.XYZ">
            <summary>XYZ</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DIRECTION3DConstant">
            <summary>Direction in 3D</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.ClassType">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.Enum">
            <summary>Enumeration</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.Object">
            <summary>Predefined Object (ITR,IPJ)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.String">
            <summary>String</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.R8">
            <summary>Double (64bit)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.R4">
            <summary>Float (32bit)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.U8">
            <summary>Unsigned long long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.I8">
            <summary>Singed long long (64 bit int)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.U4">
            <summary>Unsigned long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.I4">
            <summary>Signed long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.U2">
            <summary>Unsigned short</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.I2">
            <summary>Signed short</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.U1">
            <summary>Unsigned character</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.I1">
            <summary>Signed character</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.Bool">
            <summary>Boolean</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant.Bytes">
            <summary>Data Bytes (Base type)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.META_CORE_TYPEConstant">
            <summary>META Core Data Types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Enum_ClassType">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Enum_Bool">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Enums">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Types">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.ItemAttributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.AttributeAttributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.EnumAttributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.ObjectAttributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.TypeAttributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.ClassAttributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Attributes">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Predefined">
            <summary>All Predefined symbols are in this class</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant.Base">
            <summary>All Classes are subordinate to this class</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.META_CORE_CLASSConstant">
            <summary>Meta Core Class Objects</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Attrib_FlatName">
            <summary>The flat name of this attribute</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Attrib_Editable">
            <summary>Is this atttribute editable by the user</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Attrib_Visible">
            <summary>Is this attribute visible to the user</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_Enum_Value">
            <summary>Enumeration Value</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_sSerial_Func">
            <summary>Object serializationg function</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_hCreatS_Func">
            <summary>Object creating function</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_ObjectClass">
            <summary>Object class that manages this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_MaxSize">
            <summary>Maximum Size in bytes for this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_MaxValue">
            <summary>Maximum Value for this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_MinValue">
            <summary>Minimum Value for this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_ByteOrder">
            <summary>Byte order for this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_FixedSize">
            <summary>Fixed size of this type (in bytes)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_ReferenceURL">
            <summary>URL that defines this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Type_Description">
            <summary>Description of this type</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Class_Type">
            <summary>Type of Class</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Class_ReferenceURL">
            <summary>URL that defines this class</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Class_Application">
            <summary>Application that created this class</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant.Class_Description">
            <summary>Description of this class</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.META_CORE_ATTRIBConstant">
            <summary>META Core Attributes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.H_META_INVALID_TOKENConstant.H_META_INVALID_TOKEN">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.H_META_INVALID_TOKENConstant">
            <summary>META Invalid Token</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant.SURFACE_CLIP_BOTH">
            <summary>Output the surface items both above &amp; below the clipper surface</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant.SURFACE_CLIP_BELOW">
            <summary>Output the surface item below clipper surface</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant.SURFACE_CLIP_ABOVE">
            <summary>Output the surface item above clipper surface</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SURFACE_CLIP_MODEConstant">
            <summary>Surface Clip Mode</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant.ATTRIBUTE_FACES">
            <summary>Faces Attribute</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant.ATTRIBUTE_VERTICES">
            <summary>Vertices Attribute</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant.ATTRIBUTE_SURFACE_SIDES">
            <summary>Surface Sides Attribute</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant.ATTRIBUTE_SINGLE">
            <summary>Single Value Attribute</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ATTRIBUTE_TYPEConstant">
            <summary>Data Type of Attribute</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant.ATTRIBUTE_VECTOR">
            <summary>VECTOR</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant.ATTRIBUTE_THEMATIC">
            <summary>THEMATIC</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant.ATTRIBUTE_DOUBLE">
            <summary>DOUBLE</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ATTRIBUTE_DATA_TYPEConstant">
            <summary>Data Type of Attribute</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant.MAPTEMPLATE_EXIST">
            <summary>Create from existing template on disk</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant.MAPTEMPLATE_WRITENEW">
            <summary>Create new empty map template (will overwrite existing files)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAPTEMPLATE_OPENConstant">
            <summary>Open Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_OPENConstant.MAP_WRITEOLD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_OPENConstant.MAP_WRITENEW">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAP_OPENConstant">
            <summary>Open Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant.NOT3D">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant._3D">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant.ALL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAP_LIST_MODEConstant">
            <summary>Map List modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.TIFF">
            <summary>"TIFF"  TIFF (*.tif)                     Color Image     X    X    X    X    X    X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.EPS">
            <summary>"EPS"   Encasulated PostScript (*.eps)   Color Image                    X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.PNG">
            <summary>"PNG"   PNG (*.png)                      Color Image     X    X    X    X    X    X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.PCX">
            <summary>"PCX"   PCX (*.pcx)                      Color Image     X    X    X    X    X    X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.GIF">
            <summary>"GIF"   GIF (*.gif)                      Color Image     X    X    X    X    X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.JPEGH">
            <summary>"JPEGH" JPEG High Quality (*.jpg)        Color Image                              X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.JPEG">
            <summary>"JPEG" JPEG (*.jpg)                     Color Image                              X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.JPEGL">
            <summary>"JPEGL" JPEG Low Quality (*.jpg)         Color Image                              X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.BMP">
            <summary>"BMP"   Bitmap (*.bmp)                   Color Image     X    X    X    X    X    X</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant.EMF">
            <summary>"EMF"   Enhanced Metafile (*.emf)        Plot</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAP_EXPORT_RASTER_FORMATConstant">
            <summary>
Export Raster Formats
.
Format  Description                      Type           B/W  B/W  COL  B/W  COL  COL
======= ==========================       ===========    ===  ===  ===  ===  ===  ===
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant.NONE">
            <summary>No Dither</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant.DIFFUSE">
            <summary>Error Diffusion Dither</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant.STANDARD">
            <summary>Standard Dither</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAP_EXPORT_METHODConstant">
            <summary>Dithering Methods</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.KMZ">
            <summary>"KMZ"    Keyhole Markup (*.kmz)       Zipped XML/Image files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.ERM">
            <summary>"ERM"    ER Mapper RGB (*.ers)        Color Image</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.GEO">
            <summary>"GEO"    Geosoft COLOR grid (*.grd)   Color Image</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.ATIFF">
            <summary>"ATIFF"  ArcView TIFF (*.tif)         Color Image</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.MTIFF">
            <summary>"MTIFF"  MapInfo TIFF (*.tif)         Color Image</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.GTIFF">
            <summary>"GTIFF"  GeoTIFF (*.tif),             Color Image</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.DXF13">
            <summary>"DXF13"  AutoCad13 (*.dxf)            Plot</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.DXF12">
            <summary>"DXF12"  AutoCad12 (*.dxf)            Plot</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.SHP">
            <summary>"SHP"    ArcView Shapfile (*.shp)     Plot</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant.PLT">
            <summary>"PLT"    Geosoft Plot (*.plt)         Plot</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAP_EXPORT_FORMATConstant">
            <summary>
Export Formats
Format   Description                  Type
=======  ==========================   ====
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant.DEFAULT">
            <summary>Default Resolution</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant.GREY1">
            <summary>1 Bit Gray Scale</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant._4">
            <summary>4 Bit Color</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant.GREY4">
            <summary>4 Bit Gray Scale</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant._8">
            <summary>8 Bit Color</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant.GREY8">
            <summary>8 Bit Gray Scale</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant._24">
            <summary>24 Bit Color</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant._32">
            <summary>32 Bit Color (8-bit alpha)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.MAP_EXPORT_BITSConstant">
            <summary>Color Types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DUPMAPConstant.COPY_PRE62">
            <summary>Copy all current contents and save text for pre-6.2 versions.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DUPMAPConstant.COPY">
            <summary>Copy all current contents</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DUPMAPConstant.BLANK">
            <summary>Blank</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DUPMAPConstant">
            <summary>Duplicate Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_TYPEConstant.NOHEADER">
            <summary>Has no header</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_TYPEConstant.HEADER">
            <summary>Has a header</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.LTB_TYPEConstant">
            <summary>Types of LTB Headers</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_DELIMConstant.SPACECOMMA">
            <summary>Spaces and Commas</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_DELIMConstant.COMMA">
            <summary>Commas</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_DELIMConstant.SPACE">
            <summary>Spaces</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.LTB_DELIMConstant">
            <summary>Types of LTB Delimiters</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_CONLSTConstant.ANY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_CONLSTConstant.EXACT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.LTB_CONLSTConstant">
            <summary>Matching types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_CASEConstant.SENSITIVE">
            <summary>Case is used</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LTB_CASEConstant.INSENSITIVE">
            <summary>Ignore case</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.LTB_CASEConstant">
            <summary>Case handling of LTB strings</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LST_ITEMConstant.VALUE">
            <summary>Access the "Value" part of the LST item.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LST_ITEMConstant.NAME">
            <summary>Access the "Name" part of the LST item.</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.LST_ITEMConstant">
            <summary>LST data access</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.MOVEB">
            <summary>Move rectangle, with respect to bottom</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.MOVET">
            <summary>Move rectangle, with respect to top</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.MOVER">
            <summary>Move rectangle, with respect to right</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.MOVEL">
            <summary>Move rectangle, with respect to left</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.VCENTER">
            <summary>Center rectangle with respect to height</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.HCENTER">
            <summary>Center rectangle with respect to width</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.HEIGHT">
            <summary>Adjust rectangle's height</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.WIDTH">
            <summary>Adjust rectangle's width</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.BOTTOM">
            <summary>Adjust rectangle's bottom side</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.TOP">
            <summary>Adjust rectangle's top side</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.RIGHT">
            <summary>Adjust rectangle's right side</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant.LEFT">
            <summary>Adjust rectangle's left side</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.LAYOUT_CONSTRConstant">
            <summary>Layout constraint specifiers</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant.ITR_MODEL_LOGLIN">
            <summary>The ITR is set up with a log-linear transform.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant.EQUAL">
            <summary>The ITR is set up with an equal area transform.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant.NORMAL">
            <summary>The ITR is set up with a normal distribution transform.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant.LINEAR">
            <summary>The ITR is set up with a linear transform.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant.NONE">
            <summary>There is no specific zone model defined.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant.NOZONE">
            <summary>The ITR has no numeric zones defined (e.g. from a TBL file)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ITR_ZONE_MODELConstant">
            <summary>ITR Zone Model defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONEConstant.LOGLINEAR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONEConstant.SHADE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONEConstant.EQUALAREA">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONEConstant.NORMAL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONEConstant.LINEAR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_ZONEConstant.DEFAULT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ITR_ZONEConstant">
            <summary>Zoning Methods</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_POWERConstant.EXP">
            <summary>Exponential</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_POWERConstant._10">
            <summary>Power of 10</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ITR_POWERConstant">
            <summary>Power Zoning defines</summary>
            <tocexclude />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ITR_NULLConstant">
            <summary>Null ITR object</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant.CMY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant.RGB">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant.HSV">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.ITR_COLOR_MODELConstant">
            <summary>ITR Color Model defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.MULTIPOINT_Y">
            <summary>Multipoint warp in Y only (needs at least 3 points)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.LOG">
            <summary>Convert from linear to log coords in X and/or Y</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.MULTIPOINT">
            <summary>Multipoint warp (needs at least 3 points)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.QUAD">
            <summary>Quadrilateral warp (needs 4 points)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.TRANS3">
            <summary>Translate, rotate, scale X and Y (needs 3 pts or more, least-square fit)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.TRANS2">
            <summary>Translate, rotate, normal scale (needs 2 pts)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.TRANS1">
            <summary>Translate only (needs 1 point)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.NONE">
            <summary>No warp</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_WARPConstant.MATRIX">
            <summary>Matrix Warp</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_WARPConstant">
            <summary>Warp (Transformation) type</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_UNITConstant.FULLNAME">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_UNITConstant.ABBREVIATION">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_UNITConstant">
            <summary>Projection Unit Type</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.TEST">
            <summary>
tests the projection tables for internal consistency
and creates report files in the project directory.
string 1 - outout report file name
string 2 - ESRI coordinate strings file.  This contains one
ESRI coordinate string per line.  Lines that
start with '#' are skipped.
string 3 - not currently used
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.WRP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.NONE">
            <summary>
Not used for Read_IPJ.  This is used for
iSourceType_IPJ to indicate no projection.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.ANY">
            <summary>
Custom projection
string 1 - POSC Datum name
string 2 - POSC Datum transform name
string 3 - POSC Transform, "" if geographic
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.GCS">
            <summary>
Geographic coordinate system:
string 1 - POSC Datum name
string 2 - POSC Datum transform name
string 3 - not used.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.PCS">
            <summary>
Projected coordinate system:
string 1 - POSC PCS name
string 2 - POSC Datum transform name
string 3 - not used.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_TYPEConstant.PRJ">
            <summary>
Read from a PRJ file:
string 1 - Source file name
string 2 and 3 are not used.
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_TYPEConstant">
            <summary>IPJ Types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.UNITSDESCRIPTION">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.LOCALDATUMNAME">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.LOCALDATUMDESCRIPTION">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.UNITS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.PROJECTION">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.DATUM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant.COORDINATESYSTEM">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_PARM_LSTConstant">
            <summary>Projection List</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant.SECTION_CROOKED">
            <summary>
This is a vertical section that follows a
curving path, like a river or survey traverse.
The horizontal section location is the distance along
the path, while the vertical axis gives the elevation.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant._3D_MATRIX">
            <summary>A 3D matrix orientation</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant._3D">
            <summary>A 3D rotation/scaling/translation orientation</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant.DEPTH_SECTION">
            <summary>
This simple section has no azimuth or swing defined;
only the depth is of importance, and it is output as
the Y parameter, increasing downward. Used (for instance)
for strip logs in Wholeplot.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant.SECTION_NORMAL">
            <summary>
Same as &amp;lt;define&amp;gt;IPJ_ORIENT_SECTION&amp;lt;/define&amp;gt;, but the projection is perpendicular
to the section, not horizonatl, so elevatins are not preserved
on swung sections.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant.SECTION">
            <summary>
Has an azimuth and swing.
The section view projects all plotted objects
HORIZONTALLY onto the viewing plan in order to
preserve elevations, even if the section has a swing.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant.PLAN">
            <summary>
A plan view with a reference elevation and
optional rotation.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant.DEFAULT">
            <summary>
no special orientation - plan view. All views in maps
created before v5.1.3 will return this value.
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_ORIENTConstant">
            <summary>Projection Orientation</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.ORIENTATION_PARMS">
            <summary>Orientation parameters</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.METHOD_PARMS_NATIVE">
            <summary>Projection method parameters in GXF order (Native units for eastings/northings)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.LDATUMDESCRIPTION">
            <summary>Local datum description</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.GEOID">
            <summary>Geoid name if known</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.LDATUM_PARMS">
            <summary>
local datum parameters (dX,dY,dZ,rX,rY,rZ,scale)
See GXF revision 3 for parameter list order and
specifications.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.DATUM_PARMS">
            <summary>Datum parameters (major axis, flattening, prime meridian)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.METHOD_LABEL">
            <summary>Projection method parameters labels</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.METHOD_PARMS">
            <summary>Projection method parameters in GXF order</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.LLDATUM">
            <summary>Datum transform table name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.TYPE">
            <summary>Projection type description</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.UNIT_FULL">
            <summary>Full unit name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.UNIT_ABBR">
            <summary>Unit abbreviation</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.LDATUM">
            <summary>Local datum name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.ELLIPSOID">
            <summary>Ellipsoid name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.DATUM">
            <summary>Datum name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.METHOD">
            <summary>Projection method name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.PROJECTION">
            <summary>Projection name</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_NAMEConstant.PCS">
            <summary>Projected coordinate system name</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_NAMEConstant">
            <summary>Project Name</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.POINTLON_2">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.POINTLAT_2">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.POINTLON_1">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.POINTLAT_1">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.ANGLE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.AZIMUTH">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.PARALLEL_2">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.PARALLEL_1">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.LONORIGIN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.LATORIGIN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.FALSENORTH">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.FALSEEAST">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_CSPConstant.SCALE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_CSPConstant">
            <summary>Projection Setting</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.ZYX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.ZXY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.YZX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.YXZ">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.XZY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.XYZ">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant.DEFAULT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_3D_ROTATEConstant">
            <summary>3D Rotation Mode</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant.ORDER_ROTATION">
            <summary>Apply rotations in a specific order, determined by pdParm[7]</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant.INVERTZ">
            <summary>Invert the Z plane to make up down.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant.INVERTANGLES">
            <summary>Invert angle rotation during matrix creation</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant.NONE">
            <summary>Standard</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IPJ_3D_FLAGConstant">
            <summary>3D Flags</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant.YES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant.NO">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_XYZ_LABELConstant">
            <summary>XYZ Label Flags</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant.YES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant.NO">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_XYZ_INDEXConstant">
            <summary>
Flags whether to use grid index numbers as
station numbers.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant.IMU_WIND_CLIP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant.IMU_WIND_DUMMY">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_WIND_DUMMIESConstant">
            <summary>Option for handling out-of-range Z values</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant.IMU_WIND_GROUND">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant.IMU_WIND_GRID">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_WIND_COORDConstant">
            <summary>Output grid coordinate units</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_TRENDConstant.EDGE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_TRENDConstant.ALL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_TRENDConstant">
            <summary>Points in grid to use</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_TRANSConstant.X">
            <summary>MUST be parallel to X-Axis</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_TRANSConstant.Y">
            <summary>MUST be parallel to Y-Axis</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_TRANSConstant.DEFAULT">
            <summary>Can be ANY orientation</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_TRANSConstant">
            <summary>
Transpose Options available for GridTrns_IMU
implies original grid lines:
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant.YES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant.NO">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_STAT_FORCEDConstant">
            <summary>Defined options for forcing recalculating the grid values</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_MASKConstant.OUTSIDE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_MASKConstant.INSIDE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_MASKConstant">
            <summary>Defined options for masking grids</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant.MAX">
            <summary>Maximum number of inaccuracy bits (22 Bits)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant.DEFAULT">
            <summary>Default inaccuracy in floats (7 Bits)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant.EXACT">
            <summary>Exact CRC</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_FLOAT_CRC_BITSConstant">
            <summary>Bits to use in float CRC's</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant.Y">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant.X">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant.NO">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_FILT_HZDRVConstant">
            <summary>
Flags which indicate which type of horizontal derivative
is being applied (X direction, Y direction, none at all)
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant.YES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant.NO">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_FILT_FILEConstant">
            <summary>
Flags which indicate if a file is to be used to read the
filter values
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant.YES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant.NO">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_FILT_DUMMYConstant">
            <summary>
Settings for placing dummy values in grid if any of filter
values are dummy
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant.SQUARE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant.LINEAR">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_FILL_ROLLOPTConstant">
            <summary>Defines for Grid Filling Method Options</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant.SQUARE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant.RECTANGLE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_EXPAND_SHAPEConstant">
            <summary>Shape of output grid</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant.MAX">
            <summary>Maximum number of inaccuracy bits (51 Bits)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant.DEFAULT">
            <summary>Default inaccuracy in double (10 Bits)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant.EXACT">
            <summary>Exact CRC</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_DOUBLE_CRC_BITSConstant">
            <summary>Bits to use in double CRC's</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant.MAX">
            <summary>Output grid is sized to maximum combined area of both grids</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant._1">
            <summary>Output grid is sized to grid 2</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant._0">
            <summary>Output grid is sized to grid 1</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant.MIN">
            <summary>Output grid is sized to overlapping region</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_BOOL_SIZINGConstant">
            <summary>Sizing option</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant.XOR">
            <summary>Overlap areas are dummied</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant.OR">
            <summary>Valid areas are where either grid is a valid value</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant.AND">
            <summary>Valid areas are only where grids overlap</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_BOOL_OPTConstant">
            <summary>Boolean logic option</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant._2">
            <summary>Overlap values use grid 2 value</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant._1">
            <summary>Overlap values use grid 1 value</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant.AVE">
            <summary>Overlap values are averaged</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMU_BOOL_OLAPConstant">
            <summary>Overlapping area option</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant.ASPECT">
            <summary>Will maintain aspect ratio</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant.FIT">
            <summary>Will fit the image to fill the specified area</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMG_RELOCATEConstant">
            <summary>Relocation Style</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rCOMPRESSION_RATIO">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rMULT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rBASE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rROT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rDY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rDX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rYO">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.rXO">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iNE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iNV">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iNY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iNX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iKX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iRENDER">
            <summary>
Render modes are:    0 - interpolate
1 - pixelate
2 - color
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iDATTYPE">
            <summary>
DATTYPE is the native element type of the DAT.
Types are:   0 - byte
1 - unsigned 16-bit short
2 - 16-bit short
3 - 32-bit long
4 - 32-bit float
5 - 64-bit double
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iIMGTYPE">
            <summary>The element type used to open the IMG.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iWRITEPG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iPG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_QUERYConstant.iWRITE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMG_QUERYConstant">
            <summary>Information to Query</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_FILEConstant.READORWRITE">
            <summary>
Allows you to open read-only grids to change the
projection or location information.  If you can write
to the original grid (dat), the changed projection
or location information will be passed on to the grid,
otherwise changes will only occur in the .gi file.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_FILEConstant.READWRITE">
            <summary>Reading and writting</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.IMG_FILEConstant.READONLY">
            <summary>Reading only</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMG_FILEConstant">
            <summary>Image open modes</summary>
            <tocexclude />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.IMG_NULLConstant">
            <summary>Image Null</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant.GRID3D_THEMATIC">
            <summary>THEMATIC</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant.GRID3D_VECTOR">
            <summary>VECTOR</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant.GRID3D_DOUBLE">
            <summary>DOUBLE</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GRID3D_TYPEConstant">
            <summary>Type of Voxset</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.MINESIGHT">
            <summary>MINESIGHT files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.MICROMINE">
            <summary>MICROMINE files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.GEMCOM">
            <summary>GEMCOM files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.DATAMINE">
            <summary>Datamine DM files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.SURPAC">
            <summary>Surpac STR and DTM files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.DGN">
            <summary>Microstation DGN files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.ARCVIEW">
            <summary>ArcView files</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_TYPEConstant.MAPINFO">
            <summary>Mapinfo Files</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GIS_TYPEConstant">
            <summary>Type of file</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_MAP2DConstant.NSSECTION">
            <summary>Section view, North-South</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_MAP2DConstant.EWSECTION">
            <summary>Section view, East-West</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_MAP2DConstant.PLAN">
            <summary>Plan view</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GIS_MAP2DConstant">
            <summary>View type to create</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant.GMSYS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant.CROOKED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant.SECTION">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant.PLAN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant.UNKNOWN">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SECTION_ORIENTATIONConstant">
            <summary>Section orientation types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant.READWRITE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant.READ">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEOSTRING_OPENConstant">
            <summary>Open Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TIME_FORMATConstant.HMS">
            <summary>Time (HH.MMSSSSSSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.TIME_FORMATConstant.COLON">
            <summary>Standard Time (HH:MM:SS.SSSS)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.TIME_FORMATConstant">
            <summary>Old Time formats</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant.SYS_CRYPT_GLOBAL_ID">
            <summary>Use the non-changing computer ID</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant.SYS_CRYPT_COMPUTER_ID">
            <summary>Use the current computer ID</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant.SYS_CRYPT_LICENSE_KEY">
            <summary>Using the current license key</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.SYS_CRYPT_KEYConstant">
            <summary>Special Encryption Keys</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_TYPE_DEFAULT">
            <summary>Default. Can be used only when a method specifically allows a default type.</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_MAXTYPE">
            <summary>Maximum supported type (&amp;lt;define&amp;gt;GS_DOUBLE2D&amp;lt;/define&amp;gt;)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_DOUBLE2D">
            <summary>2 x 64-Bit floating point</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_FLOAT2D">
            <summary>2 x 32-Bit floating point</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_DOUBLE3D">
            <summary>3 x 64-Bit floating point</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_FLOAT3D">
            <summary>3 x 32-Bit floating point</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_ULONG64">
            <summary>64-Bit unsigned long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_LONG64">
            <summary>64-Bit signed long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_ULONG">
            <summary>Unsigned Long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_UBYTE">
            <summary>Unsigned byte</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_DOUBLE">
            <summary>64-Bit floating point</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_FLOAT">
            <summary>32-Bit floating point</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_LONG">
            <summary>Signed Long</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_SHORT">
            <summary>Signed Short</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_USHORT">
            <summary>Unsigned Short</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_TYPESConstant.GS_BYTE">
            <summary>Signed Byte</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GS_TYPESConstant">
            <summary>
Special use data types. String are indicated by a
negative maximum string length (including NULL).
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_GEOGRAPHIC_3">
            <summary>GeoGraph (DEGMMmmmm or DEGMM.mmmm or DEG.MM.mmmm)  (mmmm: decimal minute)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_GEOGRAPHIC_2">
            <summary>GeoGraph (DEG.MMSSSSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_GEOGRAPHIC_1">
            <summary>GeoGraph (DEG:MM:SS.SSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_GEOGRAPHIC">
            <summary>Standard Geographical (DEG.MM.SS.SSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_DATE_MMDDYYYY">
            <summary>Date (MM/DD/YYYY or MM/DD/YY century 19)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_DATE_DDMMYYYY">
            <summary>Date (DD/MM/YYYY or DD/MM/YY century 20 if YY&gt;50, DISC compliant)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_DATE_YYYYMMDD">
            <summary>Standard Date (YYYY/MM/DD, YY/MM/DD, YYYYMMDD or YYMMDD, space or / delimited)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_TIME_HHMMSS">
            <summary>Time (HHMMSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_TIME_HMS">
            <summary>Time (HH.MMSSSSSSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_TIME_COLON">
            <summary>Standard Time (HH:MM:SS.SSSS)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_EXP">
            <summary>Exponential notation (-1.345e45)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_SIG_DIG">
            <summary>Decimals imply number of significant digits</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GS_FORMATSConstant.FORMAT_DECIMAL">
            <summary>Standard numbers (-134.534)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GS_FORMATSConstant">
            <summary>
Special use data types. String are indicated by a
negative maximum string length (including NULL).
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_VARConstant.GS_REAL">
            <summary>Floating Point (double)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_VARConstant.GS_INT">
            <summary>Integer (long)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_VARConstant">
            <summary>
Variable types.
Use -X for strings of X length
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_BOOLConstant.GS_TRUE">
            <summary>True</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_BOOLConstant.GS_FALSE">
            <summary>False</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_BOOLConstant">
            <summary>Boolean values</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.GS_MULTI_PATH">
            <summary>Same as &amp;lt;define&amp;gt;STR_MULTI_FILE&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.GS_MAX_PATH">
            <summary>Same as &amp;lt;define&amp;gt;STR_FILE&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_MULTI_PATH">
            <summary>Multi-file path (16384)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_MAX_PATH">
            <summary>Maximum path length (1040)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_GXF">
            <summary>Size of strings for GXF projection info (160).</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_DB_SYMBOL">
            <summary>Name of database symbol (64)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_MULTI_FILE">
            <summary>Name of multiple files (16384)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_FILE">
            <summary>Name of a file (1040)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_VIEW_GROUP">
            <summary>Combined View/Group Name (2080)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_GROUP">
            <summary>Name of a Group (1040)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_VIEW">
            <summary>Name of a View (2080)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_VERY_LONG">
            <summary>Default Size for a long string (16384 characters)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_ERROR">
            <summary>Default Size for an error string (2048 characters)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_DEFAULT_LONG">
            <summary>Default Size for a long string (1024 characters)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_DEFAULT_SHORT">
            <summary>Default Size for a short string (64 characters)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant.STR_DEFAULT">
            <summary>Default Size for almost everything (128 characters)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_STRING_SIZEConstant">
            <summary>
Default string sized for different uses
GX's must use these unless there is a
very good reason not to. The path strings
here are generally larger than what is possible
in the OS, but it is defined as such for Unicode
conversion reasons.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_LIMITSConstant.rMAX">
            <summary>Largest Floating Point (1.0E32)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_LIMITSConstant.rMIN">
            <summary>Smallest Floating Point (-0.9E32)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_LIMITSConstant.iMAX">
            <summary>Largest Integer (2147483647)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_LIMITSConstant.iMIN">
            <summary>Smallest Integer (-2147483646)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_LIMITSConstant">
            <summary>Data ranges of numbers</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R8EPSILON">
            <summary>(double        )   1.0E-32</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R4EPSILON">
            <summary>(float         )   1.0E-32</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R8DM">
            <summary>(double        )  -1.0E32</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R8MN">
            <summary>(double        )  -0.9E32</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R8MX">
            <summary>(double        )   1.0E32</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R4DM">
            <summary>
(float         )  -1.0E32                 r4max=(float)1.0E32,
r4dum=(float)-1.0E32;
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R4MN">
            <summary>(float         )  -0.9E32     const float r4min=(float)-0.9E32,</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_R4MX">
            <summary>(float         )   1.0E32   (In C these must be declared as external constants:)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U8DM">
            <summary>(__GS_UINT64   )   0xFFFFFFFFFFFFFFFF</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U8MN">
            <summary>(__GS_UINT64   )   0x0000000000000000</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U8MX">
            <summary>(__GS_UINT64   )   0xFFFFFFFFFFFFFFFE</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S8DM">
            <summary>(__GS_INT64    )   0x8000000000000000</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S8MN">
            <summary>(__GS_INT64    )   0x8000000000000001</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S8MX">
            <summary>(__GS_INT64    )   0x7FFFFFFFFFFFFFFF</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U4DM">
            <summary>(unsigned long )   0xFFFFFFFF</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U4MN">
            <summary>(unsigned long )   0x00000000</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U4MX">
            <summary>(unsigned long )   0xFFFFFFFE</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S4DM">
            <summary>-2147483647L</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S4MN">
            <summary>-2147483646L</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S4MX">
            <summary>2147483647L</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U2DM">
            <summary>(unsigned short)   65535U</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U2MN">
            <summary>(unsigned short)   0U</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_U2MX">
            <summary>(unsigned short)   65534U</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S2DM">
            <summary>(short         )  -32767</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S2MN">
            <summary>(short         )  -32766</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant.GS_S2MX">
            <summary>(signed char   )   127</summary>
            <summary>(signed char   )  -126</summary>
            <summary>(signed char   )  -127</summary>
            <summary>(unsigned char )   254U</summary>
            <summary>(unsigned char )   0U</summary>
            <summary>(unsigned char )   255U</summary>
            <summary>(short         )   32767</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_FULL_LIMITSConstant">
            <summary>Data ranges of all Geosoft types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DUMMYConstant.rDUMMY">
            <summary>Floating Point Dummy (-1.0E32)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO_DUMMYConstant.iDUMMY">
            <summary>Integer Dummy (-2147483647)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO_DUMMYConstant">
            <summary>Special numbers indicating NULLL</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DATE_FORMATConstant.MMDDYYYY">
            <summary>Date (MM/DD/YYYY or MM/DD/YY century 19)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DATE_FORMATConstant.DDMMYYYY">
            <summary>Date (DD/MM/YYYY or DD/MM/YY century 20 if YY&gt;50, DISC compliant)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DATE_FORMATConstant.YYYYMMDD">
            <summary>Standard Date (YYYY/MM/DD, YY/MM/DD, YYYYMMDD or YYMMDD, space or / delimited)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DATE_FORMATConstant">
            <summary>Old Date formats</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CRC_INIT_VALUEConstant.CRC_INIT_VALUE">
            <summary>0xFFFFFFFF</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CRC_INIT_VALUEConstant">
            <summary>Initial value for starting a CRC</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.TIF">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.BMP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.PNG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.JPG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.ECW">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.NATIVE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.LOSSY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.SEMILOSSY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.LOSSLESS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant.DEFAULT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DSEL_PICTURE_QUALITYConstant">
            <summary>Line Label Formats</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.NULLSYMBConstant.NULLSYMB">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.NULLSYMBConstant">
            <summary>Database Null</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.DISCRETE_TIME_WINDOWS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.VELOCITIES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.DEPTHS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.ELEVATIONS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.FREQUENCIES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.TIMES">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.TIME_WINDOWS">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant.NONE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_ARRAY_BASETYPEConstant">
            <summary>Array channel base coordinate type</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_WAITConstant.INFINITY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_WAITConstant.NONE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_WAITConstant">
            <summary>Wait Times</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_SYMB_NAME_SIZEConstant.DB_SYMB_NAME_SIZE">
            <summary>Same &amp;lt;define&amp;gt;STR_DB_SYMBOL&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_SYMB_NAME_SIZEConstant">
            <summary>Size of Symbol Names</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant.DB_SYMB_USER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant.DB_SYMB_CHAN">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant.DB_SYMB_LINE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant.DB_SYMB_BLOB">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_SYMB_TYPEConstant">
            <summary>Symbol types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_OWNConstant.USER">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_OWNConstant.SHARED">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_OWNConstant">
            <summary>Symbol Ownership</summary>
            <tocexclude />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_NULLConstant">
            <summary>Database Null</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_NAMEConstant.FILE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_NAMEConstant">
            <summary>Get Database file names</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LOCKConstant.READWRITE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LOCKConstant.READONLY">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LOCKConstant.NONE">
            <summary>Used only by GetSymbLock_DB</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_LOCKConstant">
            <summary>Lock Modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.RANDOM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.SPECIAL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.TREND">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.TEST">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.TIE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.BASE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant.NORMAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_LINE_TYPEConstant">
            <summary>Line types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant.EXCLUDE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant.INCLUDE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_LINE_SELECTConstant">
            <summary>Select modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.LINK">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.DATE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.FULL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.FLIGHT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.TYPE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.VERSION">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant.LINE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_LINE_LABEL_FORMATConstant">
            <summary>Line Label Formats</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.CHANGESLOST">
            <summary>Will changes to this database be lost when this database is closed?</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.MAX_BLOCK_SIZE">
            <summary>Naximum number of bytes in a block</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.INDEX_SIZE">
            <summary>Size of Index (in kbytes)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.FILE_SIZE">
            <summary>Entire Size of File (in kbytes)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.BLOB_SIZE">
            <summary>Number of pages given to blobs</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.COMP_LEVEL">
            <summary>Compression Level in use</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.FREE_SIZE">
            <summary>Number of Free Blocks in the Database</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.LOST_SIZE">
            <summary>Number of Lost Blocks in the Database</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.DATA_SIZE">
            <summary>Number of Blocks in Entire Database</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.PAGE_SIZE">
            <summary>Size of the smallest database block in bytes</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.USERS_USED">
            <summary>Number of Users in the database</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.CHANS_USED">
            <summary>Number of Channels currently used</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.LINES_USED">
            <summary>Number of Lines currently used</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.BLOBS_USED">
            <summary>Number of Blobs currently used</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.USERS_MAX">
            <summary>Maximum number of Users</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.CHANS_MAX">
            <summary>Maximum Number of Channels in the Database</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.LINES_MAX">
            <summary>Maximum number of lines in the database</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_INFOConstant.BLOBS_MAX">
            <summary>Maximum Number of Blobs in the Database</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_INFOConstant">
            <summary>Integer Database Information</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_GROUP_CLASS_SIZEConstant.DB_GROUP_CLASS_SIZE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_GROUP_CLASS_SIZEConstant">
            <summary>Class name max size</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant.Y">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant.X">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant.NONE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_COORDPAIRConstant">
            <summary>Used to indicate the matching coordinate pair of a channel.</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_COMPConstant.SIZE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_COMPConstant.SPEED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_COMPConstant.NONE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_COMPConstant">
            <summary>Supported compression levels</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant.DB_CHAN_Z">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant.DB_CHAN_Y">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant.DB_CHAN_X">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CHAN_SYMBOLConstant">
            <summary>Channel symbol for special channels</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant.DB_CHAN_PROTECTED">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant.DB_CHAN_UNPROTECTED">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CHAN_PROTECTIONConstant">
            <summary>Channel Read-only Protection Status</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.HEX">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.SIGDIG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.GEOGR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.DATE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.TIME">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.EXP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant.NORMAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CHAN_FORMATConstant">
            <summary>Channel formats</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_USERConstant.NORMAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CATEGORY_USERConstant">
            <summary>User Categories</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant.NORMAL">
            <summary>Same as &amp;lt;define&amp;gt;DB_CATEGORY_LINE_FLIGHT&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant.GROUP">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant.FLIGHT">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CATEGORY_LINEConstant">
            <summary>Line Categories</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.ULONG64">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.LONG64">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.ULONG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.UBYTE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.DOUBLE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.FLOAT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.LONG">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.SHORT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.USHORT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant.BYTE">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CATEGORY_CHANConstant">
            <summary>
Channel Categories
For STRING type channels, use negative integers
to specify channel width. For example, use -10
to define a string channel with up to 10 characters.
Use the GS_SIMPLE_TYPE() macro to convert to INT,REAL or string.
</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_CATEGORY_BLOBConstant.NORMAL">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_CATEGORY_BLOBConstant">
            <summary>Blob Categories</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DB_ACTIVITY_BLOBConstant.DB_ACTIVITY_BLOB">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DB_ACTIVITY_BLOBConstant">
            <summary>Activity Blob</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant.POINTDATA">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant.WIREFRAME_PT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant.BLOCKMODEL">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant.DTM">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant.WIREFRAME_TR">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant.STRING">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GIS_DMTYPEConstant">
            <summary>Datamine file types</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_XGDConstant.WRITE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_XGDConstant.NEW">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_XGDConstant.READ">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DAT_XGDConstant">
            <summary>DAT Open modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant.SAVE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant.OPEN">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DAT_FILE_FORMConstant">
            <summary>Type of form</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_FILEConstant.IMAGE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.DAT_FILEConstant.GRID">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.DAT_FILEConstant">
            <summary>Type of grid</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_SEEKConstant.EOF">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_SEEKConstant.CURRENT">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_SEEKConstant.START">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BF_SEEKConstant">
            <summary>Seek Location</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant.BF_READWRITE_APP">
            <summary>Open and append onto pre-existing file (cannot be read from)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant.BF_READWRITE_OLD">
            <summary>File must pre-exist</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant.BF_READWRITE_NEW">
            <summary>Erases existing file</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant.BF_READ">
            <summary>Read only</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BF_OPEN_MODEConstant">
            <summary>Open Status</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_ENCODEConstant.UTF8">
            <summary>String is stored as &amp;lt;define&amp;gt;UTF8&amp;lt;/define&amp;gt;</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_ENCODEConstant.ANSI">
            <summary>String is stored as ANSI code page</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BF_ENCODEConstant">
            <summary>The way a string is encoded</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_CLOSEConstant.BF_DELETE">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_CLOSEConstant.BF_KEEP">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BF_CLOSEConstant">
            <summary>Close Flags</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant.MSB">
            <summary>Most significant byte first (Mororola, Sun)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant.LSB">
            <summary>Least significant byte first (Intel, Windows)</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.BF_BYTEORDERConstant">
            <summary>Byte order for read/write</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_RENDERConstant.FADE">
            <summary>Multiplies current colors by the input's colors over 255 (input works as the percentage of color to preserve)</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_RENDERConstant.BLEND_ALL">
            <summary>Adds and divides by the number of colors</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_RENDERConstant.BLEND">
            <summary>Adds and divides by the number of non-dummy colors</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_RENDERConstant.ADD">
            <summary>Add all the colors together</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.AGG_RENDERConstant">
            <summary>Aggregation rendering modes</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_MODELConstant.CMY">
            <summary>Cyan Magenta Yellow</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_MODELConstant.RGB">
            <summary>Red Green Blue</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_MODELConstant.HSV">
            <summary>Hue Saturation Value</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.AGG_MODELConstant">
            <summary>Aggregation color model defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.LAST">
            <summary>
The last ITR used to display this
data will be used if it exists.  If it
does not exist, the behaviour is the same
as &amp;lt;define&amp;gt;AGG_LAYER_ZONE_DEFAULT&amp;lt;/define&amp;gt;.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.LOGLINEAR">
            <summary>Log Linear Distribution</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.SHADE">
            <summary>
If &amp;lt;define&amp;gt;AGG_LAYER_ZONE_SHADE&amp;lt;/define&amp;gt; is specified, a shaded relief
layer is created from the specified grid.  A new grid
file will also be created to hold the shaded relief
image data.  This file will have the same name as the
original grid but with "_s" added to the root name.
It will always be located in the workspace directory
regardless of the location of the original source image.
If the file already exists, it will used as it is.
Shading is always at inclination = declination = 45 deg.
with default scaling.  If different shading is desired,
use the LayerShadeIMG_AGG method.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.EQUALAREA">
            <summary>Equal Area Distribution</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.NORMAL">
            <summary>Normal Distribution</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.LINEAR">
            <summary>Linear Distribution</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant.DEFAULT">
            <summary>
If a color table with no color transform is passed
it will be used with the default zoning
method of the data, which is usually
&amp;lt;define&amp;gt;AGG_LAYER_ZONE_EQUALAREA&amp;lt;/define&amp;gt;.
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.AGG_LAYER_ZONEConstant">
            <summary>Aggregate Layer Zone defines</summary>
            <tocexclude />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant.GEO3DV_MVIEW_WRITEOLD">
            <summary />
        </member>
        <member name="F:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant.GEO3DV_MVIEW_READ">
            <summary />
        </member>
        <member name="T:GeoEngine.Core.GXNetX.GEO3DV_OPENConstant">
            <summary>Open Modes</summary>
            <tocexclude />
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CERROR.#ctor(System.String,System.String,System.Int32)">
            <summary>Create an error</summary>
        </member>
        <member name="P:GeoEngine.Core.GXNetX.CERROR.Code">
            <summary>Get the error code</summary>
        </member>
        <member name="P:GeoEngine.Core.GXNetX.CERROR.ModuleName">
            <summary>Get the module name the error occured in</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CERROR.m_iErrorCode">
            <summary>The error number</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.UnregisterResourceTracking">
            <summary>Unregister the delegate</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.RegisterResourceTracking">
            <summary>Register a delegate to be notified if this object is deleted by the underlying system</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.OnDelete(System.IntPtr)">
            <summary>Set the internal handle, to null</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.CheckError(GeoEngine.Core.GXNetX.CGXNETCore,System.String@,System.String@,System.Int32*!System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
            <summary>Check to see if an error occurred</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.bIsNull">
            <summary>Check to see if class is null</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.bIsValid">
            <summary>Check to see if class is not null</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.CheckValid">
            <summary>Check to see if class is still valid, or if it has already been destroyed</summary>
        </member>
        <member name="P:GeoEngine.Core.GXNetX.CHANDLE.GeoGXHandle">
            <summary>
Gets or sets the GeoGX GeoGXHandle
</summary>
        </member>
        <member name="P:GeoEngine.Core.GXNetX.CHANDLE.Handle">
            <summary>
Gets or sets the Handle
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CHANDLE.m_bDestroy">
            <summary>Holds whether we need to cleanup the underlying c++ class</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CHANDLE.m_pHandle">
            <summary>Hold a pointer to unmanaged class</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CHANDLE.m_pDelegate">
            <summary>Hold a pointer to the delegate so that it doesn't get deleted until this class does</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CHANDLE.m_bDisposed">
            <summary>Holds whether this class has been destroyed yet</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CHANDLE.m_gxNetShared">
            <summary>Handle which corresponds to geogx object that created this object</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CHANDLE.m_hHandle">
            <summary>Handle which corresponds to the ID of this object in Oasis</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CHANDLE.DeleteDelegate">
            <summary>Delegate to notify class when this object has been deleted</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.Finalize">
            <summary>
finalizer
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CHANDLE.#ctor">
            <summary>
Constructors
</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CHANDLE">
            <summary>
default summary
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.sCheckTerminate">
            <summary>
Check to see if terminate has been called by a wrapper.
</summary>
            <returns>
0 - No
</returns>
            <remarks />
            <seealso />
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.sGetError(System.String@,System.String@,System.Int32@)">
            <summary>
Gets the error string for 1 error.
</summary>
            <param name="param1">Module name buffer (should be at least 64 bytes)</param>
            <param name="param2">Error buffer (should be at least 2048 bytes)</param>
            <param name="param3">Error number</param>
            <returns>
0 - no error
</returns>
            <remarks />
            <seealso />
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.ShowError">
            <summary>
Shows any errors to stdout or to gui if gui app
</summary>
            <returns>
Nothing
</returns>
            <remarks />
            <seealso />
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.iCheckError">
            <summary>
Test if Geosoft function has terminated with an error
</summary>
            <returns>
0 if no errors.
</returns>
            <remarks>
                <pre>For Geosoft functions that do not return an error </pre>
                <pre>//                      condition (all of them except those specifically designed</pre>
                <pre>//                      for DLL use) you must call this function to test if an</pre>
                <pre>//                      error has occured in the Geosoft function.  If an error</pre>
                <pre>//                      has occured, just clean-up and return.  Error messages</pre>
                <pre>//                      will have been registered by the Geosoft function.</pre>
            </remarks>
            <seealso />
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetDoubleVV(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>
Get a VV array of doubles.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetFloatVV(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>
Get a VV array of floats.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetShortVV(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>
Get a VV array of shorts.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetUShortVV(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>
Get a VV array of unsigned shorts.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetByteVV(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>
Get a VV array of bytes.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetIntVV(GeoEngine.Core.GXNetX.CVV,System.Int32)">
            <summary>
Get a VV array of integers.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetDoubleVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>
Get a VM array of doubles.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetFloatVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>
Get a VM array of floats.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetShortVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>
Get a VM array of shorts.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetUShortVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>
Get a VM array of unsigned shorts.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetByteVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>
Get a VM array of bytes.
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetIntVM(GeoEngine.Core.GXNetX.CVM,System.Int32)">
            <summary>
Get a VM array of integers.
</summary>
        </member>
        <member name="F:GeoEngine.Core.GXNetX.CGXNETCore.m_hGeoGxHandle">
            <summary>Handle to geogx object</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.GetGeoGXHandle">
            <summary>
Get the gx handle from tls
</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.Finalize">
            <summary>finalizer (cleans up unmanaged resources)</summary>
        </member>
        <member name="M:GeoEngine.Core.GXNetX.CGXNETCore.Dispose">
            <summary>Default destructor</summary>
        </member>
        <member name="T:GeoEngine.Core.GXNetX.CGXNETCore">
            <summary />
        </member>
    </members>
</doc>